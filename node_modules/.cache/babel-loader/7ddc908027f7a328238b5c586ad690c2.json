{"ast":null,"code":"/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport { createCanvasContext2D, releaseCanvas } from './dom.js';\nimport { getUid } from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function.\n   * @param {function(VectorRenderTile):void} removeSourceTiles Function.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles, removeSourceTiles) {\n    super(tileCoord, state, {\n      transition: 0\n    });\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D|null}\n     */\n    this.context_ = null;\n\n    /**\n     * Executor groups. Read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<string, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {!function(VectorRenderTile):void}\n     * @private\n     */\n    this.removeSourceTiles_ = removeSourceTiles;\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext() {\n    if (!this.context_) {\n      this.context_ = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_;\n  }\n\n  /**\n   * @return {boolean} Tile has a rendering context.\n   */\n  hasContext() {\n    return !!this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.hasContext() ? this.getContext().canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   * @override\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.context_) {\n      releaseCanvas(this.context_);\n      canvasPool.push(this.context_.canvas);\n      this.context_ = null;\n    }\n    this.removeSourceTiles_(this);\n    this.sourceTiles.length = 0;\n    super.release();\n  }\n}\nexport default VectorRenderTile;","map":{"version":3,"names":["Tile","createCanvasContext2D","releaseCanvas","getUid","canvasPool","VectorRenderTile","constructor","tileCoord","state","urlTileCoord","getSourceTiles","removeSourceTiles","transition","context_","executorGroups","loadingSourceTiles","hitDetectionImageData","replayState_","sourceTiles","errorTileKeys","wantedResolution","bind","undefined","removeSourceTiles_","wrappedTileCoord","getContext","hasContext","getImage","canvas","getReplayState","layer","key","dirty","renderedRenderOrder","renderedResolution","NaN","renderedRevision","renderedTileResolution","renderedTileRevision","renderedTileZ","load","release","push","length"],"sources":["C:/prj/cnbcs_web_frontend/node_modules/ol/VectorRenderTile.js"],"sourcesContent":["/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function.\n   * @param {function(VectorRenderTile):void} removeSourceTiles Function.\n   */\n  constructor(\n    tileCoord,\n    state,\n    urlTileCoord,\n    getSourceTiles,\n    removeSourceTiles,\n  ) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D|null}\n     */\n    this.context_ = null;\n\n    /**\n     * Executor groups. Read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<string, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {!function(VectorRenderTile):void}\n     * @private\n     */\n    this.removeSourceTiles_ = removeSourceTiles;\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext() {\n    if (!this.context_) {\n      this.context_ = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_;\n  }\n\n  /**\n   * @return {boolean} Tile has a rendering context.\n   */\n  hasContext() {\n    return !!this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.hasContext() ? this.getContext().canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   * @override\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.context_) {\n      releaseCanvas(this.context_);\n      canvasPool.push(this.context_.canvas);\n      this.context_ = null;\n    }\n    this.removeSourceTiles_(this);\n    this.sourceTiles.length = 0;\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}