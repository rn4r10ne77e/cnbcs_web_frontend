{"ast":null,"code":"import { SERVER_URL } from './config';\nimport URL from 'context/url';\nimport CODE from 'context/code';\nexport function requestFetch(url, requestOptions, handler, errorHandler) {\n  console.groupCollapsed(\"requestFetch\");\n  console.log(\"requestFetch [URL] : \", SERVER_URL + url);\n  console.log(\"requestFetch [requestOption] : \", requestOptions);\n\n  //CORS ISSUE 로 인한 조치 - origin 및 credentials 추가 \n  // origin 추가\n  if (!requestOptions['origin']) {\n    requestOptions = {\n      ...requestOptions,\n      origin: SERVER_URL\n    };\n  }\n  // credentials 추가 \n  if (!requestOptions['credentials']) {\n    requestOptions = {\n      ...requestOptions,\n      credentials: 'include'\n    };\n  }\n  fetch(SERVER_URL + url, requestOptions).then(response => {\n    // response Stream. Not completion object\n    //console.log(\"requestFetch [Response Stream] \", response); \n    return response.json();\n  }).then(resp => {\n    if (Number(resp.resultCode) === Number(CODE.RCV_ERROR_AUTH)) {\n      alert(\"Login Alert\");\n      window.location.href = URL.LOGIN;\n      return false;\n    } else {\n      return resp;\n    }\n  }).then(resp => {\n    console.groupCollapsed(\"requestFetch.then()\");\n    console.log(\"requestFetch [response] \", resp);\n    if (typeof handler === 'function') {\n      handler(resp);\n    } else {\n      console.log('egov fetch handler not assigned!');\n    }\n    console.groupEnd(\"requestFetch.then()\");\n  }).catch(error => {\n    console.error('There was an error!', error);\n    if (error === 'TypeError: Failed to fetch') {\n      alert(\"서버와의 연결이 원활하지 않습니다. 서버를 확인하세요.\");\n    }\n    if (typeof errorHandler === 'function') {\n      errorHandler(error);\n    } else {\n      console.error('egov error handler not assigned!');\n      alert(\"ERR : \" + error.message);\n    }\n  }).finally(() => {\n    console.log(\"requestFetch finally end\");\n    console.groupEnd(\"requestFetch\");\n  });\n}","map":{"version":3,"names":["SERVER_URL","URL","CODE","requestFetch","url","requestOptions","handler","errorHandler","console","groupCollapsed","log","origin","credentials","fetch","then","response","json","resp","Number","resultCode","RCV_ERROR_AUTH","alert","window","location","href","LOGIN","groupEnd","catch","error","message","finally"],"sources":["C:/prj/cnbcs_web_frontend/src/context/egovFetch.js"],"sourcesContent":["import { SERVER_URL } from './config';\r\n\r\nimport URL from 'context/url';\r\nimport CODE from 'context/code';\r\n\r\nexport function requestFetch(url, requestOptions, handler, errorHandler) {\r\n    console.groupCollapsed(\"requestFetch\");\r\n    console.log(\"requestFetch [URL] : \", SERVER_URL + url);\r\n    console.log(\"requestFetch [requestOption] : \", requestOptions);\r\n\r\n    //CORS ISSUE 로 인한 조치 - origin 및 credentials 추가 \r\n    // origin 추가\r\n    if (!requestOptions['origin']) {\r\n        requestOptions = { ...requestOptions, origin: SERVER_URL };\r\n    }\r\n    // credentials 추가 \r\n    if (!requestOptions['credentials']) {\r\n        requestOptions = { ...requestOptions, credentials: 'include' };\r\n    }\r\n\r\n    fetch(SERVER_URL + url, requestOptions)\r\n        .then(response => {// response Stream. Not completion object\r\n            //console.log(\"requestFetch [Response Stream] \", response); \r\n            return response.json();\r\n        })\r\n        .then((resp) => {\r\n            if (Number(resp.resultCode) === Number(CODE.RCV_ERROR_AUTH)) {\r\n                alert(\"Login Alert\");\r\n                window.location.href = URL.LOGIN;\r\n                return false;\r\n            } else {\r\n                return resp;\r\n            }\r\n        })\r\n        .then((resp) => {\r\n            console.groupCollapsed(\"requestFetch.then()\");\r\n            console.log(\"requestFetch [response] \", resp);\r\n            if (typeof handler === 'function') {\r\n                handler(resp);\r\n            } else {\r\n                console.log('egov fetch handler not assigned!');\r\n            }\r\n            console.groupEnd(\"requestFetch.then()\");\r\n        })\r\n        .catch(error => {\r\n            console.error('There was an error!', error);\r\n            if (error === 'TypeError: Failed to fetch') {\r\n                alert(\"서버와의 연결이 원활하지 않습니다. 서버를 확인하세요.\");\r\n            }\r\n            \r\n            if (typeof errorHandler === 'function') {\r\n                errorHandler(error);\r\n            } else {\r\n                console.error('egov error handler not assigned!');\r\n                alert(\"ERR : \" + error.message);\r\n            }\r\n        })\r\n        .finally(() => {\r\n            console.log(\"requestFetch finally end\");\r\n            console.groupEnd(\"requestFetch\");\r\n        });\r\n}"],"mappings":"AAAA,SAASA,UAAU,QAAQ,UAAU;AAErC,OAAOC,GAAG,MAAM,aAAa;AAC7B,OAAOC,IAAI,MAAM,cAAc;AAE/B,OAAO,SAASC,YAAYA,CAACC,GAAG,EAAEC,cAAc,EAAEC,OAAO,EAAEC,YAAY,EAAE;EACrEC,OAAO,CAACC,cAAc,CAAC,cAAc,CAAC;EACtCD,OAAO,CAACE,GAAG,CAAC,uBAAuB,EAAEV,UAAU,GAAGI,GAAG,CAAC;EACtDI,OAAO,CAACE,GAAG,CAAC,iCAAiC,EAAEL,cAAc,CAAC;;EAE9D;EACA;EACA,IAAI,CAACA,cAAc,CAAC,QAAQ,CAAC,EAAE;IAC3BA,cAAc,GAAG;MAAE,GAAGA,cAAc;MAAEM,MAAM,EAAEX;IAAW,CAAC;EAC9D;EACA;EACA,IAAI,CAACK,cAAc,CAAC,aAAa,CAAC,EAAE;IAChCA,cAAc,GAAG;MAAE,GAAGA,cAAc;MAAEO,WAAW,EAAE;IAAU,CAAC;EAClE;EAEAC,KAAK,CAACb,UAAU,GAAGI,GAAG,EAAEC,cAAc,CAAC,CAClCS,IAAI,CAACC,QAAQ,IAAI;IAAC;IACf;IACA,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;IACZ,IAAIC,MAAM,CAACD,IAAI,CAACE,UAAU,CAAC,KAAKD,MAAM,CAAChB,IAAI,CAACkB,cAAc,CAAC,EAAE;MACzDC,KAAK,CAAC,aAAa,CAAC;MACpBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGvB,GAAG,CAACwB,KAAK;MAChC,OAAO,KAAK;IAChB,CAAC,MAAM;MACH,OAAOR,IAAI;IACf;EACJ,CAAC,CAAC,CACDH,IAAI,CAAEG,IAAI,IAAK;IACZT,OAAO,CAACC,cAAc,CAAC,qBAAqB,CAAC;IAC7CD,OAAO,CAACE,GAAG,CAAC,0BAA0B,EAAEO,IAAI,CAAC;IAC7C,IAAI,OAAOX,OAAO,KAAK,UAAU,EAAE;MAC/BA,OAAO,CAACW,IAAI,CAAC;IACjB,CAAC,MAAM;MACHT,OAAO,CAACE,GAAG,CAAC,kCAAkC,CAAC;IACnD;IACAF,OAAO,CAACkB,QAAQ,CAAC,qBAAqB,CAAC;EAC3C,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;IACZpB,OAAO,CAACoB,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,IAAIA,KAAK,KAAK,4BAA4B,EAAE;MACxCP,KAAK,CAAC,gCAAgC,CAAC;IAC3C;IAEA,IAAI,OAAOd,YAAY,KAAK,UAAU,EAAE;MACpCA,YAAY,CAACqB,KAAK,CAAC;IACvB,CAAC,MAAM;MACHpB,OAAO,CAACoB,KAAK,CAAC,kCAAkC,CAAC;MACjDP,KAAK,CAAC,QAAQ,GAAGO,KAAK,CAACC,OAAO,CAAC;IACnC;EACJ,CAAC,CAAC,CACDC,OAAO,CAAC,MAAM;IACXtB,OAAO,CAACE,GAAG,CAAC,0BAA0B,CAAC;IACvCF,OAAO,CAACkB,QAAQ,CAAC,cAAc,CAAC;EACpC,CAAC,CAAC;AACV","ignoreList":[]},"metadata":{},"sourceType":"module"}