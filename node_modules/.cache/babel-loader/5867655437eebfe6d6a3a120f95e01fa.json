{"ast":null,"code":"/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { compose as composeTransform, create as createTransform } from '../../transform.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline } from '../canvas.js';\nimport { equals } from '../../array.js';\nimport { intersects } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */function (_super) {\n  __extends(CanvasImmediateRenderer, _super);\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n    var _this = _super.call(this) || this;\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    _this.context_ = context;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.pixelRatio_ = pixelRatio;\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    _this.extent_ = extent;\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    _this.transform_ = transform;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.viewRotation_ = viewRotation;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.squaredTolerance_ = opt_squaredTolerance;\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    _this.userTransform_ = opt_userTransform;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    _this.contextFillState_ = null;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    _this.contextStrokeState_ = null;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    _this.contextTextState_ = null;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    _this.fillState_ = null;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    _this.strokeState_ = null;\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    _this.image_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.imageAnchorX_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.imageAnchorY_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.imageHeight_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.imageOpacity_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.imageOriginX_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.imageOriginY_ = 0;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.imageRotateWithView_ = false;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.imageRotation_ = 0;\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    _this.imageScale_ = [0, 0];\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.imageWidth_ = 0;\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.text_ = '';\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.textOffsetX_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.textOffsetY_ = 0;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.textRotateWithView_ = false;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.textRotation_ = 0;\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    _this.textScale_ = [0, 0];\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    _this.textFillState_ = null;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    _this.textStrokeState_ = null;\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    _this.textState_ = null;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    _this.pixelCoordinates_ = [];\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    _this.tmpLocalTransform_ = createTransform();\n    return _this;\n  }\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_[0] != 1 || this.imageScale_[1] != 1) {\n        var centerX = x + this.imageAnchorX_;\n        var centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_[0] != 1 || this.textScale_[1] != 1) {\n        var localTransform = composeTransform(this.tmpLocalTransform_, x, y, 1, 1, rotation, -x, -y);\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  };\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  CanvasImmediateRenderer.prototype.setTransform = function (transform) {\n    this.transform_ = transform;\n  };\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */geometry);\n        break;\n      case 'LineString':\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */geometry);\n        break;\n      case 'Polygon':\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */geometry);\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */geometry);\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */geometry);\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */geometry);\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */geometry);\n        break;\n      case 'Circle':\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */geometry);\n        break;\n      default:\n    }\n  };\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  };\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n    }\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n    }\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n    }\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = /** @type {Array<number>} */geometry.getEnds();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, /** @type {Array<number>} */geometry.getEnds(), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  };\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ? textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */textAlign;\n      context.textBaseline = /** @type {CanvasTextBaseline} */textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */textAlign;\n        context.textAlign = /** @type {CanvasTextAlign} */textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */textState.textBaseline;\n        context.textBaseline = /** @type {CanvasTextBaseline} */textState.textBaseline;\n      }\n    }\n  };\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n    var _this = this;\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      var lineDash = strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash;\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap,\n        lineDash: this.pixelRatio_ === 1 ? lineDash : lineDash.map(function (n) {\n          return n * _this.pixelRatio_;\n        }),\n        lineDashOffset: (strokeStyleLineDashOffset ? strokeStyleLineDashOffset : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin: strokeStyleLineJoin !== undefined ? strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: (strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth) * this.pixelRatio_,\n        miterLimit: strokeStyleMiterLimit !== undefined ? strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n    var imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    var imageAnchor = imageStyle.getAnchor();\n    var imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  };\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ? textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ? textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ? textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ? textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ? textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ? textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScaleArray();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ? textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? Array.isArray(textText) ? textText.reduce(function (acc, t, i) {\n        return acc += i % 2 ? ' ' : t;\n      }, '') : textText : '';\n      this.textOffsetX_ = textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ = textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [this.pixelRatio_ * textScale[0], this.pixelRatio_ * textScale[1]];\n    }\n  };\n  return CanvasImmediateRenderer;\n}(VectorContext);\nexport default CanvasImmediateRenderer;","map":{"version":3,"sources":["../../src/render/canvas/Immediate.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, } from '../canvas.js';\nimport { equals } from '../../array.js';\nimport { intersects } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n     * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.squaredTolerance_ = opt_squaredTolerance;\n        /**\n         * @private\n         * @type {import(\"../../proj.js\").TransformFunction}\n         */\n        _this.userTransform_ = opt_userTransform;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.imageScale_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.textScale_ = [0, 0];\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 ||\n                this.imageScale_[0] != 1 ||\n                this.imageScale_[1] != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n                context.translate(centerX, centerY);\n                context.scale(this.imageScale_[0], this.imageScale_[1]);\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n            }\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 ||\n                this.textScale_[0] != 1 ||\n                this.textScale_[1] != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, 1, 1, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n                context.translate(x, y);\n                context.scale(this.textScale_[0], this.textScale_[1]);\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, 0, 0);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, 0, 0);\n                }\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, x, y);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, x, y);\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    CanvasImmediateRenderer.prototype.setTransform = function (transform) {\n        this.transform_ = transform;\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case 'Point':\n                this.drawPoint(\n                /** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case 'LineString':\n                this.drawLineString(\n                /** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case 'Polygon':\n                this.drawPolygon(\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case 'MultiPoint':\n                this.drawMultiPoint(\n                /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case 'MultiLineString':\n                this.drawMultiLineString(\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case 'MultiPolygon':\n                this.drawMultiPolygon(\n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case 'GeometryCollection':\n                this.drawGeometryCollection(\n                /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case 'Circle':\n                this.drawCircle(\n                /** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry =\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, \n            /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle,\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = fillState.fillStyle;\n                context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = strokeState.lineCap;\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = strokeState.lineJoin;\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle,\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = strokeState.lineCap;\n                context.lineCap = strokeState.lineCap;\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash((contextStrokeState.lineDash = strokeState.lineDash));\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = strokeState.lineJoin;\n                context.lineJoin = strokeState.lineJoin;\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = strokeState.lineWidth;\n                context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = strokeState.miterLimit;\n                context.miterLimit = strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = strokeState.strokeStyle;\n                context.strokeStyle = strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign\n            ? textState.textAlign\n            : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline,\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = textState.font;\n                context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n                context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n                context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var _this = this;\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle),\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            var lineDash = strokeStyleLineDash\n                ? strokeStyleLineDash\n                : defaultLineDash;\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined\n                    ? strokeStyleLineCap\n                    : defaultLineCap,\n                lineDash: this.pixelRatio_ === 1\n                    ? lineDash\n                    : lineDash.map(function (n) { return n * _this.pixelRatio_; }),\n                lineDashOffset: (strokeStyleLineDashOffset\n                    ? strokeStyleLineDashOffset\n                    : defaultLineDashOffset) * this.pixelRatio_,\n                lineJoin: strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin,\n                lineWidth: (strokeStyleWidth !== undefined\n                    ? strokeStyleWidth\n                    : defaultLineWidth) * this.pixelRatio_,\n                miterLimit: strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle),\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        var imageSize;\n        if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n            this.image_ = null;\n            return;\n        }\n        var imageAnchor = imageStyle.getAnchor();\n        var imageOrigin = imageStyle.getOrigin();\n        this.image_ = imageStyle.getImage(this.pixelRatio_);\n        this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n        this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n        this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = imageStyle.getScaleArray();\n        this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle),\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined\n                        ? textStrokeStyleLineCap\n                        : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash\n                        ? textStrokeStyleLineDash\n                        : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset\n                        ? textStrokeStyleLineDashOffset\n                        : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined\n                        ? textStrokeStyleLineJoin\n                        : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined\n                        ? textStrokeStyleWidth\n                        : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined\n                        ? textStrokeStyleMiterLimit\n                        : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle),\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScaleArray();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ? textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined\n                    ? textTextBaseline\n                    : defaultTextBaseline,\n            };\n            this.text_ =\n                textText !== undefined\n                    ? Array.isArray(textText)\n                        ? textText.reduce(function (acc, t, i) { return (acc += i % 2 ? ' ' : t); }, '')\n                        : textText\n                    : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n            this.textRotateWithView_ =\n                textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = [\n                this.pixelRatio_ * textScale[0],\n                this.pixelRatio_ * textScale[1],\n            ];\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map"]},"metadata":{},"sourceType":"module"}