{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */function (_super) {\n  __extends(ImageTile, _super);\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n    var _this = _super.call(this, tileCoord, state, opt_options) || this;\n    /**\n     * @private\n     * @type {?string}\n     */\n    _this.crossOrigin_ = crossOrigin;\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    _this.src_ = src;\n    _this.key = src;\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    _this.image_ = new Image();\n    if (crossOrigin !== null) {\n      _this.image_.crossOrigin = crossOrigin;\n    }\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    _this.unlisten_ = null;\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    _this.tileLoadFunction_ = tileLoadFunction;\n    return _this;\n  }\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function () {\n    return this.image_;\n  };\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  ImageTile.prototype.setImage = function (element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  };\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function () {\n    var image = /** @type {HTMLImageElement} */this.image_;\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  ImageTile.prototype.load = function () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n    }\n  };\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function () {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  };\n  return ImageTile;\n}(Tile);\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\nexport default ImageTile;","map":{"version":3,"sources":["src/ImageTile.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        _this.key = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n     * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n     */\n    ImageTile.prototype.setImage = function (element) {\n        this.image_ = element;\n        this.state = TileState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map"]},"metadata":{},"sourceType":"module"}