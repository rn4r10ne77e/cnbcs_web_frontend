{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { assign, clear } from '../obj.js';\nimport { getIntersection } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nvar GroupEvent = /** @class */function (_super) {\n  __extends(GroupEvent, _super);\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  function GroupEvent(type, layer) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    _this.layer = layer;\n    return _this;\n  }\n  return GroupEvent;\n}(Event);\nexport { GroupEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */function (_super) {\n  __extends(LayerGroup, _super);\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  function LayerGroup(opt_options) {\n    var _this = this;\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */assign({}, options);\n    delete baseOptions.layers;\n    var layers = options.layers;\n    _this = _super.call(this, baseOptions) || this;\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    _this.on;\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    _this.once;\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    _this.un;\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    _this.layersListenerKeys_ = [];\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    _this.listenerKeys_ = {};\n    _this.addChangeListener(Property.LAYERS, _this.handleLayersChanged_);\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {\n          unique: true\n        });\n      } else {\n        assert(typeof (/** @type {?} */layers.getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {\n        unique: true\n      });\n    }\n    _this.setLayers(layers);\n    return _this;\n  }\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function () {\n    this.changed();\n  };\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function () {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  };\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  LayerGroup.prototype.registerLayerListeners_ = function (layer) {\n    var listenerKeys = [listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this), listen(layer, EventType.CHANGE, this.handleLayerChange_, this)];\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(listen(layer, 'addlayer', this.handleLayerGroupAdd_, this), listen(layer, 'removelayer', this.handleLayerGroupRemove_, this));\n    }\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  };\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  LayerGroup.prototype.handleLayerGroupAdd_ = function (event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  };\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  LayerGroup.prototype.handleLayerGroupRemove_ = function (event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  };\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  };\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */collectionEvent.element;\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  };\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function () {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */this.get(Property.LAYERS);\n  };\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function (layers) {\n    var collection = this.getLayers();\n    if (collection) {\n      var currentLayers = collection.getArray();\n      for (var i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n    this.set(Property.LAYERS, layers);\n  };\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  LayerGroup.prototype.getLayersArray = function (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n    var pos = states.length;\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n    var ownLayerState = this.getLayerState();\n    var defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n    return states;\n  };\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  LayerGroup.prototype.getSourceState = function () {\n    return 'ready';\n  };\n  return LayerGroup;\n}(BaseLayer);\nexport default LayerGroup;","map":{"version":3,"sources":["../src/layer/Group.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { assign, clear } from '../obj.js';\nimport { getIntersection } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nvar GroupEvent = /** @class */ (function (_super) {\n    __extends(GroupEvent, _super);\n    /**\n     * @param {EventType} type The event type.\n     * @param {BaseLayer} layer The layer.\n     */\n    function GroupEvent(type, layer) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The added or removed layer.\n         * @type {BaseLayer}\n         * @api\n         */\n        _this.layer = layer;\n        return _this;\n    }\n    return GroupEvent;\n}(Event));\nexport { GroupEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers',\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options} [opt_options] Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /***\n         * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {GroupOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        _this.addChangeListener(Property.LAYERS, _this.handleLayersChanged_);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof ( /** @type {?} */(layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.registerLayerListeners_(layer);\n            this.dispatchEvent(new GroupEvent('addlayer', layer));\n        }\n        this.changed();\n    };\n    /**\n     * @param {BaseLayer} layer The layer.\n     */\n    LayerGroup.prototype.registerLayerListeners_ = function (layer) {\n        var listenerKeys = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n        ];\n        if (layer instanceof LayerGroup) {\n            listenerKeys.push(listen(layer, 'addlayer', this.handleLayerGroupAdd_, this), listen(layer, 'removelayer', this.handleLayerGroupRemove_, this));\n        }\n        this.listenerKeys_[getUid(layer)] = listenerKeys;\n    };\n    /**\n     * @param {GroupEvent} event The layer group event.\n     */\n    LayerGroup.prototype.handleLayerGroupAdd_ = function (event) {\n        this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n    };\n    /**\n     * @param {GroupEvent} event The layer group event.\n     */\n    LayerGroup.prototype.handleLayerGroupRemove_ = function (event) {\n        this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.registerLayerListeners_(layer);\n        this.dispatchEvent(new GroupEvent('addlayer', layer));\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.dispatchEvent(new GroupEvent('removelayer', layer));\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS));\n    };\n    /**\n     * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        var collection = this.getLayers();\n        if (collection) {\n            var currentLayers = collection.getArray();\n            for (var i = 0, ii = currentLayers.length; i < ii; ++i) {\n                this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n            }\n        }\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * Get the layer states list and use this groups z-index as the default\n     * for all layers in this and nested groups, if it is unset at this point.\n     * If opt_states is not provided and this group's z-index is undefined\n     * 0 is used a the default z-index.\n     * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n     * of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        var defaultZIndex = ownLayerState.zIndex;\n        if (!opt_states && ownLayerState.zIndex === undefined) {\n            defaultZIndex = 0;\n        }\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n            layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n            if (layerState.zIndex === undefined) {\n                layerState.zIndex = defaultZIndex;\n            }\n        }\n        return states;\n    };\n    /**\n     * @return {import(\"../source/Source.js\").State} Source state.\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return 'ready';\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map"]},"metadata":{},"sourceType":"module"}