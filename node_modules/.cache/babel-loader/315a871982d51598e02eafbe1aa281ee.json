{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */function (_super) {\n  __extends(CollectionEvent, _super);\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  function CollectionEvent(type, opt_element, opt_index) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    _this.element = opt_element;\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    _this.index = opt_index;\n    return _this;\n  }\n  return CollectionEvent;\n}(Event);\nexport { CollectionEvent };\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */function (_super) {\n  __extends(Collection, _super);\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  function Collection(opt_array, opt_options) {\n    var _this = _super.call(this) || this;\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    _this.on;\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    _this.once;\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    _this.un;\n    var options = opt_options || {};\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.unique_ = !!options.unique;\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    _this.array_ = opt_array ? opt_array : [];\n    if (_this.unique_) {\n      for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n        _this.assertUnique_(_this.array_[i], i);\n      }\n    }\n    _this.updateLength_();\n    return _this;\n  }\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function () {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  };\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function (arr) {\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  };\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function () {\n    return this.array_;\n  };\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function (index) {\n    return this.array_[index];\n  };\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function () {\n    return this.get(Property.LENGTH);\n  };\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n  };\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function () {\n    return this.removeAt(this.getLength() - 1);\n  };\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function (elem) {\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n    return prev;\n  };\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function (index, elem) {\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n      this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function (elem, opt_except) {\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n  return Collection;\n}(BaseObject);\nexport default Collection;","map":{"version":3,"sources":["src/Collection.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {import(\"./CollectionEventType.js\").default} type Type.\n     * @param {*} [opt_element] Element.\n     * @param {number} [opt_index] The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>} [opt_array] Array.\n     * @param {Options} [opt_options] Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {CollectionOnSignature<void>}\n         */\n        _this.un;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number} [opt_except] Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map"]},"metadata":{},"sourceType":"module"}