{"ast":null,"code":"/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined' ? navigator.userAgent.toLowerCase() : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport var SAFARI_BUG_237906 = SAFARI && !!(ua.indexOf('version/15.4') >= 0 || ua.match(/cpu (os|iphone os) 15_4 like mac os x/));\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' && typeof OffscreenCanvas !== 'undefined' && self instanceof WorkerGlobalScope; //eslint-disable-line\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\nexport var PASSIVE_EVENT_LISTENERS = function () {\n  var passive = false;\n  try {\n    var options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      }\n    });\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n}();","map":{"version":3,"sources":["src/has.js"],"names":[],"mappings":"AAAA;;AAEG;AAEH,IAAM,EAAE,GACN,OAAO,SAAS,KAAK,WAAW,IAAI,OAAO,SAAS,CAAC,SAAS,KAAK,WAAW,GAC1E,SAAS,CAAC,SAAS,CAAC,WAAW,CAAA,CAAE,GACjC,EAAE;AAER;;;AAGG;AACH,OAAO,IAAM,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAEnD;;;AAGG;AACH,OAAO,IAAM,MAAM,GAAG,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAE9E;;;AAGG;AACH,OAAO,IAAM,iBAAiB,GAC5B,MAAM,IACN,CAAC,EACC,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,IAC/B,EAAE,CAAC,KAAK,CAAC,uCAAuC,CAAC,CAClD;AAEH;;;AAGG;AACH,OAAO,IAAM,MAAM,GAAG,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAE7E;;;AAGG;AACH,OAAO,IAAM,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAEjD;;;;;;AAMG;AACH,OAAO,IAAM,kBAAkB,GAC7B,OAAO,gBAAgB,KAAK,WAAW,GAAG,gBAAgB,GAAG,CAAC;AAEhE;;;;AAIG;AACH,OAAO,IAAM,uBAAuB,GAClC,OAAO,iBAAiB,KAAK,WAAW,IACxC,OAAO,eAAe,KAAK,WAAW,IACtC,IAAI,YAAY,iBAAiB,CAAC,CAAC;AAErC;;;AAGG;AACH,OAAO,IAAM,YAAY,GACvB,OAAO,KAAK,KAAK,WAAW,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM;AAExD;;AAEG;AACH,OAAO,IAAM,uBAAuB,GAAI,YAAA;EACtC,IAAI,OAAO,GAAG,KAAK;EACnB,IAAI;IACF,IAAM,OAAO,GAAG,MAAM,CAAC,cAAc,CAAC,CAAA,CAAE,EAAE,SAAS,EAAE;MACnD,GAAG,EAAE,SAAA,CAAA,EAAA;QACH,OAAO,GAAG,IAAI;MAChB;KACD,CAAC;IAEF,MAAM,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC;IAC3C,MAAM,CAAC,mBAAmB,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC;GAC/C,CAAC,OAAO,KAAK,EAAE;IACd;EAAA;EAEF,OAAO,OAAO;AAChB,CAAC,CAAC,CAAE","sourceRoot":"","sourcesContent":["/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport var SAFARI_BUG_237906 = SAFARI &&\n    !!(ua.indexOf('version/15.4') >= 0 ||\n        ua.match(/cpu (os|iphone os) 15_4 like mac os x/));\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' &&\n    typeof OffscreenCanvas !== 'undefined' &&\n    self instanceof WorkerGlobalScope; //eslint-disable-line\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\nexport var PASSIVE_EVENT_LISTENERS = (function () {\n    var passive = false;\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passive = true;\n            },\n        });\n        window.addEventListener('_', null, options);\n        window.removeEventListener('_', null, options);\n    }\n    catch (error) {\n        // passive not supported\n    }\n    return passive;\n})();\n//# sourceMappingURL=has.js.map"]},"metadata":{},"sourceType":"module"}