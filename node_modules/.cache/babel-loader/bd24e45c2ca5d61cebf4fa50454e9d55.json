{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { always } from '../events/condition.js';\nimport { boundingExtent, getArea } from '../extent.js';\nimport { closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment } from '../coordinate.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { fromExtent as polygonFromExtent } from '../geom/Polygon.js';\nimport { toUserExtent } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to the `Polygon` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to the `Point` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n/**\n * @enum {string}\n */\nvar ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nvar ExtentEvent = /** @class */function (_super) {\n  __extends(ExtentEvent, _super);\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n  function ExtentEvent(extent) {\n    var _this = _super.call(this, ExtentEventType.EXTENTCHANGED) || this;\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    _this.extent = extent;\n    return _this;\n  }\n  return ExtentEvent;\n}(Event);\nexport { ExtentEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'extentchanged', ExtentEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'extentchanged', Return>} ExtentOnSignature\n */\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nvar Extent = /** @class */function (_super) {\n  __extends(Extent, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  function Extent(opt_options) {\n    var _this = this;\n    var options = opt_options || {};\n    _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */options) || this;\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    _this.on;\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    _this.once;\n    /***\n     * @type {ExtentOnSignature<void>}\n     */\n    _this.un;\n    /**\n     * Condition\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    _this.condition_ = options.condition ? options.condition : always;\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    _this.extent_ = null;\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    _this.pointerHandler_ = null;\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    _this.pixelTolerance_ = options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    _this.snappedToVertex_ = false;\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    _this.extentFeature_ = null;\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n    _this.vertexFeature_ = null;\n    if (!opt_options) {\n      opt_options = {};\n    }\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    _this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    _this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n    if (opt_options.extent) {\n      _this.setExtent(opt_options.extent);\n    }\n    return _this;\n  }\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../PluggableMap.js\").default} map map\n   * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  Extent.prototype.snapToVertex_ = function (pixel, map) {\n    var pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n    var sortByDistance = function (a, b) {\n      return squaredDistanceToSegment(pixelCoordinate, a) - squaredDistanceToSegment(pixelCoordinate, b);\n    };\n    var extent = this.getExtentInternal();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      var segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      var closestSegment = segments[0];\n      var vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      var vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        var pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        var pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  };\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  Extent.prototype.handlePointerMove_ = function (mapBrowserEvent) {\n    var pixel = mapBrowserEvent.pixel;\n    var map = mapBrowserEvent.map;\n    var vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  };\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @return {Feature} extent as featrue\n   * @private\n   */\n  Extent.prototype.createOrUpdateExtentFeature_ = function (extent) {\n    var extentFeature = this.extentFeature_;\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  };\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @return {Feature} vertex as feature\n   * @private\n   */\n  Extent.prototype.createOrUpdatePointerFeature_ = function (vertex) {\n    var vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      var geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  };\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  Extent.prototype.handleEvent = function (mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    _super.prototype.handleEvent.call(this, mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  };\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  Extent.prototype.handleDownEvent = function (mapBrowserEvent) {\n    var pixel = mapBrowserEvent.pixel;\n    var map = mapBrowserEvent.map;\n    var extent = this.getExtentInternal();\n    var vertex = this.snapToVertex_(pixel, map);\n    //find the extent corner opposite the passed corner\n    var getOpposingPoint = function (point) {\n      var x_ = null;\n      var y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      var x = vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n      var y = vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n        //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(getOpposingPoint([x, extent[1]]), getOpposingPoint([x, extent[3]]));\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(getOpposingPoint([extent[0], y]), getOpposingPoint([extent[2], y]));\n      }\n      //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  };\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  Extent.prototype.handleDragEvent = function (mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      var pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n  };\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  Extent.prototype.handleUpEvent = function (mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    var extent = this.getExtentInternal();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  };\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Extent.prototype.setMap = function (map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    _super.prototype.setMap.call(this, map);\n  };\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  Extent.prototype.getExtent = function () {\n    return toUserExtent(this.getExtentInternal(), this.getMap().getView().getProjection());\n  };\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  Extent.prototype.getExtentInternal = function () {\n    return this.extent_;\n  };\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  Extent.prototype.setExtent = function (extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  };\n  return Extent;\n}(PointerInteraction);\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  var style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Polygon'];\n  };\n}\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  var style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function (point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [[[extent[0], extent[1]], [extent[0], extent[3]]], [[extent[0], extent[3]], [extent[2], extent[3]]], [[extent[2], extent[3]], [extent[2], extent[1]]], [[extent[2], extent[1]], [extent[0], extent[1]]]];\n}\nexport default Extent;","map":{"version":3,"sources":["../src/interaction/Extent.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { always } from '../events/condition.js';\nimport { boundingExtent, getArea } from '../extent.js';\nimport { closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, } from '../coordinate.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { fromExtent as polygonFromExtent } from '../geom/Polygon.js';\nimport { toUserExtent } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to the `Polygon` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to the `Point` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n/**\n * @enum {string}\n */\nvar ExtentEventType = {\n    /**\n     * Triggered after the extent is changed\n     * @event ExtentEvent#extentchanged\n     * @api\n     */\n    EXTENTCHANGED: 'extentchanged',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nvar ExtentEvent = /** @class */ (function (_super) {\n    __extends(ExtentEvent, _super);\n    /**\n     * @param {import(\"../extent.js\").Extent} extent the new extent\n     */\n    function ExtentEvent(extent) {\n        var _this = _super.call(this, ExtentEventType.EXTENTCHANGED) || this;\n        /**\n         * The current extent.\n         * @type {import(\"../extent.js\").Extent}\n         * @api\n         */\n        _this.extent = extent;\n        return _this;\n    }\n    return ExtentEvent;\n}(Event));\nexport { ExtentEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'extentchanged', ExtentEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'extentchanged', Return>} ExtentOnSignature\n */\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nvar Extent = /** @class */ (function (_super) {\n    __extends(Extent, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Extent(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /***\n         * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {ExtentOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * Condition\n         * @type {import(\"../events/condition.js\").Condition}\n         * @private\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * Extent of the drawn box\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        _this.extent_ = null;\n        /**\n         * Handler for pointer move events\n         * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n         * @private\n         */\n        _this.pointerHandler_ = null;\n        /**\n         * Pixel threshold to snap to extent\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ =\n            options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n        /**\n         * Is the pointer snapped to an extent vertex\n         * @type {boolean}\n         * @private\n         */\n        _this.snappedToVertex_ = false;\n        /**\n         * Feature for displaying the visible extent\n         * @type {Feature}\n         * @private\n         */\n        _this.extentFeature_ = null;\n        /**\n         * Feature for displaying the visible pointer\n         * @type {Feature<Point>}\n         * @private\n         */\n        _this.vertexFeature_ = null;\n        if (!opt_options) {\n            opt_options = {};\n        }\n        /**\n         * Layer for the extentFeature\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.extentOverlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!opt_options.wrapX,\n            }),\n            style: opt_options.boxStyle\n                ? opt_options.boxStyle\n                : getDefaultExtentStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true,\n        });\n        /**\n         * Layer for the vertexFeature\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.vertexOverlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!opt_options.wrapX,\n            }),\n            style: opt_options.pointerStyle\n                ? opt_options.pointerStyle\n                : getDefaultPointerStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true,\n        });\n        if (opt_options.extent) {\n            _this.setExtent(opt_options.extent);\n        }\n        return _this;\n    }\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n     * @param {import(\"../PluggableMap.js\").default} map map\n     * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n     * @private\n     */\n    Extent.prototype.snapToVertex_ = function (pixel, map) {\n        var pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n        var sortByDistance = function (a, b) {\n            return (squaredDistanceToSegment(pixelCoordinate, a) -\n                squaredDistanceToSegment(pixelCoordinate, b));\n        };\n        var extent = this.getExtentInternal();\n        if (extent) {\n            //convert extents to line segments and find the segment closest to pixelCoordinate\n            var segments = getSegments(extent);\n            segments.sort(sortByDistance);\n            var closestSegment = segments[0];\n            var vertex = closestOnSegment(pixelCoordinate, closestSegment);\n            var vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n            //if the distance is within tolerance, snap to the segment\n            if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n                //test if we should further snap to a vertex\n                var pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n                var pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n                var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                this.snappedToVertex_ = dist <= this.pixelTolerance_;\n                if (this.snappedToVertex_) {\n                    vertex =\n                        squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                }\n                return vertex;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n     * @private\n     */\n    Extent.prototype.handlePointerMove_ = function (mapBrowserEvent) {\n        var pixel = mapBrowserEvent.pixel;\n        var map = mapBrowserEvent.map;\n        var vertex = this.snapToVertex_(pixel, map);\n        if (!vertex) {\n            vertex = map.getCoordinateFromPixelInternal(pixel);\n        }\n        this.createOrUpdatePointerFeature_(vertex);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent extent\n     * @return {Feature} extent as featrue\n     * @private\n     */\n    Extent.prototype.createOrUpdateExtentFeature_ = function (extent) {\n        var extentFeature = this.extentFeature_;\n        if (!extentFeature) {\n            if (!extent) {\n                extentFeature = new Feature({});\n            }\n            else {\n                extentFeature = new Feature(polygonFromExtent(extent));\n            }\n            this.extentFeature_ = extentFeature;\n            this.extentOverlay_.getSource().addFeature(extentFeature);\n        }\n        else {\n            if (!extent) {\n                extentFeature.setGeometry(undefined);\n            }\n            else {\n                extentFeature.setGeometry(polygonFromExtent(extent));\n            }\n        }\n        return extentFeature;\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n     * @return {Feature} vertex as feature\n     * @private\n     */\n    Extent.prototype.createOrUpdatePointerFeature_ = function (vertex) {\n        var vertexFeature = this.vertexFeature_;\n        if (!vertexFeature) {\n            vertexFeature = new Feature(new Point(vertex));\n            this.vertexFeature_ = vertexFeature;\n            this.vertexOverlay_.getSource().addFeature(vertexFeature);\n        }\n        else {\n            var geometry = vertexFeature.getGeometry();\n            geometry.setCoordinates(vertex);\n        }\n        return vertexFeature;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    Extent.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        //display pointer (if not dragging)\n        if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n            !this.handlingDownUpSequence) {\n            this.handlePointerMove_(mapBrowserEvent);\n        }\n        //call pointer to determine up/down/drag\n        _super.prototype.handleEvent.call(this, mapBrowserEvent);\n        //return false to stop propagation\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Extent.prototype.handleDownEvent = function (mapBrowserEvent) {\n        var pixel = mapBrowserEvent.pixel;\n        var map = mapBrowserEvent.map;\n        var extent = this.getExtentInternal();\n        var vertex = this.snapToVertex_(pixel, map);\n        //find the extent corner opposite the passed corner\n        var getOpposingPoint = function (point) {\n            var x_ = null;\n            var y_ = null;\n            if (point[0] == extent[0]) {\n                x_ = extent[2];\n            }\n            else if (point[0] == extent[2]) {\n                x_ = extent[0];\n            }\n            if (point[1] == extent[1]) {\n                y_ = extent[3];\n            }\n            else if (point[1] == extent[3]) {\n                y_ = extent[1];\n            }\n            if (x_ !== null && y_ !== null) {\n                return [x_, y_];\n            }\n            return null;\n        };\n        if (vertex && extent) {\n            var x = vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n            var y = vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n            //snap to point\n            if (x !== null && y !== null) {\n                this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n                //snap to edge\n            }\n            else if (x !== null) {\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([x, extent[1]]), getOpposingPoint([x, extent[3]]));\n            }\n            else if (y !== null) {\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([extent[0], y]), getOpposingPoint([extent[2], y]));\n            }\n            //no snap - new bbox\n        }\n        else {\n            vertex = map.getCoordinateFromPixelInternal(pixel);\n            this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n            this.pointerHandler_ = getPointHandler(vertex);\n        }\n        return true; //event handled; start downup sequence\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    Extent.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (this.pointerHandler_) {\n            var pixelCoordinate = mapBrowserEvent.coordinate;\n            this.setExtent(this.pointerHandler_(pixelCoordinate));\n            this.createOrUpdatePointerFeature_(pixelCoordinate);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Extent.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.pointerHandler_ = null;\n        //If bbox is zero area, set to null;\n        var extent = this.getExtentInternal();\n        if (!extent || getArea(extent) === 0) {\n            this.setExtent(null);\n        }\n        return false; //Stop handling downup sequence\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Extent.prototype.setMap = function (map) {\n        this.extentOverlay_.setMap(map);\n        this.vertexOverlay_.setMap(map);\n        _super.prototype.setMap.call(this, map);\n    };\n    /**\n     * Returns the current drawn extent in the view projection (or user projection if set)\n     *\n     * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n     * @api\n     */\n    Extent.prototype.getExtent = function () {\n        return toUserExtent(this.getExtentInternal(), this.getMap().getView().getProjection());\n    };\n    /**\n     * Returns the current drawn extent in the view projection\n     *\n     * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n     * @api\n     */\n    Extent.prototype.getExtentInternal = function () {\n        return this.extent_;\n    };\n    /**\n     * Manually sets the drawn extent, using the view projection.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent\n     * @api\n     */\n    Extent.prototype.setExtent = function (extent) {\n        //Null extent means no bbox\n        this.extent_ = extent ? extent : null;\n        this.createOrUpdateExtentFeature_(extent);\n        this.dispatchEvent(new ExtentEvent(this.extent_));\n    };\n    return Extent;\n}(PointerInteraction));\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style['Polygon'];\n    };\n}\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style['Point'];\n    };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n    return function (point) {\n        return boundingExtent([fixedPoint, point]);\n    };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n    if (fixedP1[0] == fixedP2[0]) {\n        return function (point) {\n            return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n        };\n    }\n    else if (fixedP1[1] == fixedP2[1]) {\n        return function (point) {\n            return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n        };\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n    return [\n        [\n            [extent[0], extent[1]],\n            [extent[0], extent[3]],\n        ],\n        [\n            [extent[0], extent[3]],\n            [extent[2], extent[3]],\n        ],\n        [\n            [extent[2], extent[3]],\n            [extent[2], extent[1]],\n        ],\n        [\n            [extent[2], extent[1]],\n            [extent[0], extent[1]],\n        ],\n    ];\n}\nexport default Extent;\n//# sourceMappingURL=Extent.js.map"]},"metadata":{},"sourceType":"module"}