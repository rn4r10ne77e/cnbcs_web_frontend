{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */function (_super) {\n  __extends(AssertionError, _super);\n  /**\n   * @param {number} code Error code.\n   */\n  function AssertionError(code) {\n    var _this = this;\n    var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path + '/doc/errors/#' + code + ' for details.';\n    _this = _super.call(this, message) || this;\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    _this.code = code;\n    /**\n     * @type {string}\n     */\n    _this.name = 'AssertionError';\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    _this.message = message;\n    return _this;\n  }\n  return AssertionError;\n}(Error);\nexport default AssertionError;","map":{"version":3,"sources":["src/AssertionError.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;AAEG;AACH,SAAQ,OAAO,QAAO,WAAW;AAEjC;;;;AAIG;AACH,IAAA,cAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAA6B,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;EAC3B;;AAEG;EACH,SAAA,cAAA,CAAY,IAAI,EAAA;IAAhB,IAAA,KAAA,GAAA,IAAA;IACE,IAAM,IAAI,GAAG,OAAO,KAAK,QAAQ,GAAG,OAAO,GAAG,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACzE,IAAM,OAAO,GACX,kDAAkD,GAClD,IAAI,GACJ,eAAe,GACf,IAAI,GACJ,eAAe;YAEjB,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,IAAA,IAAA;IAEd;;;;;;;AAOG;IACH,KAAI,CAAC,IAAI,GAAG,IAAI;IAEhB;;AAEG;IACH,KAAI,CAAC,IAAI,GAAG,gBAAgB;IAE5B;IACA,KAAI,CAAC,OAAO,GAAG,OAAO;;EACxB;EACF,OAAA,cAAC;AAAD,CAAC,CAjC4B,KAAK,CAAA;AAmClC,eAAe,cAAc","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' +\n            path +\n            '/doc/errors/#' +\n            code +\n            ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map"]},"metadata":{},"sourceType":"module"}