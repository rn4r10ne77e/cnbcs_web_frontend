{"ast":null,"code":"/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} [justify] Justify.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = function () {\n  var retries = 100;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    var available = true;\n    for (var i = 0; i < len; ++i) {\n      var referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n      if (fontFamily != referenceFont) {\n        var width = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + fontFamily + ',' + referenceFont, text);\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n  function check() {\n    var done = true;\n    var fonts = checkedFonts.getKeys();\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n      var font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n  return function (fontSpec) {\n    var font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    var families = font.families;\n    for (var i = 0, ii = families.length; i < ii; ++i) {\n      var family = families[i];\n      var key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n}();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  var measureElement;\n  return function (fontSpec) {\n    var height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        var font = getFontParameters(fontSpec);\n        var metrics = measureText(fontSpec, 'Å½g');\n        var lineHeight = isNaN(Number(font.lineHeight)) ? 1.2 : Number(font.lineHeight);\n        height = lineHeight * (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n}();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  var width = text.split('\\n').reduce(function (prev, curr) {\n    return Math.max(prev, measureTextWidth(font, curr));\n  }, 0);\n  cache[text] = width;\n  return width;\n}\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  var widths = [];\n  var heights = [];\n  var lineWidths = [];\n  var width = 0;\n  var lineWidth = 0;\n  var height = 0;\n  var lineHeight = 0;\n  for (var i = 0, ii = chunks.length; i <= ii; i += 2) {\n    var text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    var font = chunks[i + 1] || baseStyle.font;\n    var currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    var currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {\n    width: width,\n    height: height,\n    widths: widths,\n    heights: heights,\n    lineWidths: lineWidths\n  };\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n  context.save();\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n  if (/** @type {*} */labelOrImage.contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */labelOrImage, context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(/** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */labelOrImage, originX, originY, w, h, 0, 0, w, h);\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(/** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */labelOrImage, originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n  }\n  context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  var contextInstructions = label.contextInstructions;\n  for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}","map":{"version":3,"sources":["../src/render/canvas.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} [justify] Justify.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle +\n                    ' ' +\n                    fontWeight +\n                    ' ' +\n                    size +\n                    fontFamily +\n                    ',' +\n                    referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var measureElement;\n    return function (fontSpec) {\n        var height = textHeights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Å½g');\n                var lineHeight = isNaN(Number(font.lineHeight))\n                    ? 1.2\n                    : Number(font.lineHeight);\n                height =\n                    lineHeight *\n                        (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!measureElement) {\n                    measureElement = document.createElement('div');\n                    measureElement.innerHTML = 'M';\n                    measureElement.style.minHeight = '0';\n                    measureElement.style.maxHeight = 'none';\n                    measureElement.style.height = 'auto';\n                    measureElement.style.padding = '0';\n                    measureElement.style.border = 'none';\n                    measureElement.style.position = 'absolute';\n                    measureElement.style.display = 'block';\n                    measureElement.style.left = '-99999px';\n                }\n                measureElement.style.font = fontSpec;\n                document.body.appendChild(measureElement);\n                height = measureElement.offsetHeight;\n                document.body.removeChild(measureElement);\n            }\n            textHeights[fontSpec] = height;\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = text\n        .split('\\n')\n        .reduce(function (prev, curr) { return Math.max(prev, measureTextWidth(font, curr)); }, 0);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n    var widths = [];\n    var heights = [];\n    var lineWidths = [];\n    var width = 0;\n    var lineWidth = 0;\n    var height = 0;\n    var lineHeight = 0;\n    for (var i = 0, ii = chunks.length; i <= ii; i += 2) {\n        var text = chunks[i];\n        if (text === '\\n' || i === ii) {\n            width = Math.max(width, lineWidth);\n            lineWidths.push(lineWidth);\n            lineWidth = 0;\n            height += lineHeight;\n            continue;\n        }\n        var font = chunks[i + 1] || baseStyle.font;\n        var currentWidth = measureTextWidth(font, text);\n        widths.push(currentWidth);\n        lineWidth += currentWidth;\n        var currentHeight = measureTextHeight(font);\n        heights.push(currentHeight);\n        lineHeight = Math.max(lineHeight, currentHeight);\n    }\n    return { width: width, height: height, widths: widths, heights: heights, lineWidths: lineWidths };\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if ( /** @type {*} */(labelOrImage).contextInstructions) {\n        // label\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else if (scale[0] < 0 || scale[1] < 0) {\n        // flipped image\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, 0, 0, w, h);\n    }\n    else {\n        // if image not flipped translate and scale can be avoided\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n//# sourceMappingURL=canvas.js.map"]},"metadata":{},"sourceType":"module"}