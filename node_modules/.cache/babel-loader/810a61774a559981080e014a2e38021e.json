{"ast":null,"code":"/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */function () {\n  function VectorContext() {}\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  VectorContext.prototype.drawCustom = function (geometry, feature, renderer, hitDetectionRenderer) {};\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  VectorContext.prototype.drawGeometry = function (geometry) {};\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  VectorContext.prototype.setStyle = function (style) {};\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  VectorContext.prototype.drawCircle = function (circleGeometry, feature) {};\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  VectorContext.prototype.drawFeature = function (feature, style) {};\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) {};\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) {};\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {};\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) {};\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {};\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  VectorContext.prototype.drawPoint = function (pointGeometry, feature) {};\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) {};\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  VectorContext.prototype.drawText = function (geometry, feature) {};\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {};\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterImageWithText) {};\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterImageWithText) {};\n  return VectorContext;\n}();\nexport default VectorContext;","map":{"version":3,"sources":["../src/render/VectorContext.js"],"names":[],"mappings":"AAAA;;AAEG;AAEH;;;;;AAKG;AACH,IAAA,aAAA,GAAA,aAAA,YAAA;EAAA,SAAA,aAAA,CAAA,EAAA,CAsGA;EArGE;;;;;;;AAOG;EACH,aAAA,CAAA,SAAA,CAAA,UAAU,GAAV,UAAW,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,oBAAoB,EAAA,CAAG,CAAC;EAEhE;;;;AAIG;EACH,aAAA,CAAA,SAAA,CAAA,YAAY,GAAZ,UAAa,QAAQ,EAAA,CAAG,CAAC;EAEzB;;;;AAIG;EACH,aAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,UAAS,KAAK,EAAA,CAAG,CAAC;EAElB;;;AAGG;EACH,aAAA,CAAA,SAAA,CAAA,UAAU,GAAV,UAAW,cAAc,EAAE,OAAO,EAAA,CAAG,CAAC;EAEtC;;;AAGG;EACH,aAAA,CAAA,SAAA,CAAA,WAAW,GAAX,UAAY,OAAO,EAAE,KAAK,EAAA,CAAG,CAAC;EAE9B;;;AAGG;EACH,aAAA,CAAA,SAAA,CAAA,sBAAsB,GAAtB,UAAuB,0BAA0B,EAAE,OAAO,EAAA,CAAG,CAAC;EAE9D;;;AAGG;EACH,aAAA,CAAA,SAAA,CAAA,cAAc,GAAd,UAAe,kBAAkB,EAAE,OAAO,EAAA,CAAG,CAAC;EAE9C;;;AAGG;EACH,aAAA,CAAA,SAAA,CAAA,mBAAmB,GAAnB,UAAoB,uBAAuB,EAAE,OAAO,EAAA,CAAG,CAAC;EAExD;;;AAGG;EACH,aAAA,CAAA,SAAA,CAAA,cAAc,GAAd,UAAe,kBAAkB,EAAE,OAAO,EAAA,CAAG,CAAC;EAE9C;;;AAGG;EACH,aAAA,CAAA,SAAA,CAAA,gBAAgB,GAAhB,UAAiB,oBAAoB,EAAE,OAAO,EAAA,CAAG,CAAC;EAElD;;;AAGG;EACH,aAAA,CAAA,SAAA,CAAA,SAAS,GAAT,UAAU,aAAa,EAAE,OAAO,EAAA,CAAG,CAAC;EAEpC;;;AAGG;EACH,aAAA,CAAA,SAAA,CAAA,WAAW,GAAX,UAAY,eAAe,EAAE,OAAO,EAAA,CAAG,CAAC;EAExC;;;AAGG;EACH,aAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,UAAS,QAAQ,EAAE,OAAO,EAAA,CAAG,CAAC;EAE9B;;;AAGG;EACH,aAAA,CAAA,SAAA,CAAA,kBAAkB,GAAlB,UAAmB,SAAS,EAAE,WAAW,EAAA,CAAG,CAAC;EAE7C;;;AAGG;EACH,aAAA,CAAA,SAAA,CAAA,aAAa,GAAb,UAAc,UAAU,EAAE,0BAA0B,EAAA,CAAG,CAAC;EAExD;;;AAGG;EACH,aAAA,CAAA,SAAA,CAAA,YAAY,GAAZ,UAAa,SAAS,EAAE,0BAA0B,EAAA,CAAG,CAAC;EACxD,OAAA,aAAC;AAAD,CAAC,CAAA,CAAA;AAED,eAAe,aAAa","sourceRoot":"","sourcesContent":["/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     * @param {Function} hitDetectionRenderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer, hitDetectionRenderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterImageWithText) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterImageWithText) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map"]},"metadata":{},"sourceType":"module"}