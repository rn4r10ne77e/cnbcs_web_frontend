[{"C:\\prj\\cnbcs_web_frontend\\src\\index.js":"1","C:\\prj\\cnbcs_web_frontend\\src\\reportWebVitals.js":"2","C:\\prj\\cnbcs_web_frontend\\src\\App.js":"3","C:\\prj\\cnbcs_web_frontend\\src\\js\\ui.js":"4","C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\map\\VWorldMap.jsx":"5","C:\\prj\\cnbcs_web_frontend\\src\\context\\url.js":"6","C:\\prj\\cnbcs_web_frontend\\src\\context\\code.js":"7","C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\EgovError.jsx":"8","C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\EgovFooter.jsx":"9","C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\EgovHeader.jsx":"10","C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\EgovInfoPopup.jsx":"11","C:\\prj\\cnbcs_web_frontend\\src\\egov\\about\\EgovAboutSite.jsx":"12","C:\\prj\\cnbcs_web_frontend\\src\\egov\\about\\EgovAboutLocation.jsx":"13","C:\\prj\\cnbcs_web_frontend\\src\\egov\\about\\EgovAboutOrganization.jsx":"14","C:\\prj\\cnbcs_web_frontend\\src\\egov\\about\\EgovAboutHistory.jsx":"15","C:\\prj\\cnbcs_web_frontend\\src\\egov\\login\\EgovLogin.jsx":"16","C:\\prj\\cnbcs_web_frontend\\src\\egov\\intro\\EgovIntroWork.jsx":"17","C:\\prj\\cnbcs_web_frontend\\src\\egov\\intro\\EgovIntroService.jsx":"18","C:\\prj\\cnbcs_web_frontend\\src\\egov\\main\\EgovMain.jsx":"19","C:\\prj\\cnbcs_web_frontend\\src\\egov\\support\\apply\\EgovSupportApply.jsx":"20","C:\\prj\\cnbcs_web_frontend\\src\\egov\\support\\download\\EgovDownloadDetail.jsx":"21","C:\\prj\\cnbcs_web_frontend\\src\\egov\\support\\download\\EgovDownloadCreate.jsx":"22","C:\\prj\\cnbcs_web_frontend\\src\\egov\\support\\download\\EgovDownloadList.jsx":"23","C:\\prj\\cnbcs_web_frontend\\src\\egov\\support\\qna\\EgovQnaDetail.jsx":"24","C:\\prj\\cnbcs_web_frontend\\src\\egov\\inform\\notice\\EgovNoticeList.jsx":"25","C:\\prj\\cnbcs_web_frontend\\src\\egov\\support\\qna\\EgovQnaList.jsx":"26","C:\\prj\\cnbcs_web_frontend\\src\\egov\\inform\\notice\\EgovNoticeEdit.jsx":"27","C:\\prj\\cnbcs_web_frontend\\src\\egov\\inform\\notice\\EgovNoticeDetail.jsx":"28","C:\\prj\\cnbcs_web_frontend\\src\\egov\\inform\\daily\\EgovDailyList.jsx":"29","C:\\prj\\cnbcs_web_frontend\\src\\egov\\inform\\daily\\EgovDailyDetail.jsx":"30","C:\\prj\\cnbcs_web_frontend\\src\\egov\\inform\\gallery\\EgovGalleryEdit.jsx":"31","C:\\prj\\cnbcs_web_frontend\\src\\egov\\inform\\gallery\\EgovGalleryList.jsx":"32","C:\\prj\\cnbcs_web_frontend\\src\\egov\\inform\\weekly\\EgovWeeklyList.jsx":"33","C:\\prj\\cnbcs_web_frontend\\src\\egov\\inform\\gallery\\EgovGalleryDetail.jsx":"34","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\schedule\\EgovAdminScheduleList.jsx":"35","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\schedule\\EgovAdminScheduleDetail.jsx":"36","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\template\\EgovAdminTemplateEdit.jsx":"37","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\board\\EgovAdminBoardEdit.jsx":"38","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\template\\EgovAdminTemplateList.jsx":"39","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\usage\\EgovAdminUsageEdit.jsx":"40","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\schedule\\EgovAdminScheduleEdit.jsx":"41","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\board\\EgovAdminBoardList.jsx":"42","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\notice\\EgovAdminNoticeDetail.jsx":"43","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\notice\\EgovAdminNoticeEdit.jsx":"44","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\notice\\EgovAdminNoticeList.jsx":"45","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\usage\\EgovAdminUsageList.jsx":"46","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\gallery\\EgovAdminGalleryList.jsx":"47","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\gallery\\EgovAdminGalleryEdit.jsx":"48","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\gallery\\EgovAdminGalleryDetail.jsx":"49","C:\\prj\\cnbcs_web_frontend\\src\\context\\egovFetch.js":"50","C:\\prj\\cnbcs_web_frontend\\src\\context\\config.js":"51","C:\\prj\\cnbcs_web_frontend\\src\\egov\\login\\EgovLoginContent.jsx":"52","C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\EgovPaging.jsx":"53","C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\EgovAttachFile.jsx":"54","C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\leftmenu\\EgovLeftNavIntro.jsx":"55","C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\leftmenu\\EgovLeftNavInform.jsx":"56","C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\leftmenu\\EgovLeftNavAbout.jsx":"57","C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\leftmenu\\EgovLeftNavSupport.jsx":"58","C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\EgovImageGallery.jsx":"59","C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\leftmenu\\EgovLeftNavAdmin.jsx":"60","C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\EgovRadioButtonGroup.jsx":"61","C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\EgovSelect.jsx":"62","C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\EgovRadioButton.jsx":"63"},{"size":590,"mtime":1737433655464,"results":"64","hashOfConfig":"65"},{"size":375,"mtime":1737433655462,"results":"66","hashOfConfig":"65"},{"size":9925,"mtime":1744276306621,"results":"67","hashOfConfig":"65"},{"size":3718,"mtime":1737433655463,"results":"68","hashOfConfig":"65"},{"size":1311,"mtime":1744276203660,"results":"69","hashOfConfig":"65"},{"size":5674,"mtime":1737433655496,"results":"70","hashOfConfig":"65"},{"size":711,"mtime":1737433655498,"results":"71","hashOfConfig":"65"},{"size":825,"mtime":1737433655491,"results":"72","hashOfConfig":"65"},{"size":1618,"mtime":1737433655490,"results":"73","hashOfConfig":"65"},{"size":11232,"mtime":1737433655490,"results":"74","hashOfConfig":"65"},{"size":1303,"mtime":1737433655489,"results":"75","hashOfConfig":"65"},{"size":7782,"mtime":1737433655587,"results":"76","hashOfConfig":"65"},{"size":4230,"mtime":1737433655586,"results":"77","hashOfConfig":"65"},{"size":2113,"mtime":1737433655587,"results":"78","hashOfConfig":"65"},{"size":2065,"mtime":1737433655585,"results":"79","hashOfConfig":"65"},{"size":1245,"mtime":1737433655472,"results":"80","hashOfConfig":"65"},{"size":2897,"mtime":1737433655472,"results":"81","hashOfConfig":"65"},{"size":4408,"mtime":1737433655473,"results":"82","hashOfConfig":"65"},{"size":8470,"mtime":1737433655470,"results":"83","hashOfConfig":"65"},{"size":2083,"mtime":1737433655469,"results":"84","hashOfConfig":"65"},{"size":5236,"mtime":1737433655468,"results":"85","hashOfConfig":"65"},{"size":6057,"mtime":1737433655469,"results":"86","hashOfConfig":"65"},{"size":14247,"mtime":1737433655467,"results":"87","hashOfConfig":"65"},{"size":7279,"mtime":1737433655466,"results":"88","hashOfConfig":"65"},{"size":9484,"mtime":1737433655475,"results":"89","hashOfConfig":"65"},{"size":6557,"mtime":1737433655466,"results":"90","hashOfConfig":"65"},{"size":8722,"mtime":1737433655476,"results":"91","hashOfConfig":"65"},{"size":8127,"mtime":1737433655476,"results":"92","hashOfConfig":"65"},{"size":9903,"mtime":1737433655480,"results":"93","hashOfConfig":"65"},{"size":8146,"mtime":1737433655481,"results":"94","hashOfConfig":"65"},{"size":8885,"mtime":1737433655478,"results":"95","hashOfConfig":"65"},{"size":9369,"mtime":1737433655478,"results":"96","hashOfConfig":"65"},{"size":16701,"mtime":1737433655474,"results":"97","hashOfConfig":"65"},{"size":8207,"mtime":1737433655479,"results":"98","hashOfConfig":"65"},{"size":14453,"mtime":1737433655597,"results":"99","hashOfConfig":"65"},{"size":9156,"mtime":1737433655595,"results":"100","hashOfConfig":"65"},{"size":10388,"mtime":1737433655598,"results":"101","hashOfConfig":"65"},{"size":19123,"mtime":1737433655589,"results":"102","hashOfConfig":"65"},{"size":8447,"mtime":1737433655599,"results":"103","hashOfConfig":"65"},{"size":12813,"mtime":1737433655600,"results":"104","hashOfConfig":"65"},{"size":18014,"mtime":1737433655596,"results":"105","hashOfConfig":"65"},{"size":8346,"mtime":1737433655590,"results":"106","hashOfConfig":"65"},{"size":7991,"mtime":1737433655593,"results":"107","hashOfConfig":"65"},{"size":9047,"mtime":1737433655593,"results":"108","hashOfConfig":"65"},{"size":9245,"mtime":1737433655594,"results":"109","hashOfConfig":"65"},{"size":8232,"mtime":1737433655601,"results":"110","hashOfConfig":"65"},{"size":9323,"mtime":1737433655592,"results":"111","hashOfConfig":"65"},{"size":9058,"mtime":1737433655591,"results":"112","hashOfConfig":"65"},{"size":8078,"mtime":1737433655590,"results":"113","hashOfConfig":"65"},{"size":2338,"mtime":1737433655497,"results":"114","hashOfConfig":"65"},{"size":386,"mtime":1737433655497,"results":"115","hashOfConfig":"65"},{"size":3900,"mtime":1737433655471,"results":"116","hashOfConfig":"65"},{"size":3282,"mtime":1737433655487,"results":"117","hashOfConfig":"65"},{"size":3580,"mtime":1737433655493,"results":"118","hashOfConfig":"65"},{"size":640,"mtime":1737433655483,"results":"119","hashOfConfig":"65"},{"size":1095,"mtime":1737433655483,"results":"120","hashOfConfig":"65"},{"size":835,"mtime":1737433655484,"results":"121","hashOfConfig":"65"},{"size":734,"mtime":1737433655482,"results":"122","hashOfConfig":"65"},{"size":727,"mtime":1737433655489,"results":"123","hashOfConfig":"65"},{"size":1103,"mtime":1737433655484,"results":"124","hashOfConfig":"65"},{"size":651,"mtime":1737433655486,"results":"125","hashOfConfig":"65"},{"size":1009,"mtime":1737433655486,"results":"126","hashOfConfig":"65"},{"size":603,"mtime":1737433655487,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"kfkv5i",{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"130"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"130"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"130"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"130"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"130"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"130"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"130"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"130"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"130"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"130"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"130"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"130"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"130"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"130"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"130"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"130"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"130"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"130"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"130"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"130"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"130"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"130"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"130"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"130"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"130"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"130"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"130"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"130"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"130"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"130"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"130"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"130"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"130"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"130"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"130"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"C:\\prj\\cnbcs_web_frontend\\src\\index.js",[],["290","291"],"C:\\prj\\cnbcs_web_frontend\\src\\reportWebVitals.js",[],"C:\\prj\\cnbcs_web_frontend\\src\\App.js",[],"C:\\prj\\cnbcs_web_frontend\\src\\js\\ui.js",["292","293"],"import $ from 'jquery';\r\n\r\n$(function() {\r\n    // 메인화면 미니보드\r\n    $('.mini_board .tab li a').on('click', function(e) {\r\n        e.preventDefault();\r\n        $(this).addClass('on');\r\n        $(this).parent().siblings().find('a').removeClass('on');\r\n        \r\n        var idx = $('.mini_board .tab li a').index(this);\r\n        $('.mini_board .list > div').hide();\r\n        $('.mini_board .list > div').eq(idx).show();\r\n    });\r\n\r\n    /* 전체메뉴 */\r\n        // 웹\r\n        $('.btnAllMenu').on('click', function() {\r\n            $(this).toggleClass('active');\r\n            if ( $('.all_menu.WEB').is(':visible') ) {\r\n                $('.all_menu.WEB').slideUp(150);\r\n                $(this).attr('title', '전체메뉴 닫힘');\r\n            } else {\r\n                $('.all_menu.WEB').slideDown(150);\r\n                $(this).attr('title', '전체메뉴 열림');\r\n            }\r\n        });\r\n        // 모바일 전체메뉴 열기\r\n        $('.btnAllMenuM').on('click', function() {\r\n            $('.all_menu.Mobile').stop().animate({\r\n                left: 0\r\n            }, 200, function() {});\r\n            $(this).attr('title', '전체메뉴 열림');\r\n        });\r\n        // 닫기\r\n        $('.user_info_m .close').on('click', function() {\r\n            $('.all_menu.Mobile').stop().animate({\r\n                left: -800\r\n            }, 200, function() {});\r\n            $('.btnAllMenuM').attr('title', '전체메뉴 닫힘');\r\n        });\r\n        // Menu slide\r\n        $('.all_menu.Mobile h3 a').on('click', function(e) {\r\n            e.preventDefault();\r\n            $(this).toggleClass('active');\r\n            if ( $(this).parent().next('ul').is(':visible') ) {\r\n                $(this).parent().next('ul').slideUp(150);\r\n            } else {\r\n                $(this).parent().next('ul').slideDown(150);\r\n            }\r\n        });\r\n\r\n\r\n    \r\n    /* Form */\r\n        // Checkbox\r\n        $('.f_chk').on('keyup', function(e) {\r\n            e.preventDefault();\r\n            if (window.event.keyCode == 13) {\r\n                $(this).toggleClass('on');\r\n                if ( $(this).find('input').prop('checked') ) {\r\n                    $(this).find('input').prop('checked', false);\r\n                } else {\r\n                    $(this).find('input').prop('checked', true);\r\n                }\r\n            }\r\n        });\r\n        $('.f_chk input').on('click', function(e) {\r\n            e.preventDefault();\r\n            $(this).parent().toggleClass('on');\r\n        });\r\n\r\n        // Radio\r\n        // $('.f_rdo').on('click', function() {\r\n        //     $(this).addClass('on');\r\n        //     $(this).siblings().removeClass('on');\r\n        //     $(this).find('input').prop('checked', true);\r\n        // });\r\n\r\n\r\n        // 홈페이지 템플릿 소개팝업\r\n        var template = {\r\n            init: function() {\r\n                this.$tg = $('.TEMPLATE_INTRO');\r\n                this.$btn = $('.lnk_go_template');\r\n                this.$btnClose = this.$tg.find('.pop_header .close');\r\n                this.addEvent();\r\n            },\r\n            addEvent: function() {\r\n                var obj = this.$tg;\r\n                var objClose = this.$btnClose;\r\n                this.$btn.on('click', function(e) {\r\n                    e.preventDefault();\r\n                    obj.show();\r\n                    // obj.attr('tabindex', 0);\r\n                    // obj.focus();\r\n                });\r\n                this.$btnClose.on('click', function(e) {\r\n                    e.preventDefault();\r\n                    obj.hide();\r\n                    // objClose.focus();\r\n                });\r\n            }\r\n        }\r\n        $('.lnk_go_template').length && template.init();\r\n    \r\n});","C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\map\\VWorldMap.jsx",[],"C:\\prj\\cnbcs_web_frontend\\src\\context\\url.js",[],"C:\\prj\\cnbcs_web_frontend\\src\\context\\code.js",[],"C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\EgovError.jsx",[],"C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\EgovFooter.jsx",[],"C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\EgovHeader.jsx",["294"],"import React from 'react';\r\nimport { Link, NavLink, useHistory } from 'react-router-dom';\r\n\r\nimport * as EgovNet from 'context/egovFetch';\r\n\r\nimport URL from 'context/url';\r\nimport CODE from 'context/code';\r\n\r\nfunction EgovHeader({ loginUser, onChangeLogin }) {\r\n    console.group(\"EgovHeader\");\r\n    console.log(\"[Start] EgovHeader ------------------------------\");\r\n\r\n    const history = useHistory();\r\n\r\n    const logInHandler = () => { // 로그인 정보 없을 시\r\n        history.push(URL.LOGIN);\r\n    }\r\n    const logOutHandler = () => {// 로그인 정보 존재할 때\r\n        const logOutUrl = '/uat/uia/actionLogoutAPI.do';\r\n        const requestOptions = {\r\n            credentials: 'include',\r\n        }\r\n        EgovNet.requestFetch(logOutUrl, requestOptions,\r\n            function (resp) {\r\n                console.log(\"===>>> logout resp= \", resp);\r\n                if (resp.resultCode == CODE.RCV_SUCCESS) {\r\n                    onChangeLogin({ loginVO: {} });\r\n                    window.alert(\"로그아웃되었습니다!\");\r\n                    history.push(URL.MAIN);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    console.log(\"------------------------------EgovHeader [End]\");\r\n    console.groupEnd(\"EgovHeader\");\r\n\r\n    return (\r\n        // <!-- header -->\r\n        <div className=\"header\">\r\n            <div className=\"inner\">\r\n                <Link to={URL.MAIN} className=\"ico lnk_go_template\" target=\"_blank\">홈페이지 템플릿 소개 페이지로 이동</Link>\r\n\r\n                <h1 className=\"logo\">\r\n                    <Link to={URL.MAIN} className=\"w\"><img src=\"/assets/images/logo_w.png\" alt=\"표준프레임워크포털 eGovFrame 심플홈페이지\" /></Link>\r\n                    <Link to={URL.MAIN} className=\"m\"><img src=\"/assets/images/logo_m.png\" alt=\"표준프레임워크포털 eGovFrame 심플홈페이지\" /></Link>\r\n                </h1>\r\n\r\n                <div className=\"gnb\">\r\n                    <h2 className=\"blind\">주메뉴</h2>\r\n                    <ul>\r\n                        <li><NavLink to={URL.ABOUT} activeClassName=\"cur\">사이트소개</NavLink></li>\r\n                        <li><NavLink to={URL.INTRO} activeClassName=\"cur\">정보마당</NavLink></li>\r\n                        <li><NavLink to={URL.SUPPORT} activeClassName=\"cur\">고객지원</NavLink></li>\r\n                        <li><NavLink to={URL.INFORM} activeClassName=\"cur\">알림마당</NavLink></li>\r\n                        {loginUser?.id &&\r\n                            <li><NavLink to={URL.ADMIN} activeClassName=\"cur\">사이트관리</NavLink></li>\r\n                        }\r\n                    </ul>\r\n                </div>\r\n\r\n                {/* <!-- PC web에서 보여지는 영역 --> */}\r\n                <div className=\"user_info\">\r\n                    {/* 로그아웃 : 로그인 정보 있을때 */}\r\n                    {loginUser?.id &&\r\n                        <>\r\n                            <span className=\"person\">{loginUser?.name} </span> 님이, 관리자로 로그인하셨습니다.\r\n                            <button onClick={logOutHandler} className=\"btn\">로그아웃</button>\r\n                        </>\r\n                    }\r\n                    {/* 로그인 : 로그인 정보 없을 때 */}\r\n                    {!loginUser?.id &&\r\n                        <button onClick={logInHandler} className=\"btn login\">로그인</button>\r\n                    }\r\n                </div>\r\n                {/* <!--// PC web에서 보여지는 영역 --> */}\r\n\r\n                {/* <!-- right area --> */}\r\n                <div className=\"right_a\">\r\n                    <button type=\"button\" className=\"btn btnAllMenu\" title=\"전체메뉴 닫힘\">전체메뉴</button>\r\n                    <button type=\"button\" className=\"btn mobile btnAllMenuM\" title=\"전체메뉴 닫힘\">전체메뉴</button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* <!-- All menu : web --> */}\r\n            <div className=\"all_menu WEB\">\r\n                <h2 className=\"blind\">전체메뉴</h2>\r\n                <div className=\"inner\">\r\n                    <div className=\"col\">\r\n                        <h3>사이트소개</h3>\r\n                        <ul>\r\n                            <li><NavLink to={URL.ABOUT_SITE} activeClassName=\"cur\">소개</NavLink></li>\r\n                            <li><NavLink to={URL.ABOUT_HISTORY} activeClassName=\"cur\">연혁</NavLink></li>\r\n                            <li><NavLink to={URL.ABOUT_ORGANIZATION} activeClassName=\"cur\">조직소개</NavLink></li>\r\n                            <li><NavLink to={URL.ABOUT_LOCATION} activeClassName=\"cur\">찾아오시는 길</NavLink></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <h3>정보마당</h3>\r\n                        <ul>\r\n                            <li><NavLink to={URL.INTRO_WORKS} activeClassName=\"cur\">주요사업 소개</NavLink></li>\r\n                            <li><NavLink to={URL.INTRO_SERVICE} activeClassName=\"cur\">대표서비스 소개</NavLink></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <h3>고객지원</h3>\r\n                        <ul>\r\n                            <li><NavLink to={URL.SUPPORT_DOWNLOAD} activeClassName=\"cur\">자료실</NavLink></li>\r\n                            <li><NavLink to={URL.SUPPORT_QNA} activeClassName=\"cur\">묻고 답하기</NavLink></li>\r\n                            <li><NavLink to={URL.SUPPORT_APPLY} activeClassName=\"cur\">서비스 신청</NavLink></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <h3>알림마당</h3>\r\n                        <ul>\r\n                            <li><NavLink to={URL.INFORM_DAILY}>오늘의 행사</NavLink></li>\r\n                            <li><NavLink to={URL.INFORM_WEEKLY} activeClassName=\"cur\">금주의 행사</NavLink></li>\r\n                            <li><NavLink to={URL.INFORM_NOTICE} activeClassName=\"cur\">공지사항</NavLink></li>\r\n                            <li><NavLink to={URL.INFORM_GALLERY} activeClassName=\"cur\">사이트 갤러리</NavLink></li>\r\n                        </ul>\r\n                    </div>\r\n                    {loginUser?.id &&\r\n                        <div className=\"col\">\r\n                            <h3>사이트관리</h3>\r\n                            <ul>\r\n                                <li><NavLink to={URL.ADMIN_SCHEDULE} activeClassName=\"cur\">일정관리</NavLink></li>\r\n                                <li><NavLink to={URL.ADMIN_BOARD} activeClassName=\"cur\">게시판생성관리</NavLink></li>\r\n                                <li><NavLink to={URL.ADMIN_USAGE} activeClassName=\"cur\">게시판사용관리</NavLink></li>\r\n                                <li><NavLink to={URL.ADMIN_NOTICE} activeClassName=\"cur\">공지사항관리</NavLink></li>\r\n                                <li><NavLink to={URL.ADMIN_GALLERY} activeClassName=\"cur\">사이트갤러리관리</NavLink></li>\r\n                            </ul>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            {/* <!-- All menu : mobile --> */}\r\n            <div className=\"all_menu Mobile\">\r\n                <div className=\"user_info_m\">\r\n                    {/* 로그아웃 : 로그인 정보 있을때 */}\r\n                    {loginUser?.id &&\r\n                        <>\r\n                            <span className=\"person\">{loginUser?.name} </span>이 로그인하셨습니다.\r\n                            <button onClick={logOutHandler} className=\"btn logout\">로그아웃</button>\r\n                        </>\r\n                    }\r\n\r\n                    {/* 로그인 : 로그인 정보 없을 때 */}\r\n                    {!loginUser?.id &&\r\n                        <button onClick={logInHandler} className=\"btn login\">로그인</button>\r\n                    }\r\n                    <button className=\"btn noscript close\" type=\"button\">전체메뉴 닫기</button>\r\n                </div>\r\n                <div className=\"menu\">\r\n                    <h3><Link to={URL.ABOUT}>사이트소개</Link></h3>\r\n                    <ul>\r\n                        <li><NavLink to={URL.ABOUT_SITE} activeClassName=\"cur\">소개</NavLink></li>\r\n                        <li><NavLink to={URL.ABOUT_HISTORY} activeClassName=\"cur\">연혁</NavLink></li>\r\n                        <li><NavLink to={URL.ABOUT_ORGANIZATION} activeClassName=\"cur\">조직소개</NavLink></li>\r\n                        <li><NavLink to={URL.ABOUT_LOCATION} activeClassName=\"cur\">찾아오시는 길</NavLink></li>\r\n                    </ul>\r\n                    <h3><Link to={URL.INTRO}>정보마당</Link></h3>\r\n                    <ul>\r\n                        <li><NavLink to={URL.INTRO_WORKS} activeClassName=\"cur\">주요사업 소개</NavLink></li>\r\n                        <li><NavLink to={URL.INTRO_SERVICE} activeClassName=\"cur\">대표서비스 소개</NavLink></li>\r\n                    </ul>\r\n                    <h3><Link to={URL.SUPPORT}>고객지원</Link></h3>\r\n                    <ul>\r\n                        <li><NavLink to={URL.SUPPORT_DOWNLOAD} activeClassName=\"cur\">자료실</NavLink></li>\r\n                        <li><NavLink to={URL.SUPPORT_QNA} activeClassName=\"cur\">묻고 답하기</NavLink></li>\r\n                        <li><NavLink to={URL.SUPPORT_APPLY} activeClassName=\"cur\">서비스 신청</NavLink></li>\r\n                    </ul>\r\n                    <h3><Link to={URL.INFORM}>알림마당</Link></h3>\r\n                    <ul>\r\n                        <li><NavLink to={URL.INFORM_DAILY}>오늘의 행사</NavLink></li>\r\n                        <li><NavLink to={URL.INFORM_WEEKLY} activeClassName=\"cur\">금주의 행사</NavLink></li>\r\n                        <li><NavLink to={URL.INFORM_NOTICE} activeClassName=\"cur\">공지사항</NavLink></li>\r\n                        <li><NavLink to={URL.INFORM_GALLERY} activeClassName=\"cur\">사이트 갤러리</NavLink></li>\r\n                    </ul>\r\n                    {loginUser?.id &&\r\n                        <>\r\n                            <h3><Link to={URL.ADMIN}>사이트관리</Link></h3>\r\n                            <ul>\r\n                                <li><NavLink to={URL.ADMIN_SCHEDULE} activeClassName=\"cur\">일정관리</NavLink></li>\r\n                                <li><NavLink to={URL.ADMIN_BOARD} activeClassName=\"cur\">게시판생성관리</NavLink></li>\r\n                                <li><NavLink to={URL.ADMIN_USAGE} activeClassName=\"cur\">게시판사용관리</NavLink></li>\r\n                                <li><NavLink to={URL.ADMIN_NOTICE} activeClassName=\"cur\">공지사항관리</NavLink></li>\r\n                                <li><NavLink to={URL.ADMIN_GALLERY} activeClassName=\"cur\">사이트갤러리관리</NavLink></li>\r\n                            </ul>\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n            {/* <!--// All menu --> */}\r\n        </div>\r\n        // <!--// header -->\r\n    );\r\n}\r\n\r\nexport default EgovHeader;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\EgovInfoPopup.jsx",["295"],"import React, {Component} from 'react';\r\n\r\nfunction EgovInfoPopup(){\r\n    return (\r\n        <div className=\"wrap_pop TEMPLATE_INTRO\">\r\n        <div className=\"pop_inner\">\r\n            <div className=\"pop_header\">\r\n                <h1>홈페이지 템플릿 소개</h1>\r\n                <button className=\"btn close\" type=\"button\">닫기</button>\r\n            </div>\r\n    \r\n            <div className=\"pop_container\">\r\n                <ul className=\"list_1\">\r\n                    <li>경량환경 템플릿은 개발자가 프레임워크 쉽게 이해하고 활용할 수 있도록 지원합니다.</li>\r\n                    <li>홈페이지 템플릿은 공통컴포넌트를 기반으로 아래 그림과 같이 메뉴가 구성됩니다.</li>\r\n                    <li>관리자로 로그인하면 관리자용 메뉴를 추가로 사용할 수 있습니다.</li>\r\n                    <li>사이트소개, 정보마당, 고객지원 메뉴는 구성을 위한 샘플페이지가 제공되며 기능은 구현되지 않은 상태입니다.</li>\r\n                </ul>\r\n                <div className=\"img\">\r\n                    <img src=\"/assets/images/img_template_intro.png\" alt=\"\"/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default EgovInfoPopup;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\about\\EgovAboutSite.jsx",[],"C:\\prj\\cnbcs_web_frontend\\src\\egov\\about\\EgovAboutLocation.jsx",[],"C:\\prj\\cnbcs_web_frontend\\src\\egov\\about\\EgovAboutOrganization.jsx",[],"C:\\prj\\cnbcs_web_frontend\\src\\egov\\about\\EgovAboutHistory.jsx",[],"C:\\prj\\cnbcs_web_frontend\\src\\egov\\login\\EgovLogin.jsx",[],"C:\\prj\\cnbcs_web_frontend\\src\\egov\\intro\\EgovIntroWork.jsx",["296","297","298"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavIntro';\r\n\r\nfunction EgovIntroWork() {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                        <li><a className=\"home\" href=\"\">Home</a></li>\r\n                        <li><a href=\"\">정보마당</a></li>\r\n                        <li>주요사업 소개</li>\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav></EgovLeftNav>\r\n                    {/* <!--// Navigation --> */}\r\n                    \r\n                    <div className=\"contents BUSINESS_INTRO\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <h1 className=\"tit_3\">정보마당</h1>\r\n\r\n                        <p className=\"txt_1\">대표제품의 소개와 대표서비스의 소개를 보실 수 있는 페이지입니다.</p>\r\n                        \r\n                        <h2 className=\"tit_4\">주요사업 소개</h2>\r\n\r\n                        <h3 className=\"tit_5\">개요</h3>\r\n\r\n                        <p className=\"msg_1\">전자정부 표준프레임워크는 실행환경, 개발환경, 관리환경, 운영환경 등 4개의 표준프레임워크 환경과 공통<br/>\r\n                            컴포넌트로 구성된다. 전자정부 및 공공사업에서 웹 어플리케이션 시스템 구축 시 어플리케이션 아키텍처와 기본 <br/>\r\n                            기능 및 공통컴포넌트를 표준으로 제공하는 개발프레임워크로서 다음과 같이 실행, 개발, 운영, 관리환경과 공통<br/>\r\n                            컴포넌트로 구성됨</p>\r\n                        \r\n                        <h3 className=\"tit_5\">실행 환경</h3>\r\n\r\n                        <p className=\"msg_1\">전자정부 사업에서 개발하는 업무 프로그램의 실행에 필요한 공통모듈 등 업무 프로그램 개발 시 화면,서버 프로<br/>\r\n                            그램, 데이터 개발을 표준화가 용이하도록 지원하는 응용프로그램 환경</p>\r\n\r\n                        <p className=\"img\">\r\n                            <img className=\"w\" src=\"/assets/images/img_business_intro.png\" alt=\"\"/>\r\n                            <img className=\"m\" src=\"/assets/images/img_business_intro_m.png\" alt=\"\"/>\r\n                        </p>\r\n\r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EgovIntroWork;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\intro\\EgovIntroService.jsx",["299","300","301"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavIntro';\r\n\r\nfunction EgovIntroService() {\r\n    return (\r\n        <div className=\"container\">\r\n        <div className=\"c_wrap\">\r\n            {/* <!-- Location --> */}\r\n            <div className=\"location\">\r\n                <ul>\r\n                    <li><a className=\"home\" href=\"\">Home</a></li>\r\n                    <li><a href=\"\">정보마당</a></li>\r\n                    <li>대표서비스 소개</li>\r\n                </ul>\r\n            </div>\r\n            {/* <!--// Location --> */}\r\n\r\n            <div className=\"layout\">\r\n                {/* <!-- Navigation --> */}\r\n                <EgovLeftNav></EgovLeftNav>\r\n                {/* <!--// Navigation --> */}\r\n                \r\n                <div className=\"contents SERVICE_INTRO\" id=\"contents\">\r\n                    {/* <!-- 본문 --> */}\r\n\r\n                    <h1 className=\"tit_3\">정보마당</h1>\r\n\r\n                    <p className=\"txt_1\">대표제품의 소개와 대표서비스의 소개를 보실 수 있는 페이지입니다.</p>\r\n                    \r\n                    <h2 className=\"tit_4\">대표서비스 소개</h2>\r\n\r\n                    <p className=\"txt_1\">\r\n                        전자정부 표준 프레임워크 실행환경은 5개 서비스 그룹으로 구성되며 34개 서비스를 제공한다.<br/>\r\n                        실행환경 서비스 구조는 아래 그림과 같다.\r\n                    </p>\r\n\r\n                    <h3 className=\"tit_5\">화면처리</h3>\r\n\r\n                    <div className=\"msg\">\r\n                        <p>화면처리 서비스그룹은 업무처리 서비스와 사용자간의 인터페이스를 담당하는 서비스로 사용자 화면 구성 및<br/>사용자 입력 정보 검증 등의 기능을 지원한다.</p>\r\n                        <ul>\r\n                            <li>Ajax Support: Ajax는 대화식 웹 애플리케이션의 제작을 위해 HTML과 CSS, DOM, 자바 스크립트, XML, XSLT 등과 같은 조합을 이용하는 웹 개발 기법으로 Ajax 기능 지원을 위한 Custom Tag Library를 제공한다.</li>\r\n                            <li>Internationalization: Internationalization은 다양한 지역과 언어 환경을 지원할 수 있는 서비스로, 서버 설정 및 클라이언트 브라우저 환경에 따라 자동화된 다국어 기능을 제공한다.</li>\r\n                            <li>MVC :  MVC 디자인 패턴을 적용하여 사용자 화면을 개발할 수 있도록 MVC 기반 구조를 제공한다.</li>\r\n                            <li>Security : 웹 응용프로그램 작성 시 발생될 수 있는 웹 보안상의 취약점(XSS, SQL Injection 등)에 대응하기 위한 기능을 제공한다.</li>\r\n                            <li>UI Adaptor : 화면 레이어의 구현 방식에 따라 업무로직 레이어가 변경되는 것을 막기 위해서, 업무처리 Layer에서 사용할 데이터 타입을 정의하고, 화면 레이어에서 사용하는 in/out parameter를 해당 구현 \r\n                                방식에 맞게 변환해주는 기능 제공한다.</li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <h3 className=\"tit_5\">업무처리</h3>\r\n\r\n                    <div className=\"msg second\">\r\n                        <p>업무처리 서비스는 업무 프로그램의 업무 로직을 담당하는 서비스로 업무 흐름제어, 트랜잭션 관리, 에러 처리 등의<br/>\r\n                            기능을 제공한다.</p>\r\n                        <ul>\r\n                            <li>Process Control : 비지니스 로직과 업무 흐름의 분리를 지원하며, XML 등의 외부 설정으로 업무흐름 구성을 제공하고, 미리 정의된 프로세스를 실행하는 기능을 제공한다.\r\n                                </li>\r\n                            <li>Exception Handling : 응용 프로그래밍의 수행 과정에서 발생하는 예외사항(Exception)을 처리하기 위해 표준화된 방법을 제공한다.</li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    {/* <!--// 본문 --> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default EgovIntroService;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\main\\EgovMain.jsx",["302","303"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport * as EgovNet from 'context/egovFetch';\r\nimport URL from 'context/url';\r\n\r\nfunction EgovMain(props) {\r\n    console.group(\"EgovMain\");\r\n    console.log(\"[Start] EgovMain ------------------------------\");\r\n    console.log(\"EgovMain [props] : \", props);\r\n\r\n    const history = useHistory();\r\n    console.log(\"EgovMain [history] : \", history);\r\n\r\n    const [noticeBoard, setNoticeBoard] = useState();\r\n    const [gallaryBoard, setGallaryBoard] = useState();\r\n    const [noticeListTag, setNoticeListTag] = useState();\r\n    const [gallaryListTag, setGallaryListTag] = useState();\r\n\r\n    const retrieveList = () => {\r\n        console.groupCollapsed(\"EgovMain.retrieveList()\");\r\n\r\n        const retrieveListURL = '/cmm/main/mainPageAPI.do';\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify()\r\n        }\r\n\r\n        EgovNet.requestFetch(retrieveListURL,\r\n            requestOptions,\r\n            (resp) => {\r\n\r\n                setNoticeBoard(resp.result.notiList);\r\n                setGallaryBoard(resp.result.galList);\r\n\r\n                let mutNotiListTag = [];\r\n                mutNotiListTag.push(<li>검색된 결과가 없습니다.</li>); // 게시판 목록 초기값\r\n\r\n                // 리스트 항목 구성\r\n                resp.result.notiList.forEach(function (item, index) {\r\n                    if (index === 0) mutNotiListTag = []; // 목록 초기화\r\n                    mutNotiListTag.push(\r\n                        <li key={index}>\r\n                            <Link\r\n                                to={{\r\n                                    pathname: URL.INFORM_NOTICE_DETAIL,\r\n                                    state: {\r\n                                        nttId: item.nttId,\r\n                                        bbsId: item.bbsId\r\n                                    }\r\n                                }}\r\n                            >\r\n                                {item.nttSj}\r\n                                <span>{item.frstRegisterPnttm}</span>\r\n                            </Link>\r\n                        </li>\r\n                    );\r\n                });\r\n                setNoticeListTag(mutNotiListTag);\r\n\r\n                let mutGallaryListTag = [];\r\n                mutGallaryListTag.push(<li>검색된 결과가 없습니다.</li>); // 게시판 목록 초기값\r\n\r\n                // 리스트 항목 구성\r\n                resp.result.galList.forEach(function (item, index) {\r\n                    if (index === 0) mutGallaryListTag = []; // 목록 초기화\r\n                    mutGallaryListTag.push(\r\n                        <li key={index}>\r\n                            <Link\r\n                                to={{\r\n                                    pathname: URL.INFORM_GALLERY_DETAIL,\r\n                                    state: {\r\n                                        nttId: item.nttId,\r\n                                        bbsId: item.bbsId\r\n                                    }\r\n                                }}\r\n                            >\r\n                                {item.nttSj}\r\n                                <span>{item.frstRegisterPnttm}</span>\r\n                            </Link>\r\n                        </li>\r\n                    );\r\n                });\r\n                setGallaryListTag(mutGallaryListTag);\r\n            },\r\n            function (resp) {\r\n                console.log(\"err response : \", resp);\r\n            }\r\n        );\r\n        console.groupEnd(\"EgovMain.retrieveList()\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        retrieveList();\r\n        return () => {\r\n        }\r\n    }, []);\r\n\r\n    console.log(\"------------------------------EgovMain [End]\");\r\n    console.groupEnd(\"EgovMain\");\r\n\r\n    return (\r\n        <div className=\"container P_MAIN\">\r\n            <div className=\"c_wrap\">\r\n                <div className=\"colbox\">\r\n                    <div className=\"left_col\">\r\n                        <img src=\"assets/images/img_simple_main.png\" alt=\"단순 홈페이지 전자정부 표준프레임워크의 경량환경 내부업무에 대한 최신 정보와 기술을 제공하고 있습니다.\" />\r\n                    </div>\r\n\r\n                    <div className=\"right_col\">\r\n                        <div className=\"mini_board\">\r\n                            <ul className=\"tab\">\r\n                                <li><Link to={URL.INFORM_NOTICE} className=\"on\">공지사항</Link></li>\r\n                                <li><Link to={URL.INFORM_GALLERY}>갤러리</Link></li>\r\n                            </ul>\r\n                            <div className=\"list\">\r\n                                <div className=\"notice\">\r\n                                    <h2 className=\"blind\">공지사항</h2>\r\n                                    <ul>\r\n                                        {noticeListTag}\r\n                                    </ul>\r\n                                    <Link to={URL.INFORM_NOTICE} className=\"more\">더보기</Link>\r\n                                </div>\r\n\r\n                                <div className=\"gallary\">\r\n                                    <h2 className=\"blind\">갤러리</h2>\r\n                                    <ul>\r\n                                        {gallaryListTag}\r\n                                    </ul>\r\n                                    <Link to={URL.INFORM_GALLERY} className=\"more\">더보기</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"banner\">\r\n                            <Link to={URL.SUPPORT_DOWNLOAD} className=\"bn1\">\r\n                                <strong>자료실</strong>\r\n                                <span>다양한 자료를<br />다운로드 받으실 수 있습니다.</span>\r\n                            </Link>\r\n                            <Link to={URL.ABOUT} className=\"bn2\">\r\n                                <strong>표준프레임워크센터</strong>\r\n                                <span>표준프레임워크센터의<br />약도 등의 정보를 제공합니다.</span>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"banner_bot\">\r\n                    <div className=\"b1\">\r\n                        <div>\r\n                            <h2>주요사업 소개</h2>\r\n                            <p>표준프레임워크가 제공하는<br />\r\n                                주요 사업을 소개합니다.</p>\r\n                        </div>\r\n                        <Link to={URL.INTRO_WORKS}>자세히 보기</Link>\r\n                    </div>\r\n                    <div className=\"b2\">\r\n                        <div>\r\n                            <h2>대표서비스 소개</h2>\r\n                            <p>표준프레임워크 실행환경의<br />\r\n                                서비스 그룹에서 제공하는<br />\r\n                                대표서비스입니다.</p>\r\n                        </div>\r\n                        <Link to={URL.INTRO_SERVICE}>자세히 보기</Link>\r\n                    </div>\r\n                    <div className=\"b3\">\r\n                        <div>\r\n                            <h2>서비스 신청</h2>\r\n                            <p>표준프레임워크 경량환경<br />\r\n                                홈페이지의 다양한 서비스를<br />\r\n                                신청 하실 수 있습니다.</p>\r\n                        </div>\r\n                        <Link to={URL.SUPPORT_APPLY}>자세히 보기</Link>\r\n                    </div>\r\n                    <div className=\"b4\">\r\n                        <div>\r\n                            <h2>일정 현황</h2>\r\n                            <p>표준프레임워크 경량환경<br />\r\n                                홈페이지의 전체적인 일정<br />\r\n                                현황을 조회하실 수 있습니다.</p>\r\n                        </div>\r\n                        <Link to={URL.INFORM}>자세히 보기</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default EgovMain;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\support\\apply\\EgovSupportApply.jsx",["304","305","306"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavSupport';\r\n\r\nfunction EgovSupportApply() {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                        <li><a className=\"home\" href=\"\">Home</a></li>\r\n                        <li><a href=\"\">고객지원</a></li>\r\n                        <li>서비스신청</li>\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav></EgovLeftNav>\r\n                    {/* <!--// Navigation --> */}\r\n                    \r\n                    <div className=\"contents SITE_INTRO\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <h1 className=\"tit_3\">고객지원</h1>\r\n\r\n                        <p className=\"txt_1\">프레임워크 경량환경의 원하시는 서비스를 신청하실 수 있습니다.</p>\r\n                        \r\n                        <h2 className=\"tit_4\">서비스 신청</h2>\r\n\r\n                        <h3 className=\"tit_5\">주요 서비스 안내</h3>\r\n\r\n                        <p className=\"msg_1\">\r\n                            서비스필요시 다음과 같은 절차로 신청하시면 됩니다.<br/><br/>\r\n                            1. 필요한 서비스 확인<br/><br/>\r\n                            2. 자료실에서 필요한 서비스 존재여부 확인<br/><br/>\r\n                            3. 서비스요청을 통해 필요한 서비스 신청<br/><br/>\r\n                            대표 서비스 자세히 보기</p>\r\n                    \r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EgovSupportApply;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\support\\download\\EgovDownloadDetail.jsx",["307"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavSupport';\r\nimport URL from 'context/url';\r\n\r\nfunction EgovDownloadDetail() {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                        <li><Link to=\"\" className=\"home\">Home</Link></li>\r\n                        <li><Link to=\"\">고객지원</Link></li>\r\n                        <li>소개</li>\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav></EgovLeftNav>\r\n                    {/* <!--// Navigation --> */}\r\n\r\n                    <div className=\"contents PDS_VIEW\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <div className=\"top_tit\">\r\n                            <h1 className=\"tit_1\">고객지원</h1>                            \r\n                        </div>\r\n                        \r\n                        <h2 className=\"tit_2\">자료실</h2>\r\n\r\n                        {/* <!-- 상세 --> */}\r\n                        <div className=\"board_view3\">\r\n                            <p className=\"tit\">egovframe installer v1.03</p>\r\n\r\n                            <div className=\"info\">\r\n                                <dl>\r\n                                    <dt>작성자</dt>\r\n                                    <dd>innovate</dd>\r\n                                </dl>\r\n                                <dl>\r\n                                    <dt>작성일</dt>\r\n                                    <dd>2011-08-01 23:22:11</dd>\r\n                                </dl>\r\n                            </div>\r\n\r\n                            <div className=\"info2\">\r\n                                <div className=\"left_col\">\r\n                                    <img src=\"/assets/images/sample_pds_list.png\" alt=\"\"/>\r\n                                    <a href=\"\" className=\"btn btn_down\"><span>다운로드</span></a>\r\n                                </div>\r\n                                <div className=\"right_col\">\r\n                                    <dl>\r\n                                        <dt>운영체제</dt>\r\n                                        <dd>Win95/Win98/WinME/WinNT/Win2000/WinXP/WinVISTA/Win7/</dd>\r\n                                    </dl>\r\n                                    <dl>\r\n                                        <dt>권장사양</dt>\r\n                                        <dd>펜티엄3</dd>\r\n                                    </dl>\r\n                                    <dl>\r\n                                        <dt>파일정보</dt>\r\n                                        <dd>7MB (총 1 개)/ egovframework-common-all.zip [15,083,713 byte]</dd>\r\n                                    </dl>\r\n                                    <dl>\r\n                                        <dt>등록일자</dt>\r\n                                        <dd>2011-08-08 11:11:11</dd>\r\n                                    </dl>\r\n                                    <dl>\r\n                                        <dt>언어</dt>\r\n                                        <dd>영어</dd>\r\n                                    </dl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* <!--// 상세 --> */}\r\n\r\n                        <h3 className=\"tit_5\">자료 상세설명</h3>\r\n\r\n                        <p className=\"pds_des\">안녕하세요.. 공통컴포넌트 전체 소스입니다. 관련된 내용은 다음 가이드를 참조하십시오. http://www.egovframe.go.kr/wiki/doku.php?id=\r\n                            egovframework:com:v3:init_guide 감사합니다.</p>\r\n\r\n                        {/* <!-- 버튼영역 --> */}\r\n                        <div className=\"board_btn_area\">\r\n                            <div className=\"left_col btn1\">\r\n                            </div>\r\n\r\n                            <div className=\"right_col btn1\">\r\n                                <Link to={URL.SUPPORT_DOWNLOAD} className=\"btn btn_blue_h46 w_100\">목록</Link>\r\n                            </div>\r\n                        </div>\r\n                        {/* <!--// 버튼영역 --> */}\r\n\r\n                        <div className=\"bottom_navi\">\r\n                            <dl>\r\n                                <dt>이전글</dt>\r\n                                <dd><Link to=\"\">egovframe installer v1.03</Link></dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>다음글</dt>\r\n                                <dd><Link to=\"\">egovframe installer v1.03</Link></dd>\r\n                            </dl>\r\n                        </div>\r\n\r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EgovDownloadDetail;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\support\\download\\EgovDownloadCreate.jsx",[],"C:\\prj\\cnbcs_web_frontend\\src\\egov\\support\\download\\EgovDownloadList.jsx",[],"C:\\prj\\cnbcs_web_frontend\\src\\egov\\support\\qna\\EgovQnaDetail.jsx",["308","309"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavSupport';\r\nimport URL from 'context/url';\r\n\r\nfunction EgovQnaDetail() {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                        <li><Link to=\"\" className=\"home\">Home</Link></li>\r\n                        <li><Link to=\"\">고객지원</Link></li>\r\n                        <li>소개</li>\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav></EgovLeftNav>\r\n                    {/* <!--// Navigation --> */}\r\n\r\n                    <div className=\"contents QNA_LIST\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <div className=\"top_tit\">\r\n                            <h1 className=\"tit_1\">고객지원</h1>                            \r\n                        </div>\r\n                        \r\n                        <h2 className=\"tit_2\">Q&amp;A 상세조회</h2>\r\n\r\n                        <div className=\"board_view2\">\r\n                            <dl>\r\n                                <dt>제목</dt>\r\n                                <dd>\r\n                                    jsp파일을 못찼습니다.\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>이메일</dt>\r\n                                <dd>\r\n                                    abc@nate.com\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>이메일답변여부</dt>\r\n                                <dd>\r\n                                    답변요청\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>등록일자</dt>\r\n                                <dd>\r\n                                    2011-08-08 11:11:11\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>작성자</dt>\r\n                                <dd>\r\n                                    박성환\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>전화</dt>\r\n                                <dd>\r\n                                    000-000-0000\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>작성일</dt>\r\n                                <dd>\r\n                                    2011-08-08\r\n                                </dd>\r\n                            </dl><dl>\r\n                                <dt>조회</dt>\r\n                                <dd>\r\n                                    100\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>처리상태</dt>\r\n                                <dd>\r\n                                    접수대기\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>첨부파일</dt>\r\n                                <dd>\r\n                                    <span className=\"file_attach\">\r\n                                        <Link to=\"\">file_name.hwp</Link> <span>[3626] byte</span>\r\n                                    </span>\r\n                                </dd>\r\n                            </dl>\r\n                        </div>\r\n                        <div className=\"qna_q\">\r\n                            <span>Q</span>\r\n                            안녕하세요 웹호스팅에 올렸더니 jsp파일에서 이런에러로그가 남았는데요 jsp파일을 못찾는것같습니다? xml을 수정해야하나요?<br/>\r\n                            심각: Servlet.service() for servlet action threw exception<br/>\r\n                            javax.servlet.ServletException: Could not get RequestDispatcher for [/WEB-INF/jsp/egovframework//main/main.jsp]: check that \r\n                            this file exists within your WAR<br/>\r\n                            at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:217)\r\n                        </div>\r\n                        <div className=\"qna_a\">\r\n                            <span>A</span>\r\n                            <ul>\r\n                                <li>\r\n                                    <span>chanjin님의 답변 2011-08-08 12:33:33</span>\r\n                                    심각: Servlet.service() for servlet action threw exception은 jsp파일을 열어서 보셔야합니다.\r\n                                    javax.servlet.ServletException: Could not get RequestDispatcher for [/WEB-INF/jsp/egovframework//main/main.jsp]: check that \r\n                                    this file exists within your WAR\r\n                                    <Link to=\"#\" className=\"btn delete\">Delete</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <span>sunrise님의 답변 2011-08-07 11:11:11</span>\r\n                                    tomcat서버를 재시동해보세요. 전 그렇게 하니깐 되던데요.\r\n                                    <Link to=\"#\" className=\"btn delete\">Delete</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <span>auto님의 답변 2011-08-07 11:11:11</span>\r\n                                    제가 살펴볼께요 메일로 주세요. test@naver.com\r\n                                    <Link to=\"#\" className=\"btn delete\">Delete</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                        {/* <!-- 답변달기 --> */}\r\n                        <div className=\"replay\">\r\n                            <div className=\"left_col\">\r\n                                <label htmlfor=\"replay_write\">답변달기</label>\r\n                                <div>\r\n                                    <textarea className=\"f_txtar w_full\" name=\"\" id=\"replay_write\" cols=\"30\" rows=\"10\"></textarea>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"right_col\">\r\n                                <a href=\"\" className=\"btn \">등록</a>\r\n                            </div>\r\n                        </div>\r\n                        {/* <!--// 답변달기 --> */}\r\n\r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default EgovQnaDetail;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\inform\\notice\\EgovNoticeList.jsx",[],"C:\\prj\\cnbcs_web_frontend\\src\\egov\\support\\qna\\EgovQnaList.jsx",[],"C:\\prj\\cnbcs_web_frontend\\src\\egov\\inform\\notice\\EgovNoticeEdit.jsx",["310","311"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport * as EgovNet from 'context/egovFetch';\r\nimport URL from 'context/url';\r\nimport CODE from 'context/code';\r\nimport { NOTICE_BBS_ID } from 'context/config';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavInform';\r\nimport EgovAttachFile from 'egov/common/EgovAttachFile';\r\n\r\nfunction EgovNoticeEdit(props) {\r\n    console.group(\"EgovNoticeEdit\");\r\n    console.log(\"------------------------------\");\r\n    console.log(\"EgovNoticeEdit [props] : \", props);\r\n\r\n    const history = useHistory();\r\n    console.log(\"EgovNoticeEdit [history] : \", history);\r\n\r\n    const bbsId = history.location.state?.bbsId || NOTICE_BBS_ID;\r\n    const nttId = history.location.state?.nttId || \"\";\r\n\r\n    const [modeInfo, setModeInfo] = useState({ mode: props.mode });\r\n    const [masterBoard, setMasterBoard] = useState({});\r\n    const [boardDetail, setBoardDetail] = useState({ nttSj: '', nttCn: '' });\r\n    const [boardAttachFiles, setBoardAttachFiles] = useState();\r\n\r\n    const initMode = () => {\r\n        switch (props.mode) {\r\n            case CODE.MODE_CREATE:\r\n                setModeInfo({\r\n                    ...modeInfo,\r\n                    modeTitle: \"등록\",\r\n                    editURL: '/cop/bbs/insertBoardArticleAPI.do'\r\n                });\r\n                break;\r\n            case CODE.MODE_MODIFY:\r\n                setModeInfo({\r\n                    ...modeInfo,\r\n                    modeTitle: \"수정\",\r\n                    editURL: '/cop/bbs/updateBoardArticleAPI.do'\r\n                });\r\n                break;\r\n            case CODE.MODE_REPLY:\r\n                setModeInfo({\r\n                    ...modeInfo,\r\n                    modeTitle: \"답글쓰기\",\r\n                    editURL: '/cop/bbs/replyBoardArticleAPI.do'\r\n                });\r\n                break;\r\n        }\r\n        retrieveDetail();\r\n    }\r\n\r\n    const retrieveDetail = () => {\r\n\r\n        if (modeInfo.mode === CODE.MODE_CREATE) {// 등록이면 조회 안함\r\n            setBoardDetail({ bbsId: bbsId, nttSj: \"\", nttCn: \"\" });\r\n            return;\r\n        }\r\n\r\n        const retrieveDetailURL = '/cop/bbs/selectBoardArticleAPI.do';\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                bbsId: bbsId,\r\n                nttId: nttId\r\n            })\r\n        }\r\n        EgovNet.requestFetch(retrieveDetailURL,\r\n            requestOptions,\r\n            function (resp) {\r\n                setMasterBoard(resp.result.brdMstrVO);\r\n                \r\n                // 초기 boardDetail 설정 => ( 답글 / 수정 ) 모드일때...\r\n                if (modeInfo.mode === CODE.MODE_REPLY) {// 답글모드이면 RE: 붙여줌 \r\n                    setBoardDetail({ ...resp.result.boardVO, nttSj: \"RE: \" + resp.result.boardVO.nttSj, nttCn: \"\" , inqireCo: 0, atchFileId: \"\"});\r\n                }\r\n                if (modeInfo.mode === CODE.MODE_MODIFY) {\r\n                    setBoardDetail(resp.result.boardVO);\r\n                }\r\n                \r\n                // 초기 setBoardAttachFiles 설정 => (수정) 모드 일때...\r\n                if (modeInfo.mode === CODE.MODE_MODIFY) {\r\n                    setBoardAttachFiles(resp.result.resultFiles);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    const updateBoard = () => {\r\n        const formData = new FormData();\r\n        for (let key in boardDetail) {\r\n            formData.append(key, boardDetail[key]);\r\n            //console.log(\"boardDetail [%s] \", key, boardDetail[key]);\r\n        }\r\n        \r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n\r\n            },\r\n            body: formData\r\n        }\r\n\r\n        EgovNet.requestFetch(modeInfo.editURL,\r\n            requestOptions,\r\n            (resp) => {\r\n                if (Number(resp.resultCode) === Number(CODE.RCV_SUCCESS)) {\r\n                    history.push({ pathname: URL.INFORM_NOTICE });\r\n                } else {\r\n                    alert(\"ERR : \" + resp.resultMessage);\r\n                }\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    useEffect(function () {\r\n        initMode();\r\n        return function () {\r\n        }\r\n    }, []);\r\n\r\n    useEffect(function () {\r\n        console.log(\"boardDetail, boardAttachFiles: useEffect\");\r\n        return function () {\r\n        }\r\n    }, [boardDetail,boardAttachFiles]);\r\n\r\n    console.groupEnd(\"EgovNoticeEdit\");\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                        <li><Link to={URL.MAIN} className=\"home\">Home</Link></li>\r\n                        <li><Link to={URL.INFORM}>알림마당</Link></li>\r\n                        <li>{masterBoard && masterBoard.bbsNm}</li>\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav></EgovLeftNav>\r\n                    {/* <!--// Navigation --> */}\r\n\r\n                    <div className=\"contents NOTICE_LIST\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <div className=\"top_tit\">\r\n                            <h1 className=\"tit_1\">알림마당</h1>\r\n                        </div>\r\n\r\n                        <h2 className=\"tit_2\">{masterBoard && masterBoard.bbsNm} {modeInfo.modeTitle}</h2>\r\n\r\n                        <div className=\"board_view2\">\r\n                            <dl>\r\n                                <dt>\r\n                                    <label htmlFor=\"nttSj\">제목<span className=\"req\">필수</span></label>\r\n                                </dt>\r\n                                <dd>\r\n                                    <input className=\"f_input2 w_full\" id=\"nttSj\" name=\"nttSj\" type=\"text\"\r\n                                        defaultValue={boardDetail.nttSj}\r\n                                        onChange={e => setBoardDetail({ ...boardDetail, nttSj: e.target.value })}\r\n                                        maxLength=\"60\" />\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt><label htmlFor=\"nttCn\">내용<span className=\"req\">필수</span></label></dt>\r\n                                <dd>\r\n                                    <textarea className=\"f_txtar w_full h_200\" id=\"nttCn\" name=\"nttCn\" cols=\"30\" rows=\"10\" placeholder=\"\"\r\n                                        defaultValue={boardDetail.nttCn}\r\n                                        onChange={e => setBoardDetail({ ...boardDetail, nttCn: e.target.value })}></textarea>\r\n                                </dd>\r\n                            </dl>\r\n                            <EgovAttachFile\r\n                                fnChangeFile={(attachfile) => {\r\n                                    console.log(\"====>>> Changed attachfile file = \", attachfile);\r\n                                    setBoardDetail({ ...boardDetail, file_1: attachfile });\r\n                                }}\r\n                                fnDeleteFile={(deletedFile) => {\r\n                                    console.log(\"====>>> Delete deletedFile = \", deletedFile);\r\n                                    setBoardAttachFiles(deletedFile);\r\n                                }}\r\n                                boardFiles={boardAttachFiles}\r\n                                mode={props.mode} />\r\n\r\n                            {/* <!-- 버튼영역 --> */}\r\n                            <div className=\"board_btn_area\">\r\n                                <div className=\"left_col btn1\">\r\n                                    <button className=\"btn btn_skyblue_h46 w_100\"\r\n                                        onClick={() => updateBoard()}>저장</button>\r\n                                </div>\r\n\r\n                                <div className=\"right_col btn1\">\r\n                                    <Link to={URL.INFORM_NOTICE} className=\"btn btn_blue_h46 w_100\">목록</Link>\r\n                                </div>\r\n                            </div>\r\n                            {/* <!--// 버튼영역 --> */}\r\n                        </div>\r\n\r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EgovNoticeEdit;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\inform\\notice\\EgovNoticeDetail.jsx",["312"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport * as EgovNet from 'context/egovFetch';\r\nimport URL from 'context/url';\r\nimport CODE from 'context/code';\r\nimport { NOTICE_BBS_ID } from 'context/config';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavInform';\r\nimport EgovAttachFile from 'egov/common/EgovAttachFile';\r\n\r\nfunction EgovNoticeDetail(props) {\r\n    console.group(\"EgovNoticeDetail\");\r\n    console.log(\"------------------------------\");\r\n    console.log(\"EgovNoticeDetail [props] : \", props);\r\n\r\n    const history = useHistory();\r\n    console.log(\"EgovNoticeDetail [history] : \", history);\r\n\r\n    const bbsId = history.location.state.bbsId || NOTICE_BBS_ID;\r\n    const nttId = history.location.state.nttId;\r\n    const searchCondition = history.location.state.searchCondition;\r\n\r\n    const [masterBoard, setMasterBoard] = useState({});\r\n    const [user, setUser] = useState({});\r\n    const [boardDetail, setBoardDetail] = useState({});\r\n    const [boardAttachFiles, setBoardAttachFiles] = useState();\r\n\r\n    const retrieveDetail = () => {\r\n        const retrieveDetailURL = '/cop/bbs/selectBoardArticleAPI.do';\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                bbsId: bbsId,\r\n                nttId: nttId\r\n            })\r\n        }\r\n        EgovNet.requestFetch(retrieveDetailURL,\r\n            requestOptions,\r\n            function (resp) {\r\n                setMasterBoard(resp.result.brdMstrVO);\r\n                setBoardDetail(resp.result.boardVO);\r\n                setUser(resp.result.user);\r\n                setBoardAttachFiles(resp.result.resultFiles);\r\n            }\r\n        );\r\n    }\r\n\r\n    const onClickDeleteBoardArticle = (bbsId, nttId) => {\r\n        const deleteBoardURL = \"/cop/bbs/deleteBoardArticleAPI.do\";\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                bbsId: bbsId,\r\n                nttId: nttId\r\n            })\r\n        }\r\n\r\n        EgovNet.requestFetch(deleteBoardURL,\r\n            requestOptions,\r\n            (resp) => {\r\n                console.log(\"====>>> board delete= \", resp);\r\n                if (Number(resp.resultCode) === Number(CODE.RCV_SUCCESS)) {\r\n                    //window.location.href = URL.INFORM_NOTICE + qs.stringify(query, { addQueryPrefix: true });\r\n                    alert(\"게시글이 삭제되었습니다.\")\r\n                    history.push(URL.INFORM_NOTICE);\r\n                } else {\r\n                    alert(\"ERR : \" + resp.resultMessage);\r\n                }\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    useEffect(function () {\r\n        retrieveDetail();\r\n        return function () {\r\n        }\r\n    }, []);\r\n    \r\n    console.groupEnd(\"EgovNoticeDetail\");\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                        <li><Link to={URL.MAIN} className=\"home\">Home</Link></li>\r\n                        <li><Link to={URL.INFORM}>알림마당</Link></li>\r\n                        <li>{masterBoard && masterBoard.bbsNm}</li>\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav></EgovLeftNav>\r\n                    {/* <!--// Navigation --> */}\r\n\r\n                    <div className=\"contents NOTICE_VIEW\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <div className=\"top_tit\">\r\n                            <h1 className=\"tit_1\">알림마당</h1>\r\n                        </div>\r\n\r\n                        <h2 className=\"tit_2\">{masterBoard && masterBoard.bbsNm}</h2>\r\n\r\n                        {/* <!-- 게시판 상세보기 --> */}\r\n                        <div className=\"board_view\">\r\n                            <div className=\"board_view_top\">\r\n                                <div className=\"tit\">{boardDetail && boardDetail.nttSj}</div>\r\n                                <div className=\"info\">\r\n                                    <dl>\r\n                                        <dt>작성자</dt>\r\n                                        <dd>{boardDetail && boardDetail.frstRegisterNm}</dd>\r\n                                    </dl>\r\n                                    <dl>\r\n                                        <dt>작성일</dt>\r\n                                        <dd>{boardDetail && boardDetail.frstRegisterPnttm}</dd>\r\n                                    </dl>\r\n                                    <dl>\r\n                                        <dt>조회수</dt>\r\n                                        <dd>{boardDetail && boardDetail.inqireCo}</dd>\r\n                                    </dl>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"board_article\">\r\n                                <textarea name=\"\" cols=\"30\" rows=\"10\" readOnly=\"readonly\" defaultValue={boardDetail && boardDetail.nttCn}></textarea>\r\n                            </div>\r\n                            <div className=\"board_attach\">\r\n                                <EgovAttachFile boardFiles={boardAttachFiles} />\r\n                            </div>\r\n\r\n\r\n                            <div className=\"board_btn_area\">\r\n                                {user.id &&\r\n                                    <div className=\"left_col btn3\">\r\n                                        <Link to={{\r\n                                            pathname: URL.INFORM_NOTICE_MODIFY,\r\n                                            state: {\r\n                                                nttId: nttId,\r\n                                                bbsId: bbsId\r\n                                            }\r\n                                        }} className=\"btn btn_skyblue_h46 w_100\">수정</Link>\r\n                                        <button className=\"btn btn_skyblue_h46 w_100\" onClick={(e) => {\r\n                                            // e.preventDefault();\r\n                                            onClickDeleteBoardArticle(boardDetail.bbsId, boardDetail.nttId);\r\n                                        }}>삭제</button>\r\n                                        <Link to={{\r\n                                            pathname: URL.INFORM_NOTICE_REPLY,\r\n                                            state: {\r\n                                                nttId: nttId,\r\n                                                bbsId: bbsId\r\n                                            }\r\n                                        }} className=\"btn btn_skyblue_h46 w_100\">답글작성</Link>\r\n                                    </div>\r\n                                }\r\n\r\n                                <div className=\"right_col btn1\">\r\n                                    <Link to={{\r\n                                        pathname: URL.INFORM_NOTICE,\r\n                                        state: {\r\n                                            nttId: nttId,\r\n                                            bbsId: bbsId,\r\n                                            searchCondition: searchCondition\r\n                                        }\r\n                                    }} className=\"btn btn_blue_h46 w_100\">목록</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* <!-- 게시판 상세보기 --> */}\r\n\r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default EgovNoticeDetail;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\inform\\daily\\EgovDailyList.jsx",["313","314"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport * as EgovNet from 'context/egovFetch';\r\nimport URL from 'context/url';\r\nimport CODE from 'context/code';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavInform';\r\n\r\nfunction EgovDailyList(props) {\r\n    console.group(\"EgovDailyDetail\");\r\n    console.log(\"[Start] EgovDailyDetail ------------------------------\");\r\n    console.log(\"EgovDailyDetail [props] : \", props);\r\n\r\n    const history = useHistory();\r\n    console.log(\"EgovDailyDetail [history] : \", history);\r\n\r\n    const DATE = new Date();\r\n    const TODAY = new Date(DATE.getFullYear(), DATE.getMonth(), DATE.getDate());\r\n\r\n    const [searchCondition, setSearchCondition] = useState(history.location.state?.searchCondition || { schdulSe: '', year: TODAY.getFullYear(), month: TODAY.getMonth(), date: TODAY.getDate() });\r\n\r\n    const [scheduleList, setScheduleList] = useState([]);\r\n    const [listTag, setListTag] = useState([]);\r\n\r\n    const changeDate = (target, amount) => {\r\n        let changedDate;\r\n\r\n        if (target === CODE.DATE_YEAR) {\r\n            changedDate = new Date(searchCondition.year + amount, searchCondition.month, searchCondition.date);\r\n        }\r\n\r\n        if (target === CODE.DATE_MONTH) {\r\n            changedDate = new Date(searchCondition.year, searchCondition.month + amount, searchCondition.date);\r\n        }\r\n\r\n        if (target === CODE.DATE_DATE) {\r\n            changedDate = new Date(searchCondition.year, searchCondition.month, searchCondition.date + amount);\r\n        }\r\n\r\n        setSearchCondition({ ...searchCondition, year: changedDate.getFullYear(), month: changedDate.getMonth(), date: changedDate.getDate() });\r\n    }\r\n\r\n    const retrieveList = (srchcnd) => {\r\n        console.groupCollapsed(\"EgovDailyDetail.retrieveList()\");\r\n\r\n        const retrieveListURL = '/cop/smt/sim/egovIndvdlSchdulManageDailyListAPI.do';\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(srchcnd)\r\n        }\r\n\r\n        EgovNet.requestFetch(retrieveListURL,\r\n            requestOptions,\r\n            (resp) => {\r\n\r\n                setScheduleList(resp.result.resultList);\r\n                drawList();\r\n            },\r\n            function (resp) {\r\n                console.log(\"err response : \", resp);\r\n            }\r\n        );\r\n\r\n        console.groupEnd(\"EgovDailyDetail.retrieveList()\");\r\n    }\r\n\r\n    const drawList = () => {\r\n        let mutListTag = [];\r\n        mutListTag.push(<p className=\"no_data\">검색된 결과가 없습니다.</p>); // 게시판 목록 초기값\r\n\r\n        let listCnt = 0;\r\n        // 리스트 항목 구성\r\n        scheduleList.forEach(function (item, index) {\r\n            if (index === 0) mutListTag = []; // 목록 초기화\r\n            listCnt++;\r\n            mutListTag.push(\r\n                <Link\r\n                    to={{\r\n                        pathname: URL.INFORM_DAILY_DETAIL,\r\n                        state: {\r\n                            schdulId : item.schdulId,\r\n                            prevPath: URL.INFORM_DAILY\r\n                        }\r\n                    }}\r\n                    key={listCnt}\r\n                    className=\"list_item\" >\r\n                    <div>{getTimeForm(item.schdulBgnde)} ~ {getTimeForm(item.schdulEndde)}</div>\r\n                    <div className=\"al\">{item.schdulNm}</div>\r\n                    <div>{item.userNm}</div>\r\n                </Link>\r\n            );\r\n        });\r\n        setListTag(mutListTag);\r\n    }\r\n    const getTimeForm = (str) => {\r\n        let hour = str.substring(8, 10);\r\n        let starminute = str.substring(10, 12);\r\n        return hour + \":\" + starminute;\r\n    }\r\n\r\n    useEffect(() => {\r\n        retrieveList(searchCondition);\r\n        return () => {\r\n        }\r\n    }, [searchCondition.schdulSe, searchCondition.year, searchCondition.month, searchCondition.date]);\r\n\r\n    useEffect(() => {\r\n        drawList();\r\n        return () => {\r\n        }\r\n    }, [scheduleList]);\r\n\r\n\r\n    console.log(\"------------------------------EgovDailyDetail [End]\");\r\n    console.groupEnd(\"EgovDailyDetail\");\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                        <li><Link to={URL.MAIN} className=\"home\">Home</Link></li>\r\n                        <li><Link to={URL.INFORM}>알림마당</Link></li>\r\n                        <li>오늘의 행사</li>\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav></EgovLeftNav>\r\n                    {/* <!--// Navigation --> */}\r\n\r\n                    <div className=\"contents TODAY_SCHEDULE\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <div className=\"top_tit\">\r\n                            <h1 className=\"tit_1\">알림마당</h1>\r\n                        </div>\r\n\r\n                        <h2 className=\"tit_2\">오늘의 행사</h2>\r\n\r\n                        {/* <!-- 검색조건 --> */}\r\n                        <div className=\"condition\">\r\n                            <ul>\r\n                                <li>\r\n                                    <label className=\"f_select\" htmlFor=\"sel1\">\r\n                                        <select name=\"schdulSe\" id=\"sel1\" title=\"조건\"\r\n                                            onChange={e => {\r\n                                                setSearchCondition({ ...searchCondition, schdulSe: e.target.value });\r\n                                            }}\r\n                                        >\r\n                                            <option value=\"\">전체</option>\r\n                                            <option value=\"1\">회의</option>\r\n                                            <option value=\"2\">세미나</option>\r\n                                            <option value=\"3\">강의</option>\r\n                                            <option value=\"4\">교육</option>\r\n                                            <option value=\"5\">기타</option>\r\n                                        </select>\r\n                                    </label>\r\n                                </li>\r\n                                <li>\r\n                                    {/* <a href=\"\" className=\"prev\">이전연도로이동</a> */}\r\n                                    <button className=\"prev\"\r\n                                        onClick={() => {\r\n                                            changeDate(CODE.DATE_YEAR, -1);\r\n                                        }}\r\n                                    ></button>\r\n                                    <span>{searchCondition.year}년</span>\r\n                                    {/* <a href=\"\" className=\"next\">다음연도로이동</a> */}\r\n                                    <button className=\"next\"\r\n                                        onClick={() => {\r\n                                            changeDate(CODE.DATE_YEAR, 1);\r\n                                        }}\r\n                                    ></button>\r\n                                </li>\r\n                                <li className=\"half L\">\r\n                                    <button className=\"prev\"\r\n                                        onClick={() => {\r\n                                            changeDate(CODE.DATE_MONTH, -1);\r\n                                        }}\r\n                                    ></button>\r\n                                    <span>{(searchCondition.month + 1)}월</span>\r\n                                    <button className=\"next\"\r\n                                        onClick={() => {\r\n                                            changeDate(CODE.DATE_MONTH, 1);\r\n                                        }}\r\n                                    ></button>\r\n                                </li>\r\n                                <li className=\"half R\">\r\n                                    <button className=\"prev\"\r\n                                        onClick={() => {\r\n                                            changeDate(CODE.DATE_DATE, -1);\r\n                                        }}\r\n                                    ></button>\r\n                                    <span>{searchCondition.date}일</span>\r\n                                    <button className=\"next\"\r\n                                        onClick={() => {\r\n                                            changeDate(CODE.DATE_DATE, 1);\r\n                                        }}\r\n                                    ></button>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        {/* <!--// 검색조건 --> */}\r\n\r\n                        {/* <!-- 게시판목록 --> */}\r\n                        <div className=\"board_list BRD001\">\r\n                            <div className=\"head\">\r\n                                <span>시간</span>\r\n                                <span>제목</span>\r\n                                <span>담당자</span>\r\n                            </div>\r\n                            <div className=\"result\">\r\n                                {listTag}\r\n                            </div>\r\n                        </div>\r\n                        {/* <!--// 게시판목록 --> */}\r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default EgovDailyList;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\inform\\daily\\EgovDailyDetail.jsx",["315","316","317","318","319","320"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport * as EgovNet from 'context/egovFetch';\r\nimport URL from 'context/url';\r\nimport CODE from 'context/code';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavInform';\r\nimport EgovPaging from 'egov/common/EgovPaging';\r\nimport EgovAttachFile from 'egov/common/EgovAttachFile';\r\n\r\nfunction EgovDailyDetail(props) {\r\n    console.group(\"EgovDailyDetail\");\r\n    console.log(\"[Start] EgovDailyDetail ------------------------------\");\r\n    console.log(\"EgovDailyDetail [props] : \", props);\r\n\r\n    const history = useHistory();\r\n    console.log(\"EgovDailyDetail [history] : \", history);\r\n\r\n    const [scheduleDetail, setScheduleDetail] = useState({});\r\n    const [boardAttachFiles, setBoardAttachFiles] = useState();\r\n    const [user, setUser] = useState({});\r\n\r\n    const retrieveDetail = () => {\r\n\r\n        const retrieveDetailURL = '/cop/smt/sim/egovIndvdlSchdulManageDetailAPI.do';\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                schdulId: history.location.state?.schdulId\r\n            })\r\n        }\r\n        EgovNet.requestFetch(retrieveDetailURL,\r\n            requestOptions,\r\n            function (resp) {\r\n                let rawScheduleDetail = resp.result.scheduleDetail;\r\n                rawScheduleDetail.startDateTime = convertDate(rawScheduleDetail.schdulBgnde);\r\n                rawScheduleDetail.endDateTime = convertDate(rawScheduleDetail.schdulEndde);\r\n                rawScheduleDetail.reptitSeCodeNm = getCodeName(resp.result.reptitSeCode, resp.result.scheduleDetail.reptitSeCode);\r\n                rawScheduleDetail.schdulIpcrCodeNm = getCodeName(resp.result.schdulIpcrCode, resp.result.scheduleDetail.schdulIpcrCode);\r\n                rawScheduleDetail.schdulSeNm = getCodeName(resp.result.schdulSe, resp.result.scheduleDetail.schdulSe);\r\n                setScheduleDetail(rawScheduleDetail);\r\n                setUser(resp.result.user);\r\n                setBoardAttachFiles(resp.result.resultFiles);\r\n            }\r\n        );\r\n    }\r\n    const convertDate = (str) => {\r\n        let year = str.substring(0, 4);\r\n        let month = str.substring(4, 6);\r\n        let date = str.substring(6, 8);\r\n        let hour = str.substring(8, 10);\r\n        let minute = str.substring(10, 12);\r\n        return {\r\n            year: year,\r\n            month: month,\r\n            date: date,\r\n            hour: hour,\r\n            minute: minute,\r\n            dateForm: year + \"년 \" + month + \"월 \" + date + \"일 \" + hour + \"시 \" + minute + \"분 \"\r\n        }\r\n    }\r\n\r\n    const getCodeName = (codeArr, code) => {\r\n        return (\r\n            codeArr.map((codeObj) => {\r\n                if (codeObj.code == code) return codeObj.codeNm;\r\n            })\r\n        );\r\n    }\r\n\r\n    const onClickDeleteSchedule = (schdulId) => {\r\n        const deleteBoardURL = \"/cop/smt/sim/egovIndvdlSchdulManageDeleteAPI.do\";\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                schdulId: schdulId\r\n            })\r\n        }\r\n\r\n        EgovNet.requestFetch(deleteBoardURL,\r\n            requestOptions,\r\n            (resp) => {\r\n                console.log(\"====>>> Schdule delete= \", resp);\r\n                if (Number(resp.resultCode) === Number(CODE.RCV_SUCCESS)) {\r\n                    alert(\"게시글이 삭제되었습니다.\")\r\n                    // history.go(1);\r\n                    history.goBack();\r\n                } else {\r\n                    alert(\"ERR : \" + resp.resultMessage);\r\n                }\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    useEffect(function () {\r\n        retrieveDetail();\r\n        return function () {\r\n        }\r\n    }, []);\r\n\r\n    console.log(\"------------------------------EgovDailyDetail [End]\");\r\n    console.groupEnd(\"EgovDailyDetail\");\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                        <li><Link to={URL.MAIN} className=\"home\">Home</Link></li>\r\n                        <li><Link to={URL.INFORM}>알림마당</Link></li>\r\n                        <li>일정관리</li>\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav></EgovLeftNav>\r\n                    {/* <!--// Navigation --> */}\r\n\r\n                    <div className=\"contents SITE_GALLARY_VIEW\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <div className=\"top_tit\">\r\n                            <h1 className=\"tit_1\">알림마당</h1>\r\n                        </div>\r\n\r\n                        <h2 className=\"tit_2\">일정관리 상세보기</h2>\r\n\r\n                        {/* <!-- 게시판 상세보기 --> */}\r\n                        <div className=\"board_view2\">\r\n                            <dl>\r\n                                <dt>일정구분</dt>\r\n                                <dd>{scheduleDetail.schdulSeNm}</dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>중요도</dt>\r\n                                <dd>{scheduleDetail.schdulIpcrCodeNm}</dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>부서</dt>\r\n                                <dd>{scheduleDetail.schdulDeptName}</dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>일정명</dt>\r\n                                <dd>{scheduleDetail.schdulNm}</dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>일정내용</dt>\r\n                                <dd>{scheduleDetail.schdulCn}</dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>반복구분</dt>\r\n                                <dd>{scheduleDetail.reptitSeCodeNm}</dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>날짜/시간</dt>\r\n                                <dd> {scheduleDetail.startDateTime?.dateForm} ~ {scheduleDetail.endDateTime?.dateForm}</dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>담당자</dt>\r\n                                <dd>{scheduleDetail.schdulChargerName}</dd>\r\n                            </dl>\r\n                            {/* <dl>\r\n                                <dt>파일첨부</dt>\r\n                                <dd>\r\n                                    <span className=\"file_attach\">\r\n                                        <a href=\"\">file_name.hwp</a> <span>[3626] byte</span>\r\n                                    </span>\r\n                                </dd>\r\n                            </dl> */}\r\n\r\n                            <EgovAttachFile boardFiles={boardAttachFiles} />\r\n\r\n                            {/* <!-- 버튼영역 --> */}\r\n                            <div className=\"board_btn_area\">\r\n                                <div className=\"right_col btn1\">\r\n                                    <Link to={history.location.state?.prevPath} className=\"btn btn_blue_h46 w_100\">목록</Link>\r\n                                </div>\r\n                            </div>\r\n                            {/* <!--// 버튼영역 --> */}\r\n                        </div>\r\n                        {/* <!-- 게시판 상세보기 --> */}\r\n\r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EgovDailyDetail;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\inform\\gallery\\EgovGalleryEdit.jsx",["321","322","323"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport * as EgovNet from 'context/egovFetch';\r\nimport URL from 'context/url';\r\nimport CODE from 'context/code';\r\nimport { GALLERY_BBS_ID } from 'context/config';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavInform';\r\nimport EgovAttachFile from 'egov/common/EgovAttachFile';\r\n\r\nfunction EgovGalleryEdit(props) {\r\n    console.group(\"EgovGalleryEdit\");\r\n    console.log(\"------------------------------\");\r\n    console.log(\"EgovGalleryEdit [props] : \", props);\r\n\r\n    const history = useHistory();\r\n    console.log(\"EgovGalleryEdit [history] : \", history);\r\n\r\n    const bbsId = history.location.state?.bbsId || GALLERY_BBS_ID;\r\n    const nttId = history.location.state?.nttId || \"\";\r\n\r\n    const [modeInfo, setModeInfo] = useState({ mode: props.mode });\r\n    const [masterBoard, setMasterBoard] = useState({});\r\n    const [boardDetail, setBoardDetail] = useState({ nttSj: '', nttCn: '' });\r\n    const [boardAttachFiles, setBoardAttachFiles] = useState();\r\n\r\n    const intMode = () => {\r\n        switch (props.mode) {\r\n            case CODE.MODE_CREATE:\r\n                setModeInfo({\r\n                    ...modeInfo,\r\n                    modeTitle: \"등록\",\r\n                    editURL: '/cop/bbs/insertBoardArticleAPI.do'\r\n                });\r\n                break;\r\n            case CODE.MODE_MODIFY:\r\n                setModeInfo({\r\n                    ...modeInfo,\r\n                    modeTitle: \"수정\",\r\n                    editURL: '/cop/bbs/updateBoardArticleAPI.do'\r\n                });\r\n                break;\r\n            case CODE.MODE_REPLY:\r\n                setModeInfo({\r\n                    ...modeInfo,\r\n                    modeTitle: \"답글쓰기\",\r\n                    editURL: '/cop/bbs/replyBoardArticleAPI.do'\r\n                });\r\n                break;\r\n        }\r\n        retrieveDetail();\r\n    }\r\n\r\n    const retrieveDetail = () => {\r\n\r\n        if (modeInfo.mode === CODE.MODE_CREATE) {// 등록이면 조회 안함\r\n            setBoardDetail({ bbsId: bbsId, nttSj: \"\", nttCn: \"\" });\r\n            return;\r\n        }\r\n\r\n        const retrieveDetailURL = '/cop/bbs/selectBoardArticleAPI.do';\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                bbsId: bbsId,\r\n                nttId: nttId\r\n            })\r\n        }\r\n        EgovNet.requestFetch(retrieveDetailURL,\r\n            requestOptions,\r\n            function (resp) {\r\n                setMasterBoard(resp.result.brdMstrVO);\r\n                \r\n                // 초기 boardDetail 설정 => ( 답글 / 수정 ) 모드일때...\r\n                if (modeInfo.mode === CODE.MODE_REPLY) {// 답글모드이면 RE: 붙여줌 \r\n                    setBoardDetail({ ...resp.result.boardVO, nttSj: \"RE: \" + resp.result.boardVO.nttSj, nttCn: \"\" , inqireCo: 0, atchFileId: \"\"});\r\n                }\r\n                if (modeInfo.mode === CODE.MODE_MODIFY) {\r\n                    setBoardDetail(resp.result.boardVO);\r\n                }\r\n                \r\n                // 초기 setBoardAttachFiles 설정 => (수정) 모드 일때...\r\n                if (modeInfo.mode === CODE.MODE_MODIFY) {\r\n                    setBoardAttachFiles(resp.result.resultFiles);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    const updateBoard = () => {\r\n        const formData = new FormData();\r\n        for (let key in boardDetail) {\r\n            formData.append(key, boardDetail[key]);\r\n            //console.log(\"boardDetail [%s] \", key, boardDetail[key]);\r\n        }\r\n        \r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n\r\n            },\r\n            body: formData\r\n        }\r\n\r\n        EgovNet.requestFetch(modeInfo.editURL,\r\n            requestOptions,\r\n            (resp) => {\r\n                if (Number(resp.resultCode) === Number(CODE.RCV_SUCCESS)) {\r\n                    history.push({ pathname: URL.INFORM_GALLERY });\r\n                } else {\r\n                    alert(\"ERR : \" + resp.resultMessage);\r\n                }\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    useEffect(function () {\r\n        intMode();\r\n        return function () {\r\n        }\r\n    }, []);\r\n\r\n    useEffect(function () {\r\n        console.log(\"boardDetail, boardAttachFiles: useEffect\");\r\n        return function () {\r\n        }\r\n    }, [boardDetail,boardAttachFiles]);\r\n\r\n    console.groupEnd(\"EgovGalleryEdit\");\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                    <li><Link to={URL.MAIN} className=\"home\">Home</Link></li>\r\n                        <li><Link to={URL.INFORM}>알림마당</Link></li>\r\n                        <li>{masterBoard && masterBoard.bbsNm}</li>\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav></EgovLeftNav>\r\n                    {/* <!--// Navigation --> */}\r\n\r\n                    <div className=\"contents SITE_GALLARY_VIEW\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <div className=\"top_tit\">\r\n                            <h1 className=\"tit_1\">알림마당</h1>\r\n                        </div>\r\n\r\n                        <h2 className=\"tit_2\">{masterBoard && masterBoard.bbsNm} {modeInfo.modeTitle}</h2>\r\n\r\n                        <div className=\"board_view2\">\r\n                            <dl>\r\n                                <dt>\r\n                                    <label htmlFor=\"nttSj\">제목<span className=\"req\">필수</span></label>\r\n                                </dt>\r\n                                <dd>\r\n                                    <input className=\"f_input2 w_full\" id=\"nttSj\" name=\"nttSj\" type=\"text\"\r\n                                        defaultValue={boardDetail.nttSj}\r\n                                        onChange={e => setBoardDetail({ ...boardDetail, nttSj: e.target.value })}\r\n                                        maxLength=\"60\" />\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt><label htmlFor=\"nttCn\">내용<span className=\"req\">필수</span></label></dt>\r\n                                <dd>\r\n                                    <textarea className=\"f_txtar w_full h_200\" id=\"nttCn\" name=\"nttCn\" cols=\"30\" rows=\"10\" placeholder=\"\"\r\n                                        defaultValue={boardDetail.nttCn}\r\n                                        onChange={e => setBoardDetail({ ...boardDetail, nttCn: e.target.value })}></textarea>\r\n                                </dd>\r\n                            </dl>\r\n                            <EgovAttachFile\r\n                                fnChangeFile={(attachfile) => {\r\n                                    console.log(\"====>>> Changed attachfile file = \", attachfile);\r\n                                    setBoardDetail({ ...boardDetail, file_1: attachfile });\r\n                                }}\r\n                                fnDeleteFile={(deletedFile) => {\r\n                                    console.log(\"====>>> Delete deletedFile = \", deletedFile);\r\n                                    setBoardAttachFiles(deletedFile);\r\n                                }}\r\n                                boardFiles={boardAttachFiles}\r\n                                mode={props.mode} />\r\n\r\n\r\n                            {/* <!-- 버튼영역 --> */}\r\n                            <div className=\"board_btn_area\">\r\n                                <div className=\"left_col btn1\">\r\n                                    <a href=\"\" className=\"btn btn_skyblue_h46 w_100\"\r\n                                        onClick={(e) => {\r\n                                            e.preventDefault();\r\n                                            updateBoard();\r\n                                        }}>저장</a>\r\n                                </div>\r\n\r\n                                <div className=\"right_col btn1\">\r\n                                    <a href={URL.INFORM_GALLERY} className=\"btn btn_blue_h46 w_100\">목록</a>\r\n                                </div>\r\n                            </div>\r\n                            {/* <!--// 버튼영역 --> */}\r\n                        </div>\r\n\r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EgovGalleryEdit;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\inform\\gallery\\EgovGalleryList.jsx",[],"C:\\prj\\cnbcs_web_frontend\\src\\egov\\inform\\weekly\\EgovWeeklyList.jsx",["324","325","326","327","328"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport * as EgovNet from 'context/egovFetch';\r\nimport URL from 'context/url';\r\nimport CODE from 'context/code';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavInform';\r\nimport EgovPaging from 'egov/common/EgovPaging';\r\nimport EgovAttachFile from 'egov/common/EgovAttachFile';\r\n\r\nfunction EgovWeeklyList(props) {\r\n    console.group(\"EgovWeeklyList\");\r\n    console.log(\"[Start] EgovWeeklyList ------------------------------\");\r\n    console.log(\"EgovWeeklyList [props] : \", props);\r\n\r\n    const history = useHistory();\r\n    console.log(\"EgovWeeklyList [history] : \", history);\r\n\r\n    const DATE = new Date();\r\n    const FIRST_DAY_OF_THIS_WEEK = new Date(DATE.getFullYear(), DATE.getMonth(), DATE.getDate() - DATE.getDay());\r\n\r\n    const getWeekOfMonth = (date) => {\r\n        let adjustedDate = date.getDate() + date.getDay();\r\n        console.log(\"getWeekOfMonth : \", date, date.getDate(), date.getDay(), adjustedDate, adjustedDate / 7, 0 | adjustedDate / 7);\r\n        let weeksOrder = [0, 1, 2, 3, 4, 5];\r\n        let returnVal = parseInt(weeksOrder[0 | adjustedDate / 7]);\r\n        console.log(\"returnVal:\", returnVal);\r\n        return (returnVal);\r\n    }\r\n\r\n    const [searchCondition, setSearchCondition] = useState(history.location.state?.searchCondition || { schdulSe: '', year: FIRST_DAY_OF_THIS_WEEK.getFullYear(), month: FIRST_DAY_OF_THIS_WEEK.getMonth(), date: FIRST_DAY_OF_THIS_WEEK.getDate(), weekDay: FIRST_DAY_OF_THIS_WEEK.getDay(), weekOfMonth: getWeekOfMonth(FIRST_DAY_OF_THIS_WEEK) });\r\n\r\n    const [scheduleList, setScheduleList] = useState([]);\r\n    const [listTag, setListTag] = useState([]);\r\n\r\n    const changeDate = (target, amount) => {\r\n        let changedDate;\r\n\r\n        if (target === CODE.DATE_YEAR) {\r\n            changedDate = new Date(searchCondition.year + amount, searchCondition.month, searchCondition.date);\r\n        }\r\n\r\n        if (target === CODE.DATE_MONTH) {\r\n            changedDate = new Date(searchCondition.year, searchCondition.month + amount, searchCondition.date);\r\n        }\r\n\r\n        if (target === CODE.DATE_WEEK) {\r\n            // let addtionOfDays = 7 * amount - searchCondition.weekDay;\r\n            let addtionOfDays = 7 * amount;\r\n            changedDate = new Date(searchCondition.year, searchCondition.month, searchCondition.date + addtionOfDays);//다음주의 첫날\r\n        }\r\n        console.log(\"changedDate : \", changedDate);\r\n        setSearchCondition({ ...searchCondition, year: changedDate.getFullYear(), month: changedDate.getMonth(), date: changedDate.getDate(), weekDay: changedDate.getDay(), weekOfMonth: getWeekOfMonth(changedDate) });\r\n    }\r\n\r\n\r\n    const retrieveList = (srchcnd) => {\r\n        console.groupCollapsed(\"EgovWeeklyList.retrieveList()\");\r\n\r\n        const retrieveListURL = '/cop/smt/sim/egovIndvdlSchdulManageWeekListAPI.do';\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(srchcnd)\r\n        }\r\n\r\n        EgovNet.requestFetch(retrieveListURL,\r\n            requestOptions,\r\n            (resp) => {\r\n\r\n                setScheduleList(resp.result.resultList);\r\n                drawList();\r\n            },\r\n            function (resp) {\r\n                console.log(\"err response : \", resp);\r\n            }\r\n        );\r\n\r\n        console.groupEnd(\"EgovWeeklyList.retrieveList()\");\r\n    }\r\n\r\n    const drawList = () => {\r\n        const dayNames = [\"일요일\", \"월요일\", \"화요일\", \"수요일\", \"목요일\", \"금요일\", \"토요일\"];\r\n        let mutListTag = [];\r\n\r\n        let keyPropertyCnt = 0;\r\n        // 리스트 항목 구성\r\n        for (let dayIdx = 0; dayIdx < 7; dayIdx++) {\r\n            let scheduleDate = new Date(searchCondition.year, searchCondition.month, searchCondition.date + dayIdx);\r\n            let scheduleDateStr = scheduleDate.getFullYear() + \"년 \" + (scheduleDate.getMonth() + 1) + \"월 \" + scheduleDate.getDate() + \"일 \" + dayNames[scheduleDate.getDay()];\r\n            keyPropertyCnt++;\r\n            mutListTag.push(\r\n                <div class=\"list_item\" key={keyPropertyCnt}>\r\n                    <div>{scheduleDateStr}</div>\r\n                    <div>\r\n                        {scheduleList.length === 0 && <span>일정이 존재하지 않습니다.</span>}\r\n                        {scheduleList.length !== 0 && scheduleList.map((item) => {\r\n                            keyPropertyCnt++;\r\n                            return (\r\n                                <Link\r\n                                    key={keyPropertyCnt}\r\n                                    to={{\r\n                                        pathname: URL.INFORM_WEEKLY_DETAIL,\r\n                                        state: {\r\n                                            schdulId: item.schdulId,\r\n                                            prevPath: URL.INFORM_WEEKLY\r\n                                        }\r\n                                    }} >\r\n                                    <span>{getTimeForm(item.schdulBgnde)} ~ {getTimeForm(item.schdulEndde)}</span>\r\n                                    <span>{item.schdulNm}</span>\r\n                                    <span>{item.userNm}</span>\r\n                                </Link>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        setListTag(mutListTag);\r\n\r\n    }\r\n    const getTimeForm = (str) => {\r\n        let hour = str.substring(8, 10);\r\n        let starminute = str.substring(10, 12);\r\n        return hour + \":\" + starminute;\r\n    }\r\n\r\n    useEffect(() => {\r\n        retrieveList(searchCondition);\r\n        return () => {\r\n        }\r\n    }, [searchCondition.schdulSe, searchCondition.year, searchCondition.month, searchCondition.weekOfMonth]);\r\n\r\n    useEffect(() => {\r\n        drawList();\r\n        return () => {\r\n        }\r\n    },[scheduleList]);\r\n\r\n    console.log(\"------------------------------EgovWeeklyList [End]\");\r\n    console.groupEnd(\"EgovWeeklyList\");\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                        <li><Link to={URL.MAIN} className=\"home\">Home</Link></li>\r\n                        <li><Link to={URL.INFORM}>알림마당</Link></li>\r\n                        <li>오늘의 행사</li>\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav></EgovLeftNav>\r\n                    {/* <!--// Navigation --> */}\r\n\r\n                    <div className=\"contents WEEK_SCHEDULE\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <div className=\"top_tit\">\r\n                            <h1 className=\"tit_1\">알림마당</h1>\r\n                        </div>\r\n\r\n                        <h2 className=\"tit_2\">금주의 행사</h2>\r\n\r\n                        {/* <!-- 검색조건 --> */}\r\n                        <div className=\"condition\">\r\n                            <ul>\r\n                                <li>\r\n                                    <label className=\"f_select\" htmlFor=\"sel1\">\r\n                                        <select name=\"\" id=\"sel1\" title=\"조건\">\r\n                                            <option value=\"\">전체</option>\r\n                                            <option value=\"1\">회의</option>\r\n                                            <option value=\"2\">세미나</option>\r\n                                            <option value=\"3\">강의</option>\r\n                                            <option value=\"4\">교육</option>\r\n                                            <option value=\"5\">기타</option>\r\n                                        </select>\r\n                                    </label>\r\n                                </li>\r\n                                <li>\r\n                                    {/* <a href=\"\" className=\"prev\">이전연도로이동</a> */}\r\n                                    <button className=\"prev\"\r\n                                        onClick={() => {\r\n                                            changeDate(CODE.DATE_YEAR, -1);\r\n                                        }}\r\n                                    ></button>\r\n                                    <span>{searchCondition.year}년</span>\r\n                                    {/* <a href=\"\" className=\"next\">다음연도로이동</a> */}\r\n                                    <button className=\"next\"\r\n                                        onClick={() => {\r\n                                            changeDate(CODE.DATE_YEAR, 1);\r\n                                        }}\r\n                                    ></button>\r\n                                </li>\r\n                                <li className=\"half L\">\r\n                                    <button className=\"prev\"\r\n                                        onClick={() => {\r\n                                            changeDate(CODE.DATE_MONTH, -1);\r\n                                        }}\r\n                                    ></button>\r\n                                    <span>{(searchCondition.month + 1)}월</span>\r\n                                    <button className=\"next\"\r\n                                        onClick={() => {\r\n                                            changeDate(CODE.DATE_MONTH, 1);\r\n                                        }}\r\n                                    ></button>\r\n                                </li>\r\n                                <li className=\"half R\">\r\n                                    <button className=\"prev\"\r\n                                        onClick={() => {\r\n                                            changeDate(CODE.DATE_WEEK, -1);\r\n                                        }}\r\n                                    ></button>\r\n                                    <span>{searchCondition.weekOfMonth + 1}주</span>\r\n                                    <button className=\"next\"\r\n                                        onClick={() => {\r\n                                            changeDate(CODE.DATE_WEEK, 1);\r\n                                        }}\r\n                                    ></button>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        {/* <!--// 검색조건 --> */}\r\n\r\n                        {/* <!-- 게시판목록 --> */}\r\n                        <div className=\"board_list BRD003\">\r\n                            <div className=\"head\">\r\n                                <span>날짜</span>\r\n                                <span>시간</span>\r\n                                <span>제목</span>\r\n                                <span>담당자</span>\r\n                            </div>\r\n                            <div className=\"result\">\r\n                                {/* <!-- case : 데이터 있을때 --> */}\r\n                                {/* <a href=\"\" className=\"list_item\">\r\n                                    <div>2021년07월11일 일요일</div>\r\n                                    <div>11:00~12:30</div>\r\n                                    <div className=\"al\">전자정부표준프레임워크 금주의 행사안내입니다.</div>\r\n                                    <div>관리자</div>\r\n                                </a>\r\n                                <a href=\"\" className=\"list_item\">\r\n                                    <div>2021년07월11일 일요일</div>\r\n                                    <div>11:00~12:30</div>\r\n                                    <div className=\"al\">전자정부표준프레임워크 금주의 행사안내입니다.</div>\r\n                                    <div>관리자</div>\r\n                                </a>\r\n                                <a href=\"\" className=\"list_item\">\r\n                                    <div>2021년07월11일 일요일</div>\r\n                                    <div>11:00~12:30</div>\r\n                                    <div className=\"al\">전자정부표준프레임워크 금주의 행사안내입니다.</div>\r\n                                    <div>관리자</div>\r\n                                </a>\r\n                                <a href=\"\" className=\"list_item\">\r\n                                    <div>2021년07월11일 일요일</div>\r\n                                    <div>11:00~12:30</div>\r\n                                    <div className=\"al\">전자정부표준프레임워크 금주의 행사안내입니다.</div>\r\n                                    <div>관리자</div>\r\n                                </a>\r\n                                <a href=\"\" className=\"list_item\">\r\n                                    <div>2021년07월11일 일요일</div>\r\n                                    <div>11:00~12:30</div>\r\n                                    <div className=\"al\">전자정부표준프레임워크 금주의 행사안내입니다.</div>\r\n                                    <div>관리자</div>\r\n                                </a> \r\n                                                                <div class=\"list_item\">\r\n                                    <div>2021년07월11일 일요일</div>\r\n                                    <div>\r\n                                        <a href=\"\">\r\n                                            <span>11:00~12:30</span>\r\n                                            <span>전자정부표준프레임워크 금주의 행사안내입니다.</span>\r\n                                        </a>\r\n                                        <a href=\"\">\r\n                                            <span>11:00~12:30</span>\r\n                                            <span>전자정부표준프레임워크 금주의 행사안내입니다.</span>\r\n                                        </a>\r\n                                    </div>\r\n                                    <div>관리자</div>\r\n                                </div>\r\n                                <div class=\"list_item\">\r\n                                    <div>2021년07월11일 일요일</div>\r\n                                    <div>\r\n                                        <a href=\"\">\r\n                                            <span>11:00~12:30</span>\r\n                                            <span>전자정부표준프레임워크 금주의 행사안내입니다.</span>\r\n                                        </a>\r\n                                        <a href=\"\">\r\n                                            <span>11:00~12:30</span>\r\n                                            <span>전자정부표준프레임워크 금주의 행사안내입니다.</span>\r\n                                        </a>\r\n                                    </div>\r\n                                    <div>관리자</div>\r\n                                </div>\r\n                                <div class=\"list_item\">\r\n                                    <div>2021년07월11일 일요일</div>\r\n                                    <div>\r\n                                        <a href=\"\">\r\n                                            <span>11:00~12:30</span>\r\n                                            <span>전자정부표준프레임워크 금주의 행사안내입니다.</span>\r\n                                        </a>\r\n                                        <a href=\"\">\r\n                                            <span>11:00~12:30</span>\r\n                                            <span>전자정부표준프레임워크 금주의 행사안내입니다.</span>\r\n                                        </a>\r\n                                    </div>\r\n                                    <div>관리자</div>\r\n                                </div>\r\n                                \r\n                                \r\n                                */}\r\n                                {listTag}\r\n                            </div>\r\n                        </div>\r\n                        {/* <!--// 게시판목록 --> */}\r\n\r\n\r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EgovWeeklyList;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\inform\\gallery\\EgovGalleryDetail.jsx",["329","330"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport * as EgovNet from 'context/egovFetch';\r\nimport URL from 'context/url';\r\nimport CODE from 'context/code';\r\nimport { GALLERY_BBS_ID } from 'context/config';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavInform';\r\nimport EgovAttachFile from 'egov/common/EgovAttachFile';\r\nimport EgovImageGallery from 'egov/common/EgovImageGallery';\r\n\r\nfunction EgovGalleryDetail(props) {\r\n    console.groupEnd(\"EgovGalleryDetail\");\r\n    console.log(\"------------------------------\");\r\n    console.log(\"EgovGalleryDetail [props] : \", props);\r\n\r\n    const history = useHistory();\r\n    console.log(\"EgovGalleryDetail [history] : \", history);\r\n\r\n    const bbsId = history.location.state.bbsId || GALLERY_BBS_ID;\r\n    const nttId = history.location.state.nttId;\r\n    const searchCondition = history.location.state.searchCondition;\r\n\r\n    const [masterBoard, setMasterBoard] = useState({});\r\n    const [user, setUser] = useState({});\r\n    const [boardDetail, setBoardDetail] = useState({});\r\n    const [boardAttachFiles, setBoardAttachFiles] = useState();\r\n\r\n    const retrieveDetail = () => {\r\n        const retrieveDetailURL = '/cop/bbs/selectBoardArticleAPI.do';\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                bbsId: bbsId,\r\n                nttId: nttId\r\n            })\r\n        }\r\n        EgovNet.requestFetch(retrieveDetailURL,\r\n            requestOptions,\r\n            function (resp) {\r\n                setMasterBoard(resp.result.brdMstrVO);\r\n                setBoardDetail(resp.result.boardVO);\r\n                setUser(resp.result.user);\r\n                setBoardAttachFiles(resp.result.resultFiles);\r\n            }\r\n        );\r\n    }\r\n\r\n    const onClickDeleteBoardArticle = (bbsId, nttId) => {\r\n        const deleteBoardURL = \"/cop/bbs/deleteBoardArticleAPI.do\";\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                bbsId: bbsId,\r\n                nttId: nttId\r\n            })\r\n        }\r\n\r\n        EgovNet.requestFetch(deleteBoardURL,\r\n            requestOptions,\r\n            (resp) => {\r\n                console.log(\"====>>> board delete= \", resp);\r\n                if (Number(resp.resultCode) === Number(CODE.RCV_SUCCESS)) {\r\n                    alert(\"게시글이 삭제되었습니다.\")\r\n                    history.push(URL.INFORM_GALLERY);\r\n                } else {\r\n                    alert(\"ERR : \" + resp.resultMessage);\r\n                }\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    useEffect(function () {\r\n        retrieveDetail();\r\n        return function () {\r\n        }\r\n    }, []);\r\n\r\n    console.groupEnd(\"EgovGalleryDetail\");\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                        <li><Link to={URL.MAIN} className=\"home\">Home</Link></li>\r\n                        <li><Link to={URL.INFORM}>알림마당</Link></li>\r\n                        <li>{masterBoard && masterBoard.bbsNm}</li>\r\n                        {/* brdMstrVO */}\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav></EgovLeftNav>\r\n                    {/* <!--// Navigation --> */}\r\n\r\n                    <div className=\"contents NOTICE_VIEW\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <div className=\"top_tit\">\r\n                            <h1 className=\"tit_1\">알림마당</h1>\r\n                        </div>\r\n\r\n                        <h2 className=\"tit_2\">{masterBoard && masterBoard.bbsNm}</h2>\r\n\r\n                        {/* <!-- 게시판 상세보기 --> */}\r\n                        <div className=\"board_view\">\r\n                            <div className=\"board_view_top\">\r\n                                <div className=\"tit\">{boardDetail && boardDetail.nttSj}</div>\r\n                                <div className=\"info\">\r\n                                    <dl>\r\n                                        <dt>작성자</dt>\r\n                                        <dd>{boardDetail && boardDetail.frstRegisterNm}</dd>\r\n                                    </dl>\r\n                                    <dl>\r\n                                        <dt>작성일</dt>\r\n                                        <dd>{boardDetail && boardDetail.frstRegisterPnttm}</dd>\r\n                                    </dl>\r\n                                    <dl>\r\n                                        <dt>조회수</dt>\r\n                                        <dd>{boardDetail && boardDetail.inqireCo}</dd>\r\n                                    </dl>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"board_article\">\r\n                                <textarea name=\"\" cols=\"30\" rows=\"10\" readOnly=\"readonly\" defaultValue={boardDetail && boardDetail.nttCn}></textarea>\r\n                            </div>\r\n\r\n                            <EgovImageGallery boardFiles={boardAttachFiles} />\r\n\r\n                            <div className=\"board_attach\">\r\n                                <EgovAttachFile boardFiles={boardAttachFiles} />\r\n                            </div>\r\n\r\n\r\n                            <div className=\"board_btn_area\">\r\n                                {user.id &&\r\n                                    <div className=\"left_col btn3\">\r\n                                        <Link to={{\r\n                                            pathname: URL.INFORM_GALLERY_MODIFY,\r\n                                            state: {\r\n                                                nttId: nttId,\r\n                                                bbsId: bbsId\r\n                                            }\r\n                                        }} className=\"btn btn_skyblue_h46 w_100\">수정</Link>\r\n                                        <a href=\"\" className=\"btn btn_skyblue_h46 w_100\" onClick={(e) => {\r\n                                            e.preventDefault();\r\n                                            onClickDeleteBoardArticle(boardDetail.bbsId, boardDetail.nttId);\r\n                                        }}>삭제</a>\r\n                                        <Link to={{\r\n                                            pathname: URL.INFORM_GALLERY_REPLY,\r\n                                            state: {\r\n                                                nttId: nttId,\r\n                                                bbsId: bbsId\r\n                                            }\r\n                                        }} className=\"btn btn_skyblue_h46 w_100\">답글작성</Link>\r\n                                    </div>\r\n                                }\r\n                                <div className=\"right_col btn1\">\r\n                                    <Link to={{\r\n                                        pathname: URL.INFORM_GALLERY,\r\n                                        state: {\r\n                                            nttId: nttId,\r\n                                            bbsId: bbsId,\r\n                                            searchCondition: searchCondition\r\n                                        }\r\n                                    }} className=\"btn btn_blue_h46 w_100\">목록</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* <!-- 게시판 상세보기 --> */}\r\n\r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default EgovGalleryDetail;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\schedule\\EgovAdminScheduleList.jsx",["331","332","333","334"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport * as EgovNet from 'context/egovFetch';\r\nimport URL from 'context/url';\r\nimport CODE from 'context/code';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavAdmin';\r\n\r\nfunction EgovAdminScheduleList(props) {\r\n    console.group(\"EgovAdminScheduleList\");\r\n    console.log(\"[Start] EgovAdminScheduleList ------------------------------\");\r\n    console.log(\"EgovAdminScheduleList [props] : \", props);\r\n    \r\n    const history = useHistory();\r\n    console.log(\"EgovAdminScheduleList [history] : \", history);\r\n\r\n    const DATE = new Date();\r\n    const TODAY = new Date(DATE.getFullYear(), DATE.getMonth(), DATE.getDate());\r\n\r\n    const [searchCondition, setSearchCondition] = useState(history.location.state?.searchCondition || { schdulSe: '', year: TODAY.getFullYear(), month: TODAY.getMonth(), date: TODAY.getDate() });\r\n    const [calendarTag, setCalendarTag] = useState([]);\r\n\r\n    const [scheduleList, setScheduleList] = useState([]);\r\n\r\n    const innerConsole = (...args) => {\r\n        console.log(...args);\r\n    }\r\n\r\n    const getLastDateOfMonth = (year, month) => {\r\n        const LAST_DATE_SUPPLMENT = 1;\r\n        return new Date(year, month + LAST_DATE_SUPPLMENT, 0);\r\n    }\r\n    const getFirstDateOfMonth = (year, month) => {\r\n        return new Date(year, month, 1);\r\n    }\r\n\r\n    const changeDate = (target, amount) => {\r\n        let changedDate;\r\n\r\n        if (target === CODE.DATE_YEAR) {\r\n            changedDate = new Date(searchCondition.year + amount, searchCondition.month, searchCondition.date);\r\n        }\r\n\r\n        if (target === CODE.DATE_MONTH) {\r\n            changedDate = new Date(searchCondition.year, searchCondition.month + amount, searchCondition.date);\r\n        }\r\n        setSearchCondition({ ...searchCondition, year: changedDate.getFullYear(), month: changedDate.getMonth(), date: changedDate.getDate() });\r\n    }\r\n\r\n    const retrieveList = (srchcnd) => {\r\n        console.groupCollapsed(\"EgovAdminScheduleList.retrieveList()\");\r\n\r\n        const retrieveListURL = '/cop/smt/sim/egovIndvdlSchdulManageMonthListAPI.do';\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(srchcnd)\r\n        }\r\n\r\n        EgovNet.requestFetch(retrieveListURL,\r\n            requestOptions,\r\n            (resp) => {\r\n                setScheduleList(resp.result.resultList);\r\n            },\r\n            function (resp) {\r\n                console.log(\"err response : \", resp);\r\n            }\r\n        );\r\n        console.groupEnd(\"EgovAdminScheduleList.retrieveList()\");\r\n    }\r\n\r\n    const drawCalendar = () => {\r\n        console.groupCollapsed(\"EgovAdminScheduleList.drawCalendar()\");\r\n        const PREV_MONTH_ADDITION = -1;\r\n\r\n        let lastOfLastMonth = getLastDateOfMonth(searchCondition.year, searchCondition.month + PREV_MONTH_ADDITION);\r\n        let firstOfThisMonth = getFirstDateOfMonth(searchCondition.year, searchCondition.month);\r\n        let lastOfThisMonth = getLastDateOfMonth(searchCondition.year, searchCondition.month);\r\n\r\n        console.log(\"lastOfLastMonth : \", lastOfLastMonth, lastOfLastMonth.getDay());\r\n        console.log(\"firstOfThisMonth :\", firstOfThisMonth, firstOfThisMonth.getDay());\r\n        console.log(\"lastOfThisMonth :\", lastOfThisMonth, lastOfThisMonth.getDay());\r\n        console.log(\"scheduleList : \", scheduleList);\r\n\r\n        let firstDayOfThisMonth = firstOfThisMonth.getDay();\r\n        let lastDateOfThisMonth = lastOfThisMonth.getDate();\r\n        console.log(\"firstDayOfThisMonth\", firstDayOfThisMonth, \"lastDateOfThisMonth\", lastDateOfThisMonth)\r\n\r\n        let monthArr = [];\r\n        let weekArr = [];\r\n\r\n        // firstWeek Date Set START\r\n        let firstWeekDateCount = 0;\r\n        for (let day = 0; day < 7; day++) {\r\n            if (day < firstDayOfThisMonth) { // \r\n                weekArr.push(0);\r\n                firstWeekDateCount = 0;\r\n            } else {\r\n                weekArr.push(++firstWeekDateCount);\r\n            }\r\n        }\r\n        monthArr.push(weekArr);\r\n        console.log(\"FirstWeek monthArr : \", monthArr);\r\n        // firstWeek Date Set END\r\n\r\n        // otherWeek Date Set START\r\n        let dayCount = 0;\r\n        weekArr = [];//초기화\r\n        for (let day = firstWeekDateCount + 1; day <= lastDateOfThisMonth; day++) {\r\n\r\n            if (dayCount % 7 !== 6) {\r\n                weekArr.push(day);\r\n            } else {\r\n                weekArr.push(day);\r\n                monthArr.push(weekArr);\r\n                weekArr = [];\r\n                dayCount = -1;\r\n            }\r\n            dayCount++;\r\n        }\r\n        // otherWeek Date Set END\r\n\r\n        // lastWeek Date Set START\r\n        if (weekArr.length > 0) {//남은 부분\r\n            for (let day = weekArr.length; day < 7; day++) {\r\n                weekArr.push(0);\r\n            }\r\n            monthArr.push(weekArr);\r\n        }\r\n        // lastWeek Date Set END\r\n        console.log(\"OtherWeek monthArr : \", monthArr);\r\n\r\n        let mutsUseYearMonth = searchCondition.year.toString() + ((searchCondition.month + 1).toString().length === 1 ? \"0\" + (searchCondition.month + 1).toString() : (searchCondition.month + 1).toString());\r\n        console.log(\"mutsUseYearMonth : \", mutsUseYearMonth);\r\n\r\n        let mutCalendarTagList = [];\r\n        let keyIdx = 0;\r\n        \r\n        //draw Calendar\r\n        monthArr.forEach((week, weekIdx) => {\r\n            console.log();\r\n            mutCalendarTagList.push(\r\n                <tr key={keyIdx++}>{\r\n                    week.map((day, dayIdx) => {\r\n                        if (day !== 0) {//당월 일별 구현\r\n                            let sDate = day.toString().length === 1 ? \"0\" + day.toString() : day.toString();\r\n                            let iUseDate = Number(mutsUseYearMonth + sDate);\r\n                            if (scheduleList.length > 0) {//일정 있는 경우\r\n                                return (\r\n                                    <td key={keyIdx++}>\r\n                                        <Link to={URL.ADMIN_SCHEDULE_CREATE} className=\"day\" key={keyIdx++}>{day}</Link><br />\r\n                                        {\r\n                                            scheduleList.map((schedule, scheduleIdx) => {\r\n                                                let iBeginDate = Number(schedule.schdulBgnde.substring(0, 8));\r\n                                                let iEndDate = Number(schedule.schdulEndde.substring(0, 8));\r\n                                                innerConsole(\"scheduleList \", day, scheduleIdx, iBeginDate, iUseDate, iEndDate, iUseDate >= iBeginDate && iUseDate <= iEndDate);\r\n                                                innerConsole(\"schedule.schdulId \", schedule.schdulId);\r\n                                                if (iUseDate >= iBeginDate && iUseDate <= iEndDate) {\r\n                                                    return (\r\n                                                        <>\r\n                                                            <Link to={{\r\n                                                                pathname: URL.ADMIN_SCHEDULE_DETAIL,\r\n                                                                state: {\r\n                                                                    schdulId : schedule.schdulId\r\n                                                                }\r\n                                                            }} key={keyIdx++}>{schedule.schdulNm}\r\n                                                            </Link>\r\n                                                            <br />\r\n                                                        </>\r\n                                                    );\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                    </td>\r\n                                );\r\n                            } else {//일정 없는 경우\r\n                                return (\r\n                                    <td key={keyIdx++}>\r\n                                        <Link to={URL.ADMIN_SCHEDULE_CREATE} className=\"day\" key={keyIdx++}>{day}</Link>\r\n                                    </td>);\r\n                            }\r\n                        } else if (day === 0) {// 이전달/다음달 구현\r\n                            return (<td key={keyIdx++}></td>);\r\n                        }\r\n                    })\r\n                }</tr>);\r\n        })\r\n        console.log(\"mutCalendarTagList : \", mutCalendarTagList);\r\n        setCalendarTag(mutCalendarTagList);\r\n        console.groupEnd(\"EgovAdminScheduleList.drawCalendar()\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        retrieveList(searchCondition);\r\n\r\n        return () => {\r\n        }\r\n    }, [searchCondition.year, searchCondition.month]);\r\n\r\n    useEffect(() => {\r\n        drawCalendar();\r\n        return () => {\r\n        }\r\n    }, [scheduleList]);\r\n\r\n    console.log(\"------------------------------EgovAdminScheduleList [End]\");\r\n    console.groupEnd(\"EgovAdminScheduleList\");\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                        <li><Link to={URL.MAIN} className=\"home\">Home</Link></li>\r\n                        <li><Link to={URL.ADMIN}>사이트관리</Link></li>\r\n                        <li>일정관리</li>\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav></EgovLeftNav>\r\n                    {/* <!--// Navigation --> */}\r\n\r\n                    <div className=\"contents NOTICE_LIST\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <div className=\"top_tit\">\r\n                            <h1 className=\"tit_1\">사이트관리</h1>\r\n                        </div>\r\n\r\n                        <h2 className=\"tit_2\">일정관리</h2>\r\n\r\n                        {/* <!-- 검색조건 --> */}\r\n                        <div className=\"condition\">\r\n                            <ul>\r\n                                <li>\r\n                                    <label className=\"f_select\" htmlFor=\"sel1\">\r\n                                        <select name=\"schdulSe\" id=\"sel1\" title=\"조건\"\r\n                                            onChange={e => {\r\n                                                setSearchCondition({ ...searchCondition, schdulSe: e.target.value });\r\n                                            }}\r\n                                        >\r\n                                            <option value=\"\">전체</option>\r\n                                            <option value=\"1\">회의</option>\r\n                                            <option value=\"2\">세미나</option>\r\n                                            <option value=\"3\">강의</option>\r\n                                            <option value=\"4\">교육</option>\r\n                                            <option value=\"5\">기타</option>\r\n                                        </select>\r\n                                    </label>\r\n                                </li>\r\n                                <li className=\"half L\">\r\n                                    <button className=\"prev\"\r\n                                        onClick={() => {\r\n                                            changeDate(CODE.DATE_YEAR, -1);\r\n                                        }}\r\n                                    ></button>\r\n                                    {/* <a href=\"\" className=\"prev\">이전연도로이동</a> */}\r\n                                    <span>{searchCondition.year}</span>\r\n                                    <button className=\"next\"\r\n                                        onClick={() => {\r\n                                            changeDate(CODE.DATE_YEAR, 1);\r\n                                        }}\r\n                                    ></button>\r\n                                </li>\r\n                                <li className=\"half R\">\r\n                                    <button className=\"prev\"\r\n                                        onClick={() => {\r\n                                            changeDate(CODE.DATE_MONTH, -1);\r\n                                        }}\r\n                                    ></button>\r\n                                    {/* <a href=\"\" className=\"prev\">이전월로이동</a> */}\r\n                                    <span>{(searchCondition.month + 1)}</span>\r\n                                    <button className=\"next\"\r\n                                        onClick={() => {\r\n                                            changeDate(CODE.DATE_MONTH, 1);\r\n                                        }}\r\n                                    ></button>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        {/* <!--// 검색조건 --> */}\r\n\r\n                        <div className=\"calendar_list\">\r\n                            <table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>일</th>\r\n                                        <th>월</th>\r\n                                        <th>화</th>\r\n                                        <th>수</th>\r\n                                        <th>목</th>\r\n                                        <th>금</th>\r\n                                        <th>토</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {calendarTag}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EgovAdminScheduleList;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\schedule\\EgovAdminScheduleDetail.jsx",["335","336","337","338"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport * as EgovNet from 'context/egovFetch';\r\nimport URL from 'context/url';\r\nimport CODE from 'context/code';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavAdmin';\r\nimport EgovPaging from 'egov/common/EgovPaging';\r\nimport EgovAttachFile from 'egov/common/EgovAttachFile';\r\n\r\nfunction EgovAdminScheduleDetail(props) {\r\n    console.group(\"EgovAdminScheduleDetail\");\r\n    console.log(\"[Start] EgovAdminScheduleDetail ------------------------------\");\r\n    console.log(\"EgovAdminScheduleDetail [props] : \", props);\r\n\r\n    const history = useHistory();\r\n    console.log(\"EgovAdminScheduleDetail [history] : \", history);\r\n\r\n    const [scheduleDetail, setScheduleDetail] = useState({});\r\n    const [boardAttachFiles, setBoardAttachFiles] = useState();\r\n    const [user, setUser] = useState({});\r\n\r\n    const retrieveDetail = () => {\r\n\r\n        const retrieveDetailURL = '/cop/smt/sim/egovIndvdlSchdulManageDetailAPI.do';\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                schdulId: history.location.state?.schdulId\r\n            })\r\n        }\r\n        EgovNet.requestFetch(retrieveDetailURL,\r\n            requestOptions,\r\n            function (resp) {\r\n                let rawScheduleDetail = resp.result.scheduleDetail;\r\n                rawScheduleDetail.startDateTime = convertDate(rawScheduleDetail.schdulBgnde);\r\n                rawScheduleDetail.endDateTime = convertDate(rawScheduleDetail.schdulEndde);\r\n                rawScheduleDetail.reptitSeCodeNm = getCodeName(resp.result.reptitSeCode, resp.result.scheduleDetail.reptitSeCode);\r\n                rawScheduleDetail.schdulIpcrCodeNm = getCodeName(resp.result.schdulIpcrCode, resp.result.scheduleDetail.schdulIpcrCode);\r\n                rawScheduleDetail.schdulSeNm = getCodeName(resp.result.schdulSe, resp.result.scheduleDetail.schdulSe);\r\n                setScheduleDetail(rawScheduleDetail);\r\n                setUser(resp.result.user);\r\n                setBoardAttachFiles(resp.result.resultFiles);\r\n            }\r\n        );\r\n    }\r\n    const convertDate = (str) => {\r\n        let year = str.substring(0, 4);\r\n        let month = str.substring(4, 6);\r\n        let date = str.substring(6, 8);\r\n        let hour = str.substring(8, 10);\r\n        let minute = str.substring(10, 12);\r\n        return {\r\n            year: year,\r\n            month: month,\r\n            date: date,\r\n            hour: hour,\r\n            minute: minute,\r\n            dateForm: year + \"년 \" + month + \"월 \" + date + \"일 \" + hour + \"시 \" + minute + \"분 \"\r\n        }\r\n    }\r\n\r\n    const getCodeName = (codeArr, code) => {\r\n        return (\r\n            codeArr.map((codeObj) => {\r\n                if (codeObj.code == code) return codeObj.codeNm;\r\n            })\r\n        );\r\n    }\r\n\r\n    const onClickDeleteSchedule = (schdulId) => {\r\n        const deleteBoardURL = \"/cop/smt/sim/egovIndvdlSchdulManageDeleteAPI.do\";\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                schdulId: schdulId\r\n            })\r\n        }\r\n\r\n        EgovNet.requestFetch(deleteBoardURL,\r\n            requestOptions,\r\n            (resp) => {\r\n                console.log(\"====>>> Schdule delete= \", resp);\r\n                if (Number(resp.resultCode) === Number(CODE.RCV_SUCCESS)) {\r\n                    alert(\"게시글이 삭제되었습니다.\")\r\n                    history.push(URL.ADMIN_SCHEDULE);\r\n                } else {\r\n                    alert(\"ERR : \" + resp.resultMessage);\r\n                }\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    useEffect(function () {\r\n        retrieveDetail();\r\n        return function () {\r\n        }\r\n    }, []);\r\n\r\n    console.log(\"------------------------------EgovAdminScheduleDetail [End]\");\r\n    console.groupEnd(\"EgovAdminScheduleDetail\");\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                        <li><Link to={URL.MAIN} className=\"home\">Home</Link></li>\r\n                        <li><Link to={URL.ADMIN}>사이트관리</Link></li>\r\n                        <li>일정관리</li>\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav></EgovLeftNav>\r\n                    {/* <!--// Navigation --> */}\r\n\r\n                    <div className=\"contents SITE_GALLARY_VIEW\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <div className=\"top_tit\">\r\n                            <h1 className=\"tit_1\">사이트관리</h1>\r\n                        </div>\r\n\r\n                        <h2 className=\"tit_2\">일정관리 상세보기</h2>\r\n\r\n                        {/* <!-- 게시판 상세보기 --> */}\r\n                        <div className=\"board_view2\">\r\n                            <dl>\r\n                                <dt>일정구분</dt>\r\n                                <dd>{scheduleDetail.schdulSeNm}</dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>중요도</dt>\r\n                                <dd>{scheduleDetail.schdulIpcrCodeNm}</dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>부서</dt>\r\n                                <dd>{scheduleDetail.schdulDeptName}</dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>일정명</dt>\r\n                                <dd>{scheduleDetail.schdulNm}</dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>일정내용</dt>\r\n                                <dd>{scheduleDetail.schdulCn}</dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>반복구분</dt>\r\n                                <dd>{scheduleDetail.reptitSeCodeNm}</dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>날짜/시간</dt>\r\n                                <dd> {scheduleDetail.startDateTime?.dateForm} ~ {scheduleDetail.endDateTime?.dateForm}</dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>담당자</dt>\r\n                                <dd>{scheduleDetail.schdulChargerName}</dd>\r\n                            </dl>\r\n                            {/* <dl>\r\n                                <dt>파일첨부</dt>\r\n                                <dd>\r\n                                    <span className=\"file_attach\">\r\n                                        <a href=\"\">file_name.hwp</a> <span>[3626] byte</span>\r\n                                    </span>\r\n                                </dd>\r\n                            </dl> */}\r\n\r\n                            <EgovAttachFile boardFiles={boardAttachFiles} />\r\n\r\n                            {/* <!-- 버튼영역 --> */}\r\n                            <div className=\"board_btn_area\">\r\n                                {user.id &&\r\n                                    <div className=\"left_col btn1\">\r\n                                        <Link to={{\r\n                                            pathname: URL.ADMIN_SCHEDULE_MODIFY,\r\n                                            state: {\r\n                                                schdulId: history.location.state?.schdulId\r\n                                            }\r\n                                        }} className=\"btn btn_skyblue_h46 w_100\">수정</Link>\r\n                                        <button className=\"btn btn_skyblue_h46 w_100\"\r\n                                            onClick={(e) => {\r\n                                                onClickDeleteSchedule(history.location.state?.schdulId);\r\n                                            }}>삭제</button>\r\n                                        \r\n                                    </div>\r\n                                }\r\n                                <div className=\"right_col btn1\">\r\n                                    <Link to={URL.ADMIN_SCHEDULE} className=\"btn btn_blue_h46 w_100\">목록</Link>\r\n                                </div>\r\n                            </div>\r\n                            {/* <!--// 버튼영역 --> */}\r\n                        </div>\r\n                        {/* <!-- 게시판 상세보기 --> */}\r\n\r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EgovAdminScheduleDetail;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\template\\EgovAdminTemplateEdit.jsx",["339","340","341","342","343","344","345","346","347","348","349","350"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport * as EgovNet from 'context/egovFetch';\r\nimport URL from 'context/url';\r\nimport CODE from 'context/code';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavAdmin';\r\nimport EgovRadioButtonGroup from 'egov/common/EgovRadioButtonGroup';\r\n\r\nfunction EgovAdminTemplateEdit(props) {\r\n    console.group(\"EgovAdminTemplateEdit\");\r\n    console.log(\"[Start] EgovAdminTemplateEdit ------------------------------\");\r\n    console.log(\"EgovAdminTemplateEdit [props] : \", props);\r\n\r\n    const history = useHistory();\r\n    console.log(\"EgovAdminTemplateEdit [history] : \", history);\r\n\r\n    const tmplatId = history.location.state?.tmplatId || \"\";\r\n\r\n    const [modeInfo, setModeInfo] = useState({ mode: props.mode });\r\n    const [useAt, setUseAt] = useState(\"Y\");\r\n    const [templateDetail, setTemplateDetail] = useState({ nttSj: '', nttCn: '' });\r\n    const [useAtRadioGroup, setUseAtRadioGroup] = useState([{value: \"Y\", label:\"Y Label\"}, {value: \"N\", label:\"N Label\"}])\r\n    const [radioGroup, setRadioGroup] = useState({ Y: true, N: false, F: false })\r\n\r\n    const intMode = () => {\r\n        switch (props.mode) {\r\n            case CODE.MODE_CREATE:\r\n                setModeInfo({\r\n                    ...modeInfo,\r\n                    modeTitle: \"등록\",\r\n                    editURL: ''\r\n                });\r\n                break;\r\n            case CODE.MODE_MODIFY:\r\n                setModeInfo({\r\n                    ...modeInfo,\r\n                    modeTitle: \"수정\",\r\n                    editURL: ''\r\n                });\r\n                break;\r\n            case CODE.MODE_REPLY:\r\n                setModeInfo({\r\n                    ...modeInfo,\r\n                    modeTitle: \"답글쓰기\",\r\n                    editURL: ''\r\n                });\r\n                break;\r\n        }\r\n        retrieveDetail();\r\n    }\r\n\r\n    const retrieveDetail = () => {\r\n\r\n        if (modeInfo.mode === CODE.MODE_CREATE) {\r\n            setTemplateDetail({});\r\n            return;\r\n        }\r\n\r\n        const retrieveDetailURL = '/cop/com/selectTemplateInfAPI.do';\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                tmplatId: tmplatId\r\n            })\r\n        }\r\n        EgovNet.requestFetch(retrieveDetailURL,\r\n            requestOptions,\r\n            function (resp) {\r\n                setTemplateDetail(resp.result.templateInfVO);\r\n\r\n                // // 초기 templateDetail 설정 => ( 답글 / 수정 ) 모드일때...\r\n                // if (modeInfo.mode === CODE.MODE_REPLY) {// 답글모드이면 RE: 붙여줌 \r\n                //     setTemplateDetail({ ...resp.result.boardVO, nttSj: \"RE: \" + resp.result.boardVO.nttSj, nttCn: \"\" , inqireCo: 0, atchFileId: \"\"});\r\n                // }\r\n                // if (modeInfo.mode === CODE.MODE_MODIFY) {\r\n                //     setTemplateDetail(resp.result.boardVO);\r\n                // }\r\n\r\n                // // 초기 setBoardAttachFiles 설정 => (수정) 모드 일때...\r\n                // if (modeInfo.mode === CODE.MODE_MODIFY) {\r\n                //     setBoardAttachFiles(resp.result.resultFiles);\r\n                // }\r\n            }\r\n        );\r\n    }\r\n\r\n    const handleUseAtRadio = (e) => {\r\n        let radioChecks = {};\r\n        radioChecks[e.target.value] = e.target.checked;\r\n        setRadioGroup(radioChecks);\r\n    }\r\n\r\n    useEffect(() => {\r\n        intMode();\r\n        return () => {\r\n        }\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        // setUseAt(useAt)\r\n        return () => {\r\n        }\r\n    }, [useAt]);\r\n\r\n    console.log(\"------------------------------EgovAdminTemplateEdit [End]\");\r\n    console.groupEnd(\"EgovAdminTemplateEdit\");\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                        <li><a className=\"home\" href=\"\">Home</a></li>\r\n                        <li><a href=\"\">사이트관리</a></li>\r\n                        <li>게시판템플릿 관리</li>\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav />\r\n                    {/* <!--// Navigation --> */}\r\n\r\n                    <div className=\"contents TEMPLATE_REG\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <div className=\"top_tit\">\r\n                            <h1 className=\"tit_1\">사이트관리</h1>\r\n                        </div>\r\n\r\n                        <h2 className=\"tit_2\">템플릿 등록</h2>\r\n\r\n                        {/* <!-- 게시판 상세보기 --> */}\r\n                        <div className=\"board_view2\">\r\n                            <dl>\r\n                                <dt><label htmlFor=\"tmplatNm\">템플릿명</label><span className=\"req\">필수</span></dt>\r\n                                <dd>\r\n                                    <input className=\"f_input2 w_full\" type=\"text\" name=\"\" title=\"템플릿명\" id=\"tmplatNm\" placeholder=\"\" defaultValue={templateDetail.tmplatNm} />\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>템플릿 구분<span className=\"req\">필수</span></dt>\r\n                                <dd>\r\n                                    <label className=\"f_select \" htmlFor=\"tmplatSeCode\">\r\n                                        <select id=\"tmplatSeCode\" name=\"\" title=\"템플릿 구분\" defaultValue={templateDetail.tmplatSeCode}>\r\n                                            <option value=\"\">선택하세요</option>\r\n                                            <option value=\"TMPT01\">게시판템플릿</option>\r\n                                        </select>\r\n                                    </label>\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt><label htmlFor=\"tmplatCours\">템플릿 경로</label><span className=\"req\">필수</span></dt>\r\n                                <dd>\r\n                                    <input className=\"f_input2 w_full\" type=\"text\" name=\"\" title=\"템플릿 경로\" id=\"tmplatCours\" placeholder=\"\" defaultValue={templateDetail.tmplatCours} />\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>사용여부<span className=\"req\">필수</span></dt>\r\n                                <dd>\r\n                                    {/* <label className={`f_rdo ${\"Y\" === useAt && \" on\"}`}>\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            name=\"useAt\"\r\n                                            value=\"Y\"\r\n                                            title=\"Ylabel\"\r\n                                            checked={\"Y\" === useAt}\r\n                                            onChange={ () => setUseAt(\"Y\")}\r\n                                        />\r\n                                        <em>Ylabel</em>\r\n                                    </label>\r\n                                    <label className={`f_rdo ${\"N\" === useAt && \" on\"}`}>\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            name=\"useAt\"\r\n                                            value=\"N\"\r\n                                            title=\"Nlabel\"\r\n                                            checked={\"N\" === useAt}\r\n                                            onChange={() => setUseAt(\"N\")}\r\n                                        />\r\n                                        <em>Nlabel</em>\r\n                                    </label> */}\r\n                                    {/* <EgovRadioButton\r\n                                        name=\"useAt\"\r\n                                        label=\"Y value\"\r\n                                        value=\"Y\"\r\n                                        checkedValue={useAt}\r\n                                        setter={setUseAt}\r\n                                    />\r\n                                    <EgovRadioButton\r\n                                        name=\"useAt\"\r\n                                        label=\"N value\"\r\n                                        value=\"N\"\r\n                                        checkedValue={useAt}\r\n                                        setter={setUseAt} \r\n                                    /> */}\r\n                                    <EgovRadioButtonGroup\r\n                                        name=\"useAt\"\r\n                                        radioGroup={useAtRadioGroup}\r\n                                        setValue={useAt}\r\n                                        setter={setUseAt}/>\r\n                                </dd>\r\n                            </dl>\r\n\r\n                            {/* <!-- 버튼영역 --> */}\r\n                            <div className=\"board_btn_area\">\r\n                                <div className=\"left_col btn1\">\r\n                                    <a href=\"\" className=\"btn btn_skyblue_h46 w_100\">미리보기</a>\r\n                                    <a href=\"\" className=\"btn btn_skyblue_h46 w_100\">저장</a>\r\n                                </div>\r\n\r\n                                <div className=\"right_col btn1\">\r\n                                    <a href=\"\" className=\"btn btn_blue_h46 w_100\">목록</a>\r\n                                </div>\r\n                            </div>\r\n                            {/* <!--// 버튼영역 --> */}\r\n                        </div>\r\n                        {/* <!-- 게시판 상세보기 --> */}\r\n\r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EgovAdminTemplateEdit;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\board\\EgovAdminBoardEdit.jsx",["351","352","353","354"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport * as EgovNet from 'context/egovFetch';\r\nimport URL from 'context/url';\r\nimport CODE from 'context/code';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavAdmin';\r\nimport EgovRadioButtonGroup from 'egov/common/EgovRadioButtonGroup';\r\nimport EgovSelect from 'egov/common/EgovSelect';\r\n\r\nfunction EgovAdminBoardEdit(props) {\r\n    console.group(\"EgovAdminBoardEdit\");\r\n    console.log(\"[Start] EgovAdminBoardEdit ------------------------------\");\r\n    console.log(\"EgovAdminBoardEdit [props] : \", props);\r\n\r\n    const history = useHistory();\r\n    console.log(\"EgovAdminBoardEdit [history] : \", history);\r\n\r\n    const replyPosblAtRadioGroup = [{ value: \"Y\", label: \"가능\" }, { value: \"N\", label: \"불가능\" }];\r\n    const fileAtchPosblAtRadioGroup = [{ value: \"Y\", label: \"가능\" }, { value: \"N\", label: \"불가능\" }];\r\n    const bbsTyCodeOptions = [{ value: \"\", label: \"선택\" }, { value: \"BBST01\", label: \"일반게시판\" }, { value: \"BBST03\", label: \"공지게시판\" }];\r\n    const bbsAttrbCodeOptions = [{ value: \"\", label: \"선택\" }, { value: \"BBSA02\", label: \"갤러리\" }, { value: \"BBSA03\", label: \"일반게시판\" }];\r\n    const posblAtchFileNumberOptions = [{ value: 0, label: \"선택하세요\" }, { value: 1, label: \"1개\" }, { value: 2, label: \"2개\" }, { value: 3, label: \"3개\" }];\r\n    const bbsId = history.location.state?.bbsId || \"\";\r\n    const searchCondition = history.location.state?.searchCondition;\r\n\r\n    const [modeInfo, setModeInfo] = useState({ mode: props.mode });\r\n    const [boardDetail, setBoardDetail] = useState({});\r\n\r\n    const initMode = () => {\r\n        switch (props.mode) {\r\n            case CODE.MODE_CREATE:\r\n                setModeInfo({\r\n                    ...modeInfo,\r\n                    modeTitle: \"등록\",\r\n                    editURL: '/cop/bbs/insertBBSMasterInfAPI.do'\r\n                });\r\n                break;\r\n\r\n            case CODE.MODE_MODIFY:\r\n                setModeInfo({\r\n                    ...modeInfo,\r\n                    modeTitle: \"수정\",\r\n                    editURL: '/cop/bbs/updateBBSMasterInfAPI.do'\r\n                });\r\n                break;\r\n        }\r\n        retrieveDetail();\r\n    }\r\n\r\n    const retrieveDetail = () => {\r\n        if (modeInfo.mode === CODE.MODE_CREATE) {// 조회/등록이면 조회 안함\r\n            setBoardDetail({\r\n                tmplatId: \"TMPLAT_BOARD_DEFAULT\",  //Template 고정\r\n                replyPosblAt: \"Y\",                 //답장가능여부 초기값\r\n                fileAtchPosblAt: \"Y\"                //파일첨부가능여부 초기값\r\n            });\r\n            return;\r\n        }\r\n\r\n        const retrieveDetailURL = '/cop/bbs/selectBBSMasterInfAPI.do';\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                bbsId: bbsId\r\n            })\r\n        }\r\n\r\n        EgovNet.requestFetch(retrieveDetailURL,\r\n            requestOptions,\r\n            function (resp) {\r\n                // 수정모드일 경우 조회값 세팅\r\n                if (modeInfo.mode === CODE.MODE_MODIFY) {\r\n                    setBoardDetail(resp.result.boardMasterVO);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    const updateBoard = () => {\r\n        const formData = new FormData();\r\n        for (let key in boardDetail) {\r\n            formData.append(key, boardDetail[key]);\r\n            console.log(\"boardDetail [%s] \", key, boardDetail[key]);\r\n        }\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n            },\r\n            body: formData\r\n        }\r\n\r\n        EgovNet.requestFetch(modeInfo.editURL,\r\n            requestOptions,\r\n            (resp) => {\r\n                if (Number(resp.resultCode) === Number(CODE.RCV_SUCCESS)) {\r\n                    history.push({ pathname: URL.ADMIN_BOARD });\r\n                } else {\r\n                    alert(\"ERR : \" + resp.resultMessage);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    const deleteBoardArticle = (bbsId) => {\r\n        const deleteBoardURL = \"/cop/bbs/deleteBBSMasterInfAPI.do\";\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                bbsId: bbsId\r\n            })\r\n        }\r\n\r\n        EgovNet.requestFetch(deleteBoardURL,\r\n            requestOptions,\r\n            (resp) => {\r\n                console.log(\"====>>> board delete= \", resp);\r\n                if (Number(resp.resultCode) === Number(CODE.RCV_SUCCESS)) {\r\n                    alert(\"게시글이 삭제되었습니다.\")\r\n                    history.push(URL.ADMIN_BOARD);\r\n                } else {\r\n                    alert(\"ERR : \" + resp.resultMessage);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    const getSelectedLabel = (objArray, findLabel = \"\") => {\r\n        let foundValueLabelObj = objArray.find(o => o['value'] === findLabel);\r\n        return foundValueLabelObj['label'];\r\n    }\r\n\r\n    useEffect(() => {\r\n        initMode();\r\n        return () => {\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n        }\r\n    }, [boardDetail]);\r\n\r\n    console.log(\"------------------------------EgovAdminBoardEdit [End]\");\r\n    console.groupEnd(\"EgovAdminBoardEdit\");\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                        <li><Link to={URL.MAIN} className=\"home\">Home</Link></li>\r\n                        <li><Link to={URL.ADMIN}>사이트관리</Link></li>\r\n                        <li>게시판생성 관리</li>\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav></EgovLeftNav>\r\n                    {/* <!--// Navigation --> */}\r\n\r\n                    <div className=\"contents BOARD_CREATE_REG\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <div className=\"top_tit\">\r\n                            <h1 className=\"tit_1\">사이트관리</h1>\r\n                        </div>\r\n\r\n                        {modeInfo.mode === CODE.MODE_CREATE &&\r\n                            <h2 className=\"tit_2\">게시판 생성</h2>\r\n                        }\r\n\r\n                        {modeInfo.mode === CODE.MODE_MODIFY &&\r\n                            <h2 className=\"tit_2\">게시판 수정</h2>\r\n                        }\r\n\r\n                        <div className=\"board_view2\">\r\n                            <dl>\r\n                                <dt><label htmlFor=\"bbsNm\">게시판명</label><span className=\"req\">필수</span></dt>\r\n                                <dd>\r\n                                    <input className=\"f_input2 w_full\" type=\"text\" name=\"bbsNm\" title=\"\" id=\"bbsNm\" placeholder=\"\"\r\n                                        defaultValue={boardDetail.bbsNm}\r\n                                        onChange={e => setBoardDetail({ ...boardDetail, bbsNm: e.target.value })}\r\n                                    />\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt><label htmlFor=\"bbsIntrcn\">게시판 소개</label><span className=\"req\">필수</span></dt>\r\n                                <dd>\r\n                                    <textarea className=\"f_txtar w_full h_100\" name=\"bbsIntrcn\" id=\"bbsIntrcn\" cols=\"30\" rows=\"10\" placeholder=\"\"\r\n                                        defaultValue={boardDetail.bbsIntrcn}\r\n                                        onChange={e => setBoardDetail({ ...boardDetail, bbsIntrcn: e.target.value })}\r\n                                    ></textarea>\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>게시판 유형<span className=\"req\">필수</span></dt>\r\n                                <dd>\r\n                                    {/* 수정/조회 일때 변경 불가 */}\r\n                                    {modeInfo.mode === CODE.MODE_CREATE &&\r\n                                        <label className=\"f_select w_130\" htmlFor=\"schdulIpcrCode\">\r\n                                            {/* <EgovSelect\r\n                                                id=\"bbsTyCode\"\r\n                                                name=\"bbsTyCode\"\r\n                                                title=\"게시판유형선택\"\r\n                                                options={bbsTyCodeOptions}\r\n                                                setValue={boardDetail.bbsTyCode}\r\n                                                setter={(v) => setBoardDetail({ ...boardDetail, bbsTyCode: v })}\r\n                                            /> */}\r\n                                            <select\r\n                                                id=\"bbsTyCode\"\r\n                                                name=\"bbsTyCode\"\r\n                                                title=\"게시판유형선택\"\r\n                                                onChange={(e) => setBoardDetail({ ...boardDetail, bbsTyCode: e.target.value })}\r\n                                                value={boardDetail.bbsTyCode}\r\n                                            >\r\n                                                {bbsTyCodeOptions.map((option, i) => {\r\n                                                    return (\r\n                                                        <option value={option.value} key={option.value}>\r\n                                                            {option.label}\r\n                                                        </option>\r\n                                                    )\r\n                                                })}\r\n                                            </select>\r\n                                        </label>\r\n                                    }\r\n                                    {modeInfo.mode === CODE.MODE_MODIFY &&\r\n                                        <span>\r\n                                            {boardDetail.bbsTyCode && getSelectedLabel(bbsTyCodeOptions, boardDetail.bbsTyCode)}\r\n                                        </span>\r\n                                    }\r\n\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>게시판 속성<span className=\"req\">필수</span></dt>\r\n                                <dd>\r\n                                    {/* 등록 일때 변경 가능 */}\r\n                                    {modeInfo.mode === CODE.MODE_CREATE &&\r\n                                        <label className=\"f_select w_130\" htmlFor=\"bbsAttrbCode\">\r\n                                            {/* <EgovSelect\r\n                                                id=\"bbsAttrbCode\"\r\n                                                name=\"bbsAttrbCode\"\r\n                                                title=\"게시판속성선택\"\r\n                                                options={bbsAttrbCodeOptions}\r\n                                                setValue={boardDetail.bbsAttrbCode}\r\n                                                setter={(v) => setBoardDetail({ ...boardDetail, bbsAttrbCode: v })}\r\n                                            /> */}\r\n                                            <select\r\n                                                id=\"bbsAttrbCode\"\r\n                                                name=\"bbsAttrbCode\"\r\n                                                title=\"게시판속성선택\"\r\n                                                onChange={(e) => setBoardDetail({ ...boardDetail, bbsAttrbCode: e.target.value })}\r\n                                                value={boardDetail.bbsAttrbCode}\r\n                                            >\r\n                                                {bbsAttrbCodeOptions.map((option, i) => {\r\n                                                    return (\r\n                                                        <option value={option.value} key={option.value}>\r\n                                                            {option.label}\r\n                                                        </option>\r\n                                                    )\r\n                                                })}\r\n                                            </select>\r\n                                        </label>\r\n                                    }\r\n                                    {/* 수정/조회 일때 변경 불가 */}\r\n                                    {modeInfo.mode === CODE.MODE_MODIFY &&\r\n                                        <span>\r\n                                            {/* {bbsTyCodeOptions.find(o => o.value === boardDetail.bbsTyCode)['label']} */}\r\n                                            {boardDetail.bbsAttrbCode && getSelectedLabel(bbsAttrbCodeOptions, boardDetail.bbsAttrbCode)}\r\n                                        </span>\r\n                                    }\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>답장가능여부<span className=\"req\">필수</span></dt>\r\n                                <dd>\r\n                                    {/* 등록 일때 변경 가능 */}\r\n                                    {modeInfo.mode === CODE.MODE_CREATE &&\r\n                                        <EgovRadioButtonGroup\r\n                                            name=\"replyPosblAt\"\r\n                                            radioGroup={replyPosblAtRadioGroup}\r\n                                            setValue={boardDetail.replyPosblAt}\r\n                                            setter={(v) => setBoardDetail({ ...boardDetail, replyPosblAt: v })} />\r\n                                    }\r\n                                    {/* 수정/조회 일때 변경 불가 */}\r\n                                    {modeInfo.mode === CODE.MODE_MODIFY &&\r\n                                        <span>\r\n                                            {boardDetail.replyPosblAt && getSelectedLabel(replyPosblAtRadioGroup, boardDetail.replyPosblAt)}\r\n                                        </span>\r\n                                    }\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>파일첨부가능여부<span className=\"req\">필수</span></dt>\r\n                                <dd>\r\n                                    <EgovRadioButtonGroup\r\n                                        name=\"fileAtchPosblAt\"\r\n                                        radioGroup={fileAtchPosblAtRadioGroup}\r\n                                        setValue={boardDetail.fileAtchPosblAt}\r\n                                        setter={(v) => setBoardDetail({ ...boardDetail, fileAtchPosblAt: v })} />\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt><label htmlFor=\"schdulDeptName\">첨부파일가능파일 숫자</label><span className=\"req\">필수</span></dt>\r\n                                <dd>\r\n                                    <label className=\"f_select \" htmlFor=\"posblAtchFileNumber\">\r\n                                        {/* <EgovSelect\r\n                                            id=\"posblAtchFileNumber\"\r\n                                            name=\"posblAtchFileNumber\"\r\n                                            title=\"첨부가능파일 숫자선택\"\r\n                                            options={posblAtchFileNumberOptions}\r\n                                            setValue={boardDetail.posblAtchFileNumber}\r\n                                            setter={(v) => setBoardDetail({ ...boardDetail, posblAtchFileNumber: v })}\r\n                                        /> */}\r\n                                        <select\r\n                                            id=\"posblAtchFileNumber\"\r\n                                            name=\"posblAtchFileNumber\"\r\n                                            title=\"첨부가능파일 숫자선택\"\r\n                                            onChange={(e) => setBoardDetail({ ...boardDetail, posblAtchFileNumber: e.target.value })}\r\n                                            value={boardDetail.posblAtchFileNumber}\r\n                                        >\r\n                                            {posblAtchFileNumberOptions.map((option, i) => {\r\n                                                return (\r\n                                                    <option value={option.value} key={option.value}>\r\n                                                        {option.label}\r\n                                                    </option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n\r\n                                    </label>\r\n                                </dd>\r\n                            </dl>\r\n\r\n                            {/* <!-- 버튼영역 --> */}\r\n                            <div className=\"board_btn_area\">\r\n                                <div className=\"left_col btn1\">\r\n                                    <button className=\"btn btn_skyblue_h46 w_100\"\r\n                                        onClick={() => updateBoard()}>저장</button>\r\n                                    {modeInfo.mode === CODE.MODE_MODIFY &&\r\n                                        <button className=\"btn btn_skyblue_h46 w_100\" onClick={(e) => {\r\n                                            // e.preventDefault();\r\n                                            deleteBoardArticle(boardDetail.bbsId);\r\n                                        }}>삭제</button>\r\n                                    }\r\n                                </div>\r\n\r\n                                <div className=\"right_col btn1\">\r\n                                    <Link to={URL.ADMIN_BOARD} className=\"btn btn_blue_h46 w_100\">목록</Link>\r\n                                </div>\r\n                            </div>\r\n                            {/* <!--// 버튼영역 --> */}\r\n                        </div>\r\n\r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default EgovAdminBoardEdit;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\template\\EgovAdminTemplateList.jsx",["355","356"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport * as EgovNet from 'context/egovFetch';\r\nimport URL from 'context/url';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavAdmin';\r\nimport EgovPaging from 'egov/common/EgovPaging';\r\n\r\nfunction EgovAdminTemplateList(props) {\r\n    console.group(\"EgovAdminTemplateList\");\r\n    console.log(\"[Start] EgovAdminTemplateList ------------------------------\");\r\n\r\n    const history = useHistory();\r\n    console.log(\"EgovAdminTemplateList [history] : \", history);\r\n    let searchCnd = '0';\r\n    let searchWrd = '';\r\n\r\n    const [searchCondition, setSearchCondition] = useState(history.location.state?.searchCondition || { pageIndex: 1, searchCnd: '0', searchWrd: '' });// 기존 조회에서 접근 했을 시 || 신규로 접근 했을 시\r\n    const [user, setUser] = useState({});\r\n    const [paginationInfo, setPaginationInfo] = useState({});\r\n\r\n    const [listTag, setListTag] = useState([]);\r\n\r\n    const retrieveList = (searchCondition) => {\r\n        console.groupCollapsed(\"EgovAdminTemplateList.retrieveList()\");\r\n\r\n        const retrieveListURL = '/cop/com/selectTemplateInfsAPI.do';\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(searchCondition)\r\n        }\r\n\r\n        EgovNet.requestFetch(retrieveListURL,\r\n            requestOptions,\r\n            (resp) => {\r\n                setPaginationInfo(resp.result.paginationInfo);\r\n                setUser(resp.result.user);\r\n\r\n                let mutListTag = [];\r\n                listTag.push(<p className=\"no_data\">검색된 결과가 없습니다.</p>); // 게시판 목록 초기값\r\n\r\n                let resultCnt = resp.result.resultCnt * 1;\r\n                let currentPageNo = resp.result.paginationInfo.currentPageNo;\r\n                let pageSize = resp.result.paginationInfo.pageSize;\r\n\r\n                // 리스트 항목 구성\r\n                resp.result.resultList.forEach(function (item, index) {\r\n                    if (index === 0) mutListTag = []; // 목록 초기화\r\n                    var listIdx = resultCnt + 1 - ((currentPageNo - 1) * pageSize + index + 1);\r\n\r\n                    mutListTag.push(\r\n                        <Link to={{\r\n                            pathname: URL.ADMIN_TEMPLATE_MODIFY,\r\n                            state: {\r\n                                tmplatId: item.tmplatId,\r\n                                searchCondition: searchCondition\r\n                            }\r\n                        }} key={listIdx} className=\"list_item\" >\r\n                            <div>{listIdx}</div>\r\n                            <div>{item.tmplatNm}</div>\r\n                            <div>{item.tmplatSeCodeNm}</div>\r\n                            <div className=\"al\">{item.tmplatCours}</div>\r\n                            {item.useAt === \"Y\" && <div>사용</div>}\r\n                            {item.useAt !== \"Y\" && <div>사용안함</div>}\r\n                            <div>{item.frstRegisterPnttm}</div>\r\n                        </Link>\r\n                    );\r\n                });\r\n                setListTag(mutListTag);\r\n            },\r\n            function (resp) {\r\n                console.log(\"err response : \", resp);\r\n            }\r\n        );\r\n        console.groupEnd(\"EgovNoticeList.retrieveList()\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        retrieveList(searchCondition);\r\n        return () => {\r\n        }\r\n    }, [searchCondition]);\r\n\r\n    console.log(\"------------------------------EgovAdminTemplateList [End]\");\r\n    console.groupEnd(\"EgovAdminTemplateList\");\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                        <li><Link to={URL.MAIN} className=\"home\">Home</Link></li>\r\n                        <li><Link to={URL.ADMIN}>사이트관리</Link></li>\r\n                        <li>게시판 템플릿 관리</li>\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav></EgovLeftNav>\r\n                    {/* <!--// Navigation --> */}\r\n\r\n                    <div className=\"contents TEMPLATE_LIST\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <div className=\"top_tit\">\r\n                            <h1 className=\"tit_1\">사이트관리</h1>\r\n                        </div>\r\n\r\n                        <h2 className=\"tit_2\">게시판 템플릿 관리</h2>\r\n\r\n                        {/* <!-- 검색조건 --> */}\r\n                        <div className=\"condition\">\r\n                            <ul>\r\n                                <li className=\"third_1 L\">\r\n                                    <label className=\"f_select\" htmlFor=\"sel1\">\r\n                                        <select name=\"searchCnd\" id=\"sel1\" title=\"검색조건\" defaultValue={searchCondition.searchCnd}\r\n                                            onChange={e => {\r\n                                                searchCnd = e.target.value;\r\n                                            }}\r\n                                        >\r\n                                            <option value=\"0\">템플릿명</option>\r\n                                            <option value=\"1\">템플릿구분</option>\r\n                                        </select>\r\n                                    </label>\r\n                                </li>\r\n                                <li className=\"third_2 R\">\r\n                                    {/* <!-- 210806 수정 --> */}\r\n                                    <span className=\"f_search w_500\">\r\n                                        <input type=\"text\" name=\"\" defaultValue={searchCondition.searchWrd} placeholder=\"\"\r\n                                            onChange={e => {\r\n                                                searchWrd = e.target.value;\r\n                                            }}\r\n                                        />\r\n                                        <button type=\"button\" onClick={e => {\r\n                                            setSearchCondition({ ...searchCondition, pageIndex: 1, searchCnd: searchCnd, searchWrd: searchWrd });\r\n                                        }}>조회</button>\r\n                                    </span>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to={URL.ADMIN_TEMPLATE_CREATE} className=\"btn btn_blue_h46 pd35\">등록</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        {/* <!--// 검색조건 --> */}\r\n\r\n                        {/* <!-- 게시판목록 --> */}\r\n                        <div className=\"board_list BRD004\">\r\n                            <div className=\"head\">\r\n                                <span>번호</span>\r\n                                <span>템플릿명</span>\r\n                                <span>템플릿구분</span>\r\n                                <span>템플릿경로</span>\r\n                                <span>사용여부</span>\r\n                                <span>등록일자</span>\r\n                            </div>\r\n                            <div className=\"result\">\r\n                                {listTag}\r\n                            </div>\r\n                        </div>\r\n                        {/* <!--// 게시판목록 --> */}\r\n\r\n                        <div className=\"board_bot\">\r\n                            {/* <!-- Paging --> */}\r\n                            <EgovPaging pagination={paginationInfo} moveToPage={passedPage => {\r\n                                setSearchCondition({ ...searchCondition, pageIndex: passedPage });\r\n                            }}></EgovPaging>\r\n                            {/* <!--/ Paging --> */}\r\n                        </div>\r\n\r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EgovAdminTemplateList;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\usage\\EgovAdminUsageEdit.jsx",["357","358","359","360","361","362","363"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport * as EgovNet from 'context/egovFetch';\r\nimport URL from 'context/url';\r\nimport CODE from 'context/code';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavAdmin';\r\nimport EgovRadioButtonGroup from 'egov/common/EgovRadioButtonGroup';\r\nimport EgovSelect from 'egov/common/EgovSelect';\r\n\r\nfunction EgovAdminUsageEdit(props) {\r\n    console.group(\"EgovAdminUsageEdit\");\r\n    console.log(\"[Start] EgovAdminUsageEdit ------------------------------\");\r\n    console.log(\"EgovAdminUsageEdit [props] : \", props);\r\n\r\n    const history = useHistory();\r\n    console.log(\"EgovAdminUsageEdit [history] : \", history);\r\n\r\n    const bbsId = history.location.state?.bbsId || \"\";\r\n    const trgetId = history.location.state?.trgetId || \"SYSTEM_DEFAULT_BOARD\";\r\n    const searchCondition = history.location.state?.searchCondition;\r\n\r\n    const [modeInfo, setModeInfo] = useState({ mode: props.mode });\r\n    const [boardDetail, setBoardDetail] = useState({});\r\n    const [notUsedBdMstrList, setNotUsedBdMstrList] = useState([]);\r\n\r\n    const [useAtRadioGroup, setUseAtRadioGroup] = useState([{ value: \"Y\", label: \"사용\" }, { value: \"N\", label: \"미사용\" }])\r\n\r\n    const initMode = () => {\r\n        switch (props.mode) {\r\n            case CODE.MODE_CREATE:\r\n                setModeInfo({\r\n                    ...modeInfo,\r\n                    modeTitle: \"등록\",\r\n                    editURL: '/cop/com/insertBBSUseInfAPI.do'\r\n                });\r\n                break;\r\n\r\n            case CODE.MODE_MODIFY:\r\n                setModeInfo({\r\n                    ...modeInfo,\r\n                    modeTitle: \"수정\",\r\n                    editURL: '/cop/com/updateBBSUseInfAPI.do'\r\n                });\r\n                break;\r\n        }\r\n        retrieveDetail();\r\n    }\r\n\r\n    const retrieveDetail = () => {\r\n        if (modeInfo.mode === CODE.MODE_CREATE) {// 등록모드일 경우 사용중이지 않은 MasterBoard만 조회\r\n            \r\n            setBoardDetail({\r\n                useAt: \"Y\",                         //사용여부 초기값\r\n                trgetId: \"SYSTEM_DEFAULT_BOARD\"     //시스템 targetId default값\r\n            });\r\n\r\n            //새로 생성된 MstrBoard 리스트 조회\r\n            const retrieveMasterBdURL = '/cop/com/selectNotUsedBdMstrList.do';\r\n\r\n            const requestOptions = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                })\r\n            }\r\n            EgovNet.requestFetch(retrieveMasterBdURL,\r\n                requestOptions,\r\n                function (resp) {\r\n                    setNotUsedBdMstrList(resp.result.resultList);\r\n                }\r\n            );\r\n\r\n            return;\r\n        }\r\n\r\n        const retrieveDetailURL = '/cop/com/selectBBSUseInfAPI.do';\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                bbsId: bbsId,\r\n                trgetId: trgetId\r\n            })\r\n        }\r\n        EgovNet.requestFetch(retrieveDetailURL,\r\n            requestOptions,\r\n            function (resp) {\r\n                // 수정모드일 경우 조회값 세팅\r\n                if (modeInfo.mode === CODE.MODE_MODIFY) {\r\n                    setBoardDetail(resp.result.bdUseVO);\r\n                    setNotUsedBdMstrList(resp.result.resultList);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    const updateBoard = () => {\r\n        const formData = new FormData();\r\n        for (let key in boardDetail) {\r\n            formData.append(key, boardDetail[key]);\r\n            console.log(\"boardDetail [%s] \", key, boardDetail[key]);\r\n        }\r\n\r\n        if (formValidator(formData)) {\r\n            const requestOptions = {\r\n                method: \"POST\",\r\n                headers: {\r\n                },\r\n                body: formData\r\n            }\r\n\r\n            EgovNet.requestFetch(modeInfo.editURL,\r\n                requestOptions,\r\n                (resp) => {\r\n                    if (Number(resp.resultCode) === Number(CODE.RCV_SUCCESS)) {\r\n                        history.push({ pathname: URL.ADMIN_USAGE });\r\n                    } else {\r\n                        alert(\"ERR : \" + resp.resultMessage);\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    const formValidator = (formData) => {\r\n        if (formData.get('bbsId') === null || formData.get('bbsId') === \"\") {\r\n            alert(\"게시판명은 필수 값입니다.\");\r\n            return false;\r\n        }\r\n        if (modeInfo.mode === CODE.MODE_CREATE) {\r\n            if (formData.get('trgetType') === null || formData.get('trgetType') === \"\") {\r\n                alert(\"커뮤니티/동호회명은 필수 값입니다.\");\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    useEffect(() => {\r\n        initMode();\r\n        return () => {\r\n        }\r\n    }, []);\r\n\r\n    console.log(\"------------------------------EgovAdminUsageEdit [End]\");\r\n    console.groupEnd(\"EgovAdminUsageEdit\");\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                        <li><a className=\"home\" href=\"\">Home</a></li>\r\n                        <li><a href=\"\">사이트관리</a></li>\r\n                        <li>게시판사용관리</li>\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav></EgovLeftNav>\r\n                    {/* <!--// Navigation --> */}\r\n\r\n                    <div className=\"contents BOARD_USE_LIST\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <div className=\"top_tit\">\r\n                            <h1 className=\"tit_1\">사이트관리</h1>\r\n                        </div>\r\n\r\n                        <h2 className=\"tit_2\">게시판사용 관리</h2>\r\n\r\n                        <div className=\"board_view2\">\r\n                            {/* 등록일때 일때 */}\r\n                            {modeInfo.mode === CODE.MODE_CREATE && <>\r\n                                <dl>\r\n                                    <dt>게시판명<span className=\"req\">필수</span></dt>\r\n                                    <dd>\r\n                                        <label className=\"f_select \" htmlFor=\"bbsId\">\r\n                                            <select\r\n                                                id=\"bbsId\"\r\n                                                name=\"bbsId\"\r\n                                                title=\"게시판선택\"\r\n                                                onChange={(e) => {\r\n                                                    let index = e.nativeEvent.target.selectedIndex;\r\n                                                    let label = e.nativeEvent.target[index].text;\r\n                                                    console.log(\"bbsId onChange : \", e.nativeEvent);\r\n                                                    setBoardDetail({ ...boardDetail, bbsId: e.target.value, bbsNm: label });\r\n                                                }}\r\n                                                value={boardDetail.bbsId}\r\n                                            >\r\n                                                <option value=\"\">선택하세요</option>\r\n                                                {notUsedBdMstrList.map((option, i) => {\r\n                                                    console.log(\"notUsedBdMstrList option : \", option);\r\n                                                    return (\r\n                                                        <option value={option.bbsId} key={option.bbsId}>\r\n                                                            {option.bbsNm}\r\n                                                        </option>\r\n                                                    )\r\n                                                })}\r\n                                            </select>\r\n                                        </label>\r\n                                    </dd>\r\n                                </dl>\r\n                                <dl>\r\n                                    <dt>커뮤니티/동호회명<span className=\"req\">필수</span></dt>\r\n                                    <dd>\r\n                                        <label className=\"f_select \" htmlFor=\"trgetType\">\r\n                                            <select id=\"trgetType\" name=\"trgetType\" className=\"select\" title=\"\"\r\n                                                onChange={(e) => setBoardDetail({ ...boardDetail, trgetType: e.target.value, trgetId: \"SYSTEM_DEFAULT_BOARD\" })}>\r\n                                                <option value=\"\">선택하세요</option>\r\n                                                <option value=\"SYSTEM\">시스템 활용</option>\r\n                                            </select>\r\n                                        </label>\r\n                                    </dd>\r\n                                </dl>\r\n                            </>}\r\n\r\n                            {/* 수정/조회 일때 */}\r\n                            {modeInfo.mode === CODE.MODE_MODIFY && <>\r\n                                <dl>\r\n                                    <dt><label htmlFor=\"\">게시판명</label></dt>\r\n                                    <dd>\r\n                                        {boardDetail && boardDetail.bbsNm}\r\n                                    </dd>\r\n                                </dl>\r\n                                <dl>\r\n                                    <dt><label htmlFor=\"\">커뮤니티/동호회명</label></dt>\r\n                                    <dd>\r\n                                        {boardDetail && boardDetail.cmmntyNm}\r\n                                    </dd>\r\n                                </dl>\r\n                                <dl>\r\n                                    <dt><label htmlFor=\"\">사용여부</label><span className=\"req\">필수</span></dt>\r\n                                    <dd>\r\n                                        <EgovRadioButtonGroup\r\n                                            name=\"useAt\"\r\n                                            radioGroup={useAtRadioGroup}\r\n                                            setValue={boardDetail.useAt}\r\n                                            setter={(v) => setBoardDetail({ ...boardDetail, useAt: v })} />\r\n                                    </dd>\r\n                                </dl>\r\n                                <dl>\r\n                                    <dt>제공 URL</dt>\r\n                                    <dd>\r\n                                        <Link\r\n                                            to={{\r\n                                                pathname: URL.INFORM_NOTICE,\r\n                                                state: {\r\n                                                    bbsId: boardDetail.bbsId,\r\n                                                }\r\n                                            }}\r\n                                        >\r\n                                            {`${URL.INFORM_NOTICE}`}\r\n                                        </Link>\r\n\r\n                                    </dd>\r\n                                </dl>\r\n                            </>}\r\n\r\n                            {/* <!-- 버튼영역 --> */}\r\n                            <div className=\"board_btn_area\">\r\n                                <div className=\"left_col btn1\">\r\n                                </div>\r\n\r\n                                <div className=\"right_col btn1\">\r\n                                    <button className=\"btn btn_blue_h46 w_100\"\r\n                                        onClick={() => updateBoard()} > 저장</button>\r\n                                    <Link to={URL.ADMIN_USAGE} className=\"btn btn_blue_h46 w_100\">목록</Link>\r\n                                </div>\r\n                            </div>\r\n                            {/* <!--// 버튼영역 --> */}\r\n                        </div>\r\n\r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default EgovAdminUsageEdit;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\schedule\\EgovAdminScheduleEdit.jsx",["364","365","366","367","368"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport * as EgovNet from 'context/egovFetch';\r\nimport URL from 'context/url';\r\nimport CODE from 'context/code';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavAdmin';\r\nimport EgovAttachFile from 'egov/common/EgovAttachFile';\r\nimport EgovRadioButtonGroup from 'egov/common/EgovRadioButtonGroup';\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nfunction EgovAdminScheduleEdit(props) {\r\n    console.group(\"EgovAdminScheduleEdit\");\r\n    console.log(\"[Start] EgovAdminScheduleEdit ------------------------------\");\r\n    console.log(\"EgovAdminScheduleEdit [props] : \", props);\r\n\r\n    const history = useHistory();\r\n    console.log(\"EgovAdminScheduleEdit [history] : \", history);\r\n\r\n    const reptitSeCodeRadioGroup = [{ value: \"1\", label: \"당일\" }, { value: \"2\", label: \"반복\" }, { value: \"3\", label: \"연속\" }];\r\n\r\n    const [modeInfo, setModeInfo] = useState({ mode: props.mode });\r\n    const [scheduleDetail, setScheduleDetail] = useState({ schdulDeptName: \"관리자부서\", schdulChargerName: \"관리자\", schdulKindCode: 2, reptitSeCode: \"1\", startDate: new Date(), endDate: new Date() });\r\n    const [boardAttachFiles, setBoardAttachFiles] = useState();\r\n    const [user, setUser] = useState({});\r\n\r\n    const [schdulBgndeHH, setSchdulBgndeHH] = useState();\r\n    const [schdulBgndeMM, setSchdulBgndeMM] = useState();\r\n    const [schdulEnddeHH, setSchdulEnddeHH] = useState();\r\n    const [schdulEnddeMM, setSchdulEnddeMM] = useState();\r\n\r\n\r\n    const initMode = () => {\r\n        switch (props.mode) {\r\n            case CODE.MODE_CREATE:\r\n                setModeInfo({\r\n                    ...modeInfo,\r\n                    modeTitle: \"등록\",\r\n                    editURL: '/cop/smt/sim/egovIndvdlSchdulManageRegistActorAPI.do'\r\n                });\r\n                break;\r\n            case CODE.MODE_MODIFY:\r\n                setModeInfo({\r\n                    ...modeInfo,\r\n                    modeTitle: \"수정\",\r\n                    editURL: '/cop/smt/sim/egovIndvdlSchdulManageModifyActorAPI.do'\r\n                });\r\n                break;\r\n        }\r\n        retrieveDetail();\r\n    }\r\n\r\n    const convertDate = (str) => {\r\n        let year = str.substring(0, 4);\r\n        let month = str.substring(4, 6);\r\n        let date = str.substring(6, 8);\r\n        let hour = str.substring(8, 10);\r\n        let minute = str.substring(10, 12);\r\n        return new Date(year, month - 1, date, hour, minute)\r\n    }\r\n\r\n    const retrieveDetail = () => {\r\n        if (modeInfo.mode === CODE.MODE_CREATE) {// 조회/등록이면 조회 안함\r\n            setScheduleDetail({\r\n                ...scheduleDetail,\r\n                schdulBgnde: getDateFourteenDigit(scheduleDetail.startDate),\r\n                schdulEndde: getDateFourteenDigit(scheduleDetail.endDate)\r\n            });\r\n            return;\r\n        }\r\n\r\n        const retrieveDetailURL = '/cop/smt/sim/egovIndvdlSchdulManageDetailAPI.do';\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                schdulId: history.location.state?.schdulId\r\n            })\r\n        }\r\n        EgovNet.requestFetch(retrieveDetailURL,\r\n            requestOptions,\r\n            function (resp) {\r\n                let rawScheduleDetail = resp.result.scheduleDetail;\r\n                //기본값 설정\r\n                setScheduleDetail({\r\n                    ...scheduleDetail,\r\n                    ...rawScheduleDetail,\r\n                    startDate: convertDate(rawScheduleDetail.schdulBgnde),\r\n                    endDate: convertDate(rawScheduleDetail.schdulEndde),\r\n                });\r\n                setUser(resp.result.user);\r\n                setBoardAttachFiles(resp.result.resultFiles);\r\n            }\r\n        );\r\n    }\r\n\r\n    const updateSchedule = () => {\r\n        const formData = new FormData();\r\n        for (let key in scheduleDetail) {\r\n            formData.append(key, scheduleDetail[key]);\r\n            console.log(\"scheduleDetail [%s] \", key, scheduleDetail[key]);\r\n        }\r\n\r\n        if (formValidator(formData)) {\r\n            const requestOptions = {\r\n                method: \"POST\",\r\n                headers: {\r\n                },\r\n                body: formData\r\n            }\r\n\r\n            EgovNet.requestFetch(modeInfo.editURL,\r\n                requestOptions,\r\n                (resp) => {\r\n                    if (Number(resp.resultCode) === Number(CODE.RCV_SUCCESS)) {\r\n                        history.push({ pathname: URL.ADMIN_SCHEDULE });\r\n                    } else {\r\n                        alert(\"ERR : \" + resp.resultMessage);\r\n                    }\r\n                }\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    const formValidator = (formData) => {\r\n        if (formData.get('schdulSe') === null || formData.get('schdulSe') === \"\") {\r\n            alert(\"일정구분은 필수 값입니다.\");\r\n            return false;\r\n        }\r\n        if (formData.get('schdulIpcrCode') === null || formData.get('schdulIpcrCode') === \"\") {\r\n            alert(\"중요도은 필수 값입니다.\");\r\n            return false;\r\n        }\r\n        if (formData.get('reptitSeCode') === null ||formData.get('reptitSeCode') === \"\") {\r\n            alert(\"반복구분은 필수 값입니다.\");\r\n            return false;\r\n        }\r\n        if (formData.get('schdulBgnde') > formData.get('schdulEndde')) {\r\n            alert(\"종료일시는 시작일시보다 앞 설 수 없습니다.\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    const getDateFourteenDigit = (date) => {\r\n        return getYYYYMMDD(date).toString() + makeTwoDigit(date.getHours()) + makeTwoDigit(date.getMinutes()) + makeTwoDigit(date.getSeconds());\r\n    }\r\n    const getYYYYMMDD = (date) => {\r\n        return date.getFullYear().toString() + makeTwoDigit(Number(date.getMonth() + 1)) + makeTwoDigit(date.getDate());\r\n    }\r\n    const makeTwoDigit = (number) => {\r\n        return number < 10 ? \"0\" + number : number.toString();\r\n    }\r\n\r\n    useEffect(function () {\r\n        initMode();\r\n        return function () {\r\n        }\r\n    }, []);\r\n\r\n    console.log(\"------------------------------EgovAdminScheduleEdit [End]\");\r\n    console.groupEnd(\"EgovAdminScheduleEdit\");\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                        <li><Link to={URL.MAIN} className=\"home\">Home</Link></li>\r\n                        <li><Link to={URL.ADMIN}>사이트관리</Link></li>\r\n                        <li>일정관리</li>\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav></EgovLeftNav>\r\n                    {/* <!--// Navigation --> */}\r\n\r\n                    <div className=\"contents SITE_SCHDULE_REG\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <div className=\"top_tit\">\r\n                            <h1 className=\"tit_1\">사이트관리</h1>\r\n                        </div>\r\n\r\n                        <h2 className=\"tit_2\">일정관리 상세보기</h2>\r\n\r\n                        {/* <!-- 게시판 상세보기 --> */}\r\n                        <div className=\"board_view2\">\r\n                            <dl>\r\n                                <dt>일정구분<span className=\"req\">필수</span></dt>\r\n                                <dd>\r\n                                    <label className=\"f_select w_130\" htmlFor=\"schdulSe\">\r\n                                        <select id=\"schdulSe\" name=\"schdulSe\" title=\"일정구분\"\r\n                                            value={scheduleDetail.schdulSe}\r\n                                            onChange={(e) => setScheduleDetail({ ...scheduleDetail, schdulSe: e.target.value })}>\r\n                                            <option value=\"\">선택</option>\r\n                                            <option value=\"1\">회의</option>\r\n                                            <option value=\"2\">세미나</option>\r\n                                            <option value=\"3\">강의</option>\r\n                                            <option value=\"4\">교육</option>\r\n                                            <option value=\"5\">기타</option>\r\n                                        </select>\r\n                                    </label>\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>중요도<span className=\"req\">필수</span></dt>\r\n                                <dd>\r\n                                    <label className=\"f_select w_130\" htmlFor=\"schdulIpcrCode\">\r\n                                        <select id=\"schdulIpcrCode\" name=\"schdulIpcrCode\" title=\"중요도\"\r\n                                            value={scheduleDetail.schdulIpcrCode}\r\n                                            onChange={(e) => setScheduleDetail({ ...scheduleDetail, schdulIpcrCode: e.target.value })}>\r\n                                            <option value=\"\">선택</option>\r\n                                            <option value=\"A\">높음</option>\r\n                                            <option value=\"B\">보통</option>\r\n                                            <option value=\"C\">낮음</option>\r\n                                        </select>\r\n                                    </label>\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt><label htmlFor=\"schdulDeptName\">부서</label><span className=\"req\">필수</span></dt>\r\n                                <dd>\r\n                                    <input className=\"f_input2 w_full\" type=\"text\" name=\"schdulDeptName\" title=\"부서\" id=\"schdulDeptName\"\r\n                                        value=\"관리자부서\" readOnly\r\n                                    />\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt><label htmlFor=\"schdulNm\">일정명</label><span className=\"req\">필수</span></dt>\r\n                                <dd>\r\n                                    <input className=\"f_input2 w_full\" type=\"text\" name=\"schdulNm\" title=\"부서\" id=\"schdulNm\" placeholder=\"일정 테스트\"\r\n                                        defaultValue={scheduleDetail.schdulNm}\r\n                                        onChange={(e) => setScheduleDetail({ ...scheduleDetail, schdulNm: e.target.value })} />\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt><label htmlFor=\"schdulCn\">일정내용</label><span className=\"req\">필수</span></dt>\r\n                                <dd>\r\n                                    <textarea className=\"f_txtar w_full h_100\" name=\"schdulCn\" id=\"schdulCn\" cols=\"30\" rows=\"10\" placeholder=\"일정내용\"\r\n                                        defaultValue={scheduleDetail.schdulCn}\r\n                                        onChange={(e) => setScheduleDetail({ ...scheduleDetail, schdulCn: e.target.value })}\r\n                                    ></textarea>\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>반복구분<span className=\"req\">필수</span></dt>\r\n                                <dd>\r\n                                    <EgovRadioButtonGroup\r\n                                        name=\"reptitSeCode\"\r\n                                        radioGroup={reptitSeCodeRadioGroup}\r\n                                        setValue={scheduleDetail.reptitSeCode}\r\n                                        setter={(v) => setScheduleDetail({ ...scheduleDetail, reptitSeCode: v })} />\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt>날짜/시간<span className=\"req\">필수</span></dt>\r\n                                <dd className=\"datetime\">\r\n                                    <span className=\"line_break\">\r\n                                        <DatePicker\r\n                                            selected={scheduleDetail.startDate}\r\n                                            name=\"schdulBgnde\"\r\n                                            className=\"f_input\"\r\n                                            dateFormat=\"yyyy-MM-dd HH:mm\"\r\n                                            showTimeInput\r\n                                            onChange={(date) => {\r\n                                                console.log(\"setStartDate : \", date);\r\n                                                setScheduleDetail({ ...scheduleDetail, schdulBgnde: getDateFourteenDigit(date), schdulBgndeYYYMMDD: getYYYYMMDD(date), schdulBgndeHH: date.getHours(), schdulBgndeMM: date.getMinutes(), startDate: date });\r\n                                                setSchdulBgndeHH(date.getHours());\r\n                                                setSchdulBgndeMM(date.getMinutes());\r\n                                            }} />\r\n                                        <input type=\"hidden\" name=\"schdulBgndeHH\" defaultValue={schdulBgndeHH} readOnly />\r\n                                        <input type=\"hidden\" name=\"schdulBgndeMM\" defaultValue={schdulBgndeMM} readOnly />\r\n                                        <span className=\"f_inn_txt\">~</span>\r\n                                    </span>\r\n                                    <span className=\"line_break\">\r\n                                        <DatePicker\r\n                                            selected={scheduleDetail.endDate}\r\n                                            name=\"schdulEndde\"\r\n                                            className=\"f_input\"\r\n                                            dateFormat=\"yyyy-MM-dd HH:mm\"\r\n                                            showTimeInput\r\n                                            minDate={scheduleDetail.startDate}\r\n                                            onChange={(date) => {\r\n                                                console.log(\"setEndDate: \", date);\r\n                                                setScheduleDetail({ ...scheduleDetail, schdulEndde: getDateFourteenDigit(date), schdulEnddeYYYMMDD: getYYYYMMDD(date), schdulEnddeHH: date.getHours(), schdulEnddeMM: date.getMinutes(), endDate: date });\r\n                                                setSchdulEnddeHH(date.getHours());\r\n                                                setSchdulEnddeMM(date.getMinutes());\r\n                                            }\r\n                                            } />\r\n                                        <input type=\"hidden\" name=\"schdulEnddeHH\" defaultValue={schdulEnddeHH} readOnly />\r\n                                        <input type=\"hidden\" name=\"schdulEnddeMM\" defaultValue={schdulEnddeMM} readOnly />\r\n                                    </span>\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt><label htmlFor=\"schdulChargerName\">담당자</label><span className=\"req\">필수</span></dt>\r\n                                <dd>\r\n                                    <input className=\"f_input2 w_full\" type=\"text\" name=\"schdulChargerName\" id=\"schdulChargerName\" defaultValue=\"관리자\" readOnly\r\n                                    />\r\n                                </dd>\r\n                            </dl>\r\n                            <EgovAttachFile\r\n                                fnChangeFile={(attachfile) => {\r\n                                    console.log(\"====>>> Changed attachfile file = \", attachfile);\r\n                                    setScheduleDetail({ ...scheduleDetail, file_1: attachfile });\r\n                                }}\r\n                                fnDeleteFile={(deletedFile) => {\r\n                                    console.log(\"====>>> Delete deletedFile = \", deletedFile);\r\n                                    setBoardAttachFiles(deletedFile);\r\n                                }}\r\n                                boardFiles={boardAttachFiles}\r\n                                mode={props.mode} />\r\n\r\n                            {/* <!-- 버튼영역 --> */}\r\n                            <div className=\"board_btn_area\">\r\n                                <div className=\"left_col btn1\">\r\n                                    <button className=\"btn btn_skyblue_h46 w_100\"\r\n                                        onClick={() => updateSchedule()}\r\n                                    > 저장</button>\r\n                                    <a href=\"\" className=\"btn btn_skyblue_h46 w_100\">삭제</a>\r\n                                </div>\r\n\r\n                                <div className=\"right_col btn1\">\r\n                                    <Link to={URL.ADMIN_SCHEDULE} className=\"btn btn_blue_h46 w_100\">목록</Link>\r\n                                </div>\r\n                            </div>\r\n                            {/* <!--// 버튼영역 --> */}\r\n                        </div>\r\n                        {/* <!-- 게시판 상세보기 --> */}\r\n\r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default EgovAdminScheduleEdit;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\board\\EgovAdminBoardList.jsx",["369","370","371","372"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport * as EgovNet from 'context/egovFetch';\r\nimport URL from 'context/url';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavAdmin';\r\nimport EgovPaging from 'egov/common/EgovPaging';\r\n\r\nfunction EgovAdminBoardList(props) {\r\n    console.group(\"EgovAdminBoardList\");\r\n    console.log(\"[Start] EgovAdminBoardList ------------------------------\");\r\n    console.log(\"EgovAdminBoardList [props] : \", props);\r\n\r\n    const history = useHistory();\r\n    console.log(\"EgovAdminBoardList [history] : \", history);\r\n\r\n    let searchCnd = '0';\r\n    let searchWrd = '';\r\n    const [searchCondition, setSearchCondition] = useState(history.location.state?.searchCondition || { pageIndex: 1, searchCnd: '0', searchWrd: '' });// 기존 조회에서 접근 했을 시 || 신규로 접근 했을 시\r\n    const [user, setUser] = useState({});\r\n    const [paginationInfo, setPaginationInfo] = useState({});\r\n\r\n    const [listTag, setListTag] = useState([]);\r\n\r\n    const retrieveList = (srchCnd) => {\r\n        console.groupCollapsed(\"EgovAdminBoardList.retrieveList()\");\r\n\r\n        const retrieveListURL = '/cop/bbs/selectBBSMasterInfsAPI.do';\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(srchCnd)\r\n        }\r\n\r\n        EgovNet.requestFetch(retrieveListURL,\r\n            requestOptions,\r\n            (resp) => {\r\n                setPaginationInfo(resp.result.paginationInfo);\r\n                setUser(resp.result.user);\r\n\r\n                let mutListTag = [];\r\n                listTag.push(<p className=\"no_data\">검색된 결과가 없습니다.</p>); // 게시판 목록 초기값\r\n\r\n                let resultCnt = resp.result.resultCnt * 1;\r\n                let currentPageNo = resp.result.paginationInfo.currentPageNo;\r\n                let pageSize = resp.result.paginationInfo.pageSize;\r\n\r\n                // 리스트 항목 구성\r\n                resp.result.resultList.forEach(function (item, index) {\r\n                    if (index === 0) mutListTag = []; // 목록 초기화\r\n                    let listIdx = resultCnt + 1 - ((currentPageNo - 1) * pageSize + index + 1);\r\n\r\n                    mutListTag.push(\r\n                        <Link\r\n                            to={{\r\n                                pathname: URL.ADMIN_BOARD_MODIFY,\r\n                                state: {\r\n                                    bbsId: item.bbsId,\r\n                                    searchCondition: searchCondition\r\n                                }\r\n                            }}\r\n                            key={listIdx}\r\n                            className=\"list_item\">\r\n                            <div>{listIdx}</div>\r\n                            <div>{item.bbsNm}</div>\r\n                            <div>{item.bbsTyCodeNm}</div>\r\n                            <div>{item.bbsAttrbCodeNm}</div>\r\n                            <div>{item.frstRegisterPnttm}</div>\r\n                            <div>{item.useAt === \"Y\" ? \"사용\" : \"사용안함\"}</div>\r\n                        </Link>\r\n                    );\r\n                });\r\n                setListTag(mutListTag);\r\n            },\r\n            function (resp) {\r\n                console.log(\"err response : \", resp);\r\n            }\r\n        );\r\n        console.groupEnd(\"EgovAdminBoardList.retrieveList()\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        retrieveList(searchCondition);\r\n        return () => {\r\n        }\r\n    }, []);\r\n\r\n    console.log(\"------------------------------EgovAdminBoardList [End]\");\r\n    console.groupEnd(\"EgovAdminBoardList\");\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                        <li><Link to={URL.MAIN} className=\"home\">Home</Link></li>\r\n                        <li><Link to={URL.ADMIN}>사이트관리</Link></li>\r\n                        <li>게시판생성 관리</li>\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav></EgovLeftNav>\r\n                    {/* <!--// Navigation --> */}\r\n\r\n                    <div className=\"contents BOARD_CREATE_LIST\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <div className=\"top_tit\">\r\n                            <h1 className=\"tit_1\">사이트관리</h1>\r\n                        </div>\r\n\r\n                        <h2 className=\"tit_2\">게시판생성 관리</h2>\r\n\r\n                        {/* <!-- 검색조건 --> */}\r\n                        <div className=\"condition\">\r\n                            <ul>\r\n                                <li className=\"third_1 L\">\r\n                                    <span className=\"lb\">검색유형선택</span>\r\n                                    <label className=\"f_select\" htmlFor=\"searchCnd\">\r\n                                        <select id=\"searchCnd\" name=\"searchCnd\" title=\"검색유형선력\"\r\n                                            onChange={(e) => setSearchCondition({ ...searchCondition, searchCnd: e.target.value })}\r\n                                        >\r\n                                            <option value=\"0\">게시판명</option>\r\n                                            <option value=\"1\">게시판유형</option>\r\n                                        </select>\r\n                                    </label>\r\n                                </li>\r\n                                <li className=\"third_2 R\">\r\n                                    <span className=\"lb\">검색어</span>\r\n                                    <span className=\"f_search w_400\">\r\n                                        <input type=\"text\" name=\"\" defaultValue={searchCondition && searchCondition.searchWrd} placeholder=\"\"\r\n                                            onChange={(e) => setSearchCondition({ ...searchCondition, searchWrd: e.target.value })}\r\n                                        />\r\n                                        <button type=\"button\"\r\n                                            onClick={() => retrieveList(searchCondition)}>조회</button>\r\n                                    </span>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to={URL.ADMIN_BOARD_CREATE} className=\"btn btn_blue_h46 pd35\">등록</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        {/* <!--// 검색조건 --> */}\r\n\r\n                        {/* <!-- 게시판목록 --> */}\r\n                        <div className=\"board_list BRD006\">\r\n                            <div className=\"head\">\r\n                                <span>번호</span>\r\n                                <span>게시판명</span>\r\n                                <span>게시판유형</span>\r\n                                <span>게시판속성</span>\r\n                                <span>생성일</span>\r\n                                <span>사용여부</span>\r\n                            </div>\r\n                            <div className=\"result\">\r\n                                {listTag}\r\n                            </div>\r\n                        </div>\r\n                        {/* <!--// 게시판목록 --> */}\r\n\r\n                        <div className=\"board_bot\">\r\n                            {/* <!-- Paging --> */}\r\n                            <EgovPaging pagination={paginationInfo} moveToPage={passedPage => {\r\n                                setSearchCondition({ ...searchCondition, pageIndex: passedPage });\r\n                            }}></EgovPaging>\r\n                            {/* <!--/ Paging --> */}\r\n                        </div>\r\n\r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default EgovAdminBoardList;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\notice\\EgovAdminNoticeDetail.jsx",["373","374","375"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport * as EgovNet from 'context/egovFetch';\r\nimport URL from 'context/url';\r\nimport CODE from 'context/code';\r\nimport { NOTICE_BBS_ID } from 'context/config';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavAdmin';\r\nimport EgovAttachFile from 'egov/common/EgovAttachFile';\r\n\r\nfunction EgovAdminNoticeDetail(props) {\r\n    console.group(\"EgovAdminNoticeDetail\");\r\n    console.log(\"------------------------------\");\r\n    console.log(\"EgovAdminNoticeDetail [props] : \", props);\r\n\r\n    const history = useHistory();\r\n    console.log(\"EgovAdminNoticeDetail [history] : \", history);\r\n\r\n    const bbsId = history.location.state.bbsId || NOTICE_BBS_ID;\r\n    const nttId = history.location.state.nttId;\r\n    const searchCondition = history.location.state.searchCondition;\r\n\r\n    const [masterBoard, setMasterBoard] = useState({});\r\n    const [user, setUser] = useState({});\r\n    const [boardDetail, setBoardDetail] = useState({});\r\n    const [boardAttachFiles, setBoardAttachFiles] = useState();\r\n\r\n    const retrieveDetail = () => {\r\n        const retrieveDetailURL = '/cop/bbs/selectBoardArticleAPI.do';\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                bbsId: bbsId,\r\n                nttId: nttId\r\n            })\r\n        }\r\n        EgovNet.requestFetch(retrieveDetailURL,\r\n            requestOptions,\r\n            function (resp) {\r\n                setMasterBoard(resp.result.brdMstrVO);\r\n                setBoardDetail(resp.result.boardVO);\r\n                setUser(resp.result.user);\r\n                setBoardAttachFiles(resp.result.resultFiles);\r\n            }\r\n        );\r\n    }\r\n\r\n    const onClickDeleteBoardArticle = (bbsId, nttId) => {\r\n        const deleteBoardURL = \"/cop/bbs/deleteBoardArticleAPI.do\";\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                bbsId: bbsId,\r\n                nttId: nttId\r\n            })\r\n        }\r\n\r\n        EgovNet.requestFetch(deleteBoardURL,\r\n            requestOptions,\r\n            (resp) => {\r\n                console.log(\"====>>> board delete= \", resp);\r\n                if (Number(resp.resultCode) === Number(CODE.RCV_SUCCESS)) {\r\n                    //window.location.href = URL.ADMIN_NOTICE + qs.stringify(query, { addQueryPrefix: true });\r\n                    alert(\"게시글이 삭제되었습니다.\")\r\n                    history.push(URL.ADMIN_NOTICE);\r\n                } else {\r\n                    alert(\"ERR : \" + resp.resultMessage);\r\n                }\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    useEffect(function () {\r\n        retrieveDetail();\r\n        return function () {\r\n        }\r\n    }, []);\r\n    \r\n    console.groupEnd(\"EgovAdminNoticeDetail\");\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                        <li><Link to={URL.MAIN} className=\"home\">Home</Link></li>\r\n                        <li><Link to={URL.ADMIN}>사이트관리</Link></li>\r\n                        <li>{masterBoard && masterBoard.bbsNm}</li>\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav></EgovLeftNav>\r\n                    {/* <!--// Navigation --> */}\r\n\r\n                    <div className=\"contents NOTICE_VIEW\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <div className=\"top_tit\">\r\n                            <h1 className=\"tit_1\">사이트관리</h1>\r\n                        </div>\r\n\r\n                        <h2 className=\"tit_2\">{masterBoard && masterBoard.bbsNm}</h2>\r\n\r\n                        {/* <!-- 게시판 상세보기 --> */}\r\n                        <div className=\"board_view\">\r\n                            <div className=\"board_view_top\">\r\n                                <div className=\"tit\">{boardDetail && boardDetail.nttSj}</div>\r\n                                <div className=\"info\">\r\n                                    <dl>\r\n                                        <dt>작성자</dt>\r\n                                        <dd>{boardDetail && boardDetail.frstRegisterNm}</dd>\r\n                                    </dl>\r\n                                    <dl>\r\n                                        <dt>작성일</dt>\r\n                                        <dd>{boardDetail && boardDetail.frstRegisterPnttm}</dd>\r\n                                    </dl>\r\n                                    <dl>\r\n                                        <dt>조회수</dt>\r\n                                        <dd>{boardDetail && boardDetail.inqireCo}</dd>\r\n                                    </dl>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"board_article\">\r\n                                <textarea name=\"\" cols=\"30\" rows=\"10\" readOnly=\"readonly\" defaultValue={boardDetail && boardDetail.nttCn}></textarea>\r\n                            </div>\r\n                            <div className=\"board_attach\">\r\n                                <EgovAttachFile boardFiles={boardAttachFiles} />\r\n                            </div>\r\n\r\n\r\n                            <div className=\"board_btn_area\">\r\n                                <div className=\"left_col btn3\">\r\n                                    <Link to={{\r\n                                        pathname: URL.ADMIN_NOTICE_MODIFY,\r\n                                        state: {\r\n                                            nttId: nttId,\r\n                                            bbsId: bbsId\r\n                                        }\r\n                                    }} className=\"btn btn_skyblue_h46 w_100\">수정</Link>\r\n                                    <a href=\"\" className=\"btn btn_skyblue_h46 w_100\" onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        onClickDeleteBoardArticle(boardDetail.bbsId, boardDetail.nttId);\r\n                                    }}>삭제</a>\r\n                                    <Link to={{\r\n                                        pathname: URL.ADMIN_NOTICE_REPLY,\r\n                                        state: {\r\n                                            nttId: nttId,\r\n                                            bbsId: bbsId\r\n                                        }\r\n                                    }} className=\"btn btn_skyblue_h46 w_100\">답글작성</Link>\r\n                                </div>\r\n\r\n                                <div className=\"right_col btn1\">\r\n                                    <Link to={{\r\n                                        pathname: URL.ADMIN_NOTICE,\r\n                                        state: {\r\n                                            nttId: nttId,\r\n                                            bbsId: bbsId,\r\n                                            searchCondition: searchCondition\r\n                                        }\r\n                                    }} className=\"btn btn_blue_h46 w_100\">목록</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* <!-- 게시판 상세보기 --> */}\r\n\r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default EgovAdminNoticeDetail;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\notice\\EgovAdminNoticeEdit.jsx",["376","377","378"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport * as EgovNet from 'context/egovFetch';\r\nimport URL from 'context/url';\r\nimport CODE from 'context/code';\r\nimport { NOTICE_BBS_ID } from 'context/config';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavAdmin';\r\nimport EgovAttachFile from 'egov/common/EgovAttachFile';\r\n\r\nfunction EgovAdminNoticeEdit(props) {\r\n    console.group(\"EgovAdminNoticeEdit\");\r\n    console.log(\"------------------------------\");\r\n    console.log(\"EgovAdminNoticeEdit [props] : \", props);\r\n\r\n    const history = useHistory();\r\n    console.log(\"EgovAdminNoticeEdit [history] : \", history);\r\n\r\n    const bbsId = history.location.state?.bbsId || NOTICE_BBS_ID;\r\n    const nttId = history.location.state?.nttId || \"\";\r\n\r\n    const [modeInfo, setModeInfo] = useState({ mode: props.mode });\r\n    const [masterBoard, setMasterBoard] = useState({});\r\n    const [boardDetail, setBoardDetail] = useState({ nttSj: '', nttCn: '' });\r\n    const [boardAttachFiles, setBoardAttachFiles] = useState();\r\n\r\n    const intMode = () => {\r\n        switch (props.mode) {\r\n            case CODE.MODE_CREATE:\r\n                setModeInfo({\r\n                    ...modeInfo,\r\n                    modeTitle: \"등록\",\r\n                    editURL: '/cop/bbs/insertBoardArticleAPI.do'\r\n                });\r\n                break;\r\n            case CODE.MODE_MODIFY:\r\n                setModeInfo({\r\n                    ...modeInfo,\r\n                    modeTitle: \"수정\",\r\n                    editURL: '/cop/bbs/updateBoardArticleAPI.do'\r\n                });\r\n                break;\r\n            case CODE.MODE_REPLY:\r\n                setModeInfo({\r\n                    ...modeInfo,\r\n                    modeTitle: \"답글쓰기\",\r\n                    editURL: '/cop/bbs/replyBoardArticleAPI.do'\r\n                });\r\n                break;\r\n        }\r\n        retrieveDetail();\r\n    }\r\n\r\n    const retrieveDetail = () => {\r\n\r\n        if (modeInfo.mode === CODE.MODE_CREATE) {// 등록이면 조회 안함\r\n            setBoardDetail({ bbsId: bbsId, nttSj: \"\", nttCn: \"\" });\r\n            return;\r\n        }\r\n\r\n        const retrieveDetailURL = '/cop/bbs/selectBoardArticleAPI.do';\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                bbsId: bbsId,\r\n                nttId: nttId\r\n            })\r\n        }\r\n        EgovNet.requestFetch(retrieveDetailURL,\r\n            requestOptions,\r\n            function (resp) {\r\n                setMasterBoard(resp.result.brdMstrVO);\r\n                \r\n                // 초기 boardDetail 설정 => ( 답글 / 수정 ) 모드일때...\r\n                if (modeInfo.mode === CODE.MODE_REPLY) {// 답글모드이면 RE: 붙여줌 \r\n                    setBoardDetail({ ...resp.result.boardVO, nttSj: \"RE: \" + resp.result.boardVO.nttSj, nttCn: \"\" , inqireCo: 0, atchFileId: \"\"});\r\n                }\r\n                if (modeInfo.mode === CODE.MODE_MODIFY) {\r\n                    setBoardDetail(resp.result.boardVO);\r\n                }\r\n                \r\n                // 초기 setBoardAttachFiles 설정 => (수정) 모드 일때...\r\n                if (modeInfo.mode === CODE.MODE_MODIFY) {\r\n                    setBoardAttachFiles(resp.result.resultFiles);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    const updateBoard = () => {\r\n        const formData = new FormData();\r\n        for (let key in boardDetail) {\r\n            formData.append(key, boardDetail[key]);\r\n            //console.log(\"boardDetail [%s] \", key, boardDetail[key]);\r\n        }\r\n        \r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n\r\n            },\r\n            body: formData\r\n        }\r\n\r\n        EgovNet.requestFetch(modeInfo.editURL,\r\n            requestOptions,\r\n            (resp) => {\r\n                if (Number(resp.resultCode) === Number(CODE.RCV_SUCCESS)) {\r\n                    history.push({ pathname: URL.ADMIN_NOTICE });\r\n                } else {\r\n                    alert(\"ERR : \" + resp.resultMessage);\r\n                }\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    useEffect(function () {\r\n        intMode();\r\n        return function () {\r\n        }\r\n    }, []);\r\n\r\n    useEffect(function () {\r\n        console.log(\"boardDetail, boardAttachFiles: useEffect\");\r\n        return function () {\r\n        }\r\n    }, [boardDetail,boardAttachFiles]);\r\n\r\n    console.groupEnd(\"EgovAdminNoticeEdit\");\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                        <li><Link to={URL.MAIN} className=\"home\">Home</Link></li>\r\n                        <li><Link to={URL.ADMIN}>사이트관리</Link></li>\r\n                        <li>{masterBoard && masterBoard.bbsNm}</li>\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav></EgovLeftNav>\r\n                    {/* <!--// Navigation --> */}\r\n\r\n                    <div className=\"contents NOTICE_LIST\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <div className=\"top_tit\">\r\n                            <h1 className=\"tit_1\">사이트관리</h1>\r\n                        </div>\r\n\r\n                        <h2 className=\"tit_2\">{masterBoard && masterBoard.bbsNm} {modeInfo.modeTitle}</h2>\r\n\r\n                        <div className=\"board_view2\">\r\n                            <dl>\r\n                                <dt>\r\n                                    <label htmlFor=\"nttSj\">제목<span className=\"req\">필수</span></label>\r\n                                </dt>\r\n                                <dd>\r\n                                    <input className=\"f_input2 w_full\" id=\"nttSj\" name=\"nttSj\" type=\"text\"\r\n                                        defaultValue={boardDetail.nttSj}\r\n                                        onChange={e => setBoardDetail({ ...boardDetail, nttSj: e.target.value })}\r\n                                        maxLength=\"60\" />\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt><label htmlFor=\"nttCn\">내용 <span className=\"req\">필수</span></label></dt>\r\n                                <dd>\r\n                                    <textarea className=\"f_txtar w_full h_200\" id=\"nttCn\" name=\"nttCn\" cols=\"30\" rows=\"10\" placeholder=\"\"\r\n                                        defaultValue={boardDetail.nttCn}\r\n                                        onChange={e => setBoardDetail({ ...boardDetail, nttCn: e.target.value })}></textarea>\r\n                                </dd>\r\n                            </dl>\r\n                            {modeInfo?.mode !== CODE.MODE_REPLY &&\r\n                                <EgovAttachFile\r\n                                    fnChangeFile={(attachfile) => {\r\n                                        console.log(\"====>>> Changed attachfile file = \", attachfile);\r\n                                        setBoardDetail({ ...boardDetail, file_1: attachfile });\r\n                                    }}\r\n                                    fnDeleteFile={(deletedFile) => {\r\n                                        console.log(\"====>>> Delete deletedFile = \", deletedFile);\r\n                                        setBoardAttachFiles(deletedFile);\r\n                                    }}\r\n                                    boardFiles={boardAttachFiles}\r\n                                    mode={props.mode} />\r\n                            }\r\n\r\n                            {/* <!-- 버튼영역 --> */}\r\n                            <div className=\"board_btn_area\">\r\n                                <div className=\"left_col btn1\">\r\n                                    <a href=\"\" className=\"btn btn_skyblue_h46 w_100\"\r\n                                        onClick={(e) => {\r\n                                            e.preventDefault();\r\n                                            updateBoard();\r\n                                        }}>저장</a>\r\n                                </div>\r\n\r\n                                <div className=\"right_col btn1\">\r\n                                    <a href={URL.ADMIN_NOTICE} className=\"btn btn_blue_h46 w_100\">목록</a>\r\n                                </div>\r\n                            </div>\r\n                            {/* <!--// 버튼영역 --> */}\r\n                        </div>\r\n\r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EgovAdminNoticeEdit;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\notice\\EgovAdminNoticeList.jsx",["379"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport * as EgovNet from 'context/egovFetch';\r\nimport URL from 'context/url';\r\nimport { NOTICE_BBS_ID } from 'context/config';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavAdmin';\r\nimport EgovPaging from 'egov/common/EgovPaging';\r\n\r\nfunction EgovAdminNoticeList(props) {\r\n    console.group(\"EgovAdminNoticeList\");\r\n    console.log(\"[Start] EgovAdminNoticeList ------------------------------\");\r\n    console.log(\"EgovAdminNoticeList [props] : \", props);\r\n\r\n    const history = useHistory();\r\n    console.log(\"EgovAdminNoticeList [history] : \", history);\r\n\r\n    const bbsId = NOTICE_BBS_ID;\r\n    let searchCnd = '0';\r\n    let searchWrd = '';\r\n\r\n    const [searchCondition, setSearchCondition] = useState(history.location.state?.searchCondition || { bbsId: bbsId, pageIndex: 1, searchCnd: '0', searchWrd: '' });// 기존 조회에서 접근 했을 시 || 신규로 접근 했을 시\r\n    const [masterBoard, setMasterBoard] = useState({});\r\n    const [user, setUser] = useState({});\r\n    const [paginationInfo, setPaginationInfo] = useState({});\r\n\r\n    const [listTag, setListTag] = useState([]);\r\n\r\n    const retrieveList = (searchCondition) => {\r\n        console.groupCollapsed(\"EgovAdminNoticeList.retrieveList()\");\r\n\r\n        const retrieveListURL = '/cop/bbs/selectBoardListAPI.do';\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(searchCondition)\r\n        }\r\n\r\n        EgovNet.requestFetch(retrieveListURL,\r\n            requestOptions,\r\n            (resp) => {\r\n                setMasterBoard(resp.result.brdMstrVO);\r\n                setPaginationInfo(resp.result.paginationInfo);\r\n                setUser(resp.result.user);\r\n\r\n                let mutListTag = [];\r\n                mutListTag.push(<p className=\"no_data\">검색된 결과가 없습니다.</p>); // 게시판 목록 초기값\r\n\r\n                let resultCnt = resp.result.resultCnt * 1;\r\n                let currentPageNo = resp.result.paginationInfo.currentPageNo;\r\n                let pageSize = resp.result.paginationInfo.pageSize;\r\n\r\n                // 리스트 항목 구성\r\n                resp.result.resultList.forEach(function (item, index) {\r\n                    if (index === 0) mutListTag = []; // 목록 초기화\r\n                    var listIdx = resultCnt + 1 - ((currentPageNo - 1) * pageSize + index + 1);\r\n\r\n                    mutListTag.push(\r\n                        <Link to={{\r\n                            pathname: URL.ADMIN_NOTICE_DETAIL,\r\n                            state: {\r\n                                nttId: item.nttId,\r\n                                bbsId: item.bbsId,\r\n                                searchCondition: searchCondition\r\n                            }\r\n                        }} key={listIdx} className=\"list_item\" >\r\n                            <div>{listIdx}</div>\r\n                            {(item.replyLc * 1 ? true : false) &&\r\n                                <><div className=\"al reply\">\r\n                                    {item.nttSj}\r\n                                </div></>}\r\n                            {(item.replyLc * 1 ? false : true) &&\r\n                                <><div className=\"al\">\r\n                                    {item.nttSj}\r\n                                </div></>}\r\n                            <div>{item.frstRegisterNm}</div>\r\n                            <div>{item.frstRegisterPnttm}</div>\r\n                            <div>{item.inqireCo}</div>\r\n                        </Link>\r\n                    );\r\n                });\r\n                setListTag(mutListTag);\r\n            },\r\n            function (resp) {\r\n                console.log(\"err response : \", resp);\r\n            }\r\n        );\r\n        console.groupEnd(\"EgovAdminNoticeList.retrieveList()\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        retrieveList(searchCondition);\r\n        return () => {\r\n        }\r\n    }, [searchCondition]);\r\n\r\n    console.log(\"------------------------------EgovAdminNoticeList [End]\");\r\n    console.groupEnd(\"EgovAdminNoticeList\");\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                        <li><Link to={URL.MAIN} className=\"home\">Home</Link></li>\r\n                        <li><Link to={URL.INFORM}>사이트 관리</Link></li>\r\n                        <li>{masterBoard && masterBoard.bbsNm}</li>\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav></EgovLeftNav>\r\n                    {/* <!--// Navigation --> */}\r\n\r\n                    <div className=\"contents NOTICE_LIST\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <div className=\"top_tit\">\r\n                            <h1 className=\"tit_1\">사이트관리</h1>\r\n                        </div>\r\n\r\n                        <h2 className=\"tit_2\">{masterBoard && masterBoard.bbsNm}</h2>\r\n\r\n                        {/* <!-- 검색조건 --> */}\r\n                        <div className=\"condition\">\r\n                            <ul>\r\n                                <li className=\"third_1 L\">\r\n                                    <label className=\"f_select\" htmlFor=\"sel1\">\r\n                                        <select id=\"sel1\" title=\"조건\" defaultValue={searchCondition.searchCnd}\r\n                                            onChange={e => {\r\n                                                searchCnd = e.target.value;\r\n                                                // setSearchCondition({ ...searchCondition, searchCnd: e.target.value });\r\n                                            }}\r\n                                        >\r\n                                            <option value=\"0\">제목</option>\r\n                                            <option value=\"1\">내용</option>\r\n                                            <option value=\"2\">작성자</option>\r\n                                        </select>\r\n                                    </label>\r\n                                </li>\r\n                                <li className=\"third_2 R\">\r\n                                    <span className=\"f_search w_500\">\r\n                                        <input type=\"text\" name=\"\" defaultValue={searchCondition.searchWrd} placeholder=\"\"\r\n                                            onChange={e => {\r\n                                                searchWrd = e.target.value;\r\n                                                //setSearchCondition({ ...searchCondition, searchWrd: e.target.value });\r\n                                            }}\r\n                                        />\r\n                                        <button type=\"button\"\r\n                                            onClick={e => {\r\n                                                // onClickSearch\r\n                                                setSearchCondition({ ...searchCondition, pageIndex: 1, searchCnd: searchCnd, searchWrd: searchWrd });\r\n                                            }}>조회</button>\r\n                                    </span>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to={URL.ADMIN_NOTICE_CREATE} className=\"btn btn_blue_h46 pd35\">등록</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        {/* <!--// 검색조건 --> */}\r\n\r\n                        {/* <!-- 게시판목록 --> */}\r\n                        <div className=\"board_list BRD002\">\r\n                            <div className=\"head\">\r\n                                <span>번호</span>\r\n                                <span>제목</span>\r\n                                <span>작성자</span>\r\n                                <span>작성일</span>\r\n                                <span>조회수</span>\r\n                            </div>\r\n                            <div className=\"result\">\r\n                                {listTag}\r\n                            </div>\r\n                        </div>\r\n                        {/* <!--// 게시판목록 --> */}\r\n\r\n                        <div className=\"board_bot\">\r\n                            {/* <!-- Paging --> */}\r\n                            <EgovPaging pagination={paginationInfo} moveToPage={passedPage => {\r\n                                setSearchCondition({ ...searchCondition, pageIndex: passedPage });\r\n                            }}></EgovPaging>\r\n                            {/* <!--/ Paging --> */}\r\n                        </div>\r\n\r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default EgovAdminNoticeList;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\usage\\EgovAdminUsageList.jsx",["380","381","382","383"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport * as EgovNet from 'context/egovFetch';\r\nimport URL from 'context/url';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavAdmin';\r\nimport EgovPaging from 'egov/common/EgovPaging';\r\n\r\nfunction EgovAdminUsageList(props) {\r\n    console.group(\"EgovAdminUsageList\");\r\n    console.log(\"[Start] EgovAdminUsageList ------------------------------\");\r\n    console.log(\"EgovAdminUsageList [props] : \", props);\r\n\r\n    const history = useHistory();\r\n    console.log(\"EgovAdminUsageList [history] : \", history);\r\n\r\n    let searchCnd = '0';\r\n    let searchWrd = '';\r\n    \r\n    const [searchCondition, setSearchCondition] = useState(history.location.state?.searchCondition || { pageIndex: 1, searchCnd: '0', searchWrd: '' });// 기존 조회에서 접근 했을 시 || 신규로 접근 했을 시\r\n    const [user, setUser] = useState({});\r\n    const [paginationInfo, setPaginationInfo] = useState({});\r\n\r\n    const [listTag, setListTag] = useState([]);\r\n\r\n    const retrieveList = (srchCnd) => {\r\n        console.groupCollapsed(\"EgovAdminUsageList.retrieveList()\");\r\n\r\n        const retrieveListURL = '/cop/com/selectBBSUseInfsAPI.do';\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(srchCnd)\r\n        }\r\n\r\n        EgovNet.requestFetch(retrieveListURL,\r\n            requestOptions,\r\n            (resp) => {\r\n                setPaginationInfo(resp.result.paginationInfo);\r\n                setUser(resp.result.user);\r\n\r\n                let mutListTag = [];\r\n                listTag.push(<p className=\"no_data\">검색된 결과가 없습니다.</p>); // 게시판 목록 초기값\r\n\r\n                let resultCnt = resp.result.resultCnt * 1;\r\n                let currentPageNo = resp.result.paginationInfo.currentPageNo;\r\n                let pageSize = resp.result.paginationInfo.pageSize;\r\n\r\n                // 리스트 항목 구성\r\n                resp.result.resultList.forEach(function (item, index) {\r\n                    if (index === 0) mutListTag = []; // 목록 초기화\r\n                    let listIdx = resultCnt + 1 - ((currentPageNo - 1) * pageSize + index + 1);\r\n\r\n                    mutListTag.push(\r\n                        <Link\r\n                            to={{\r\n                                pathname: URL.ADMIN_USAGE_MODIFY,\r\n                                state: {\r\n                                    bbsId: item.bbsId,\r\n                                    trgetId: item.trgetId,\r\n                                    searchCondition: srchCnd\r\n                                }\r\n                            }}\r\n                            key={listIdx}\r\n                            className=\"list_item\">\r\n                            <div>{listIdx}</div>\r\n                            <div>{item.bbsNm}</div>\r\n                            <div>{item.cmmntyNm}</div>\r\n                            <div>{item.clbNm}</div>\r\n                            <div>{item.frstRegisterPnttm}</div>\r\n                            <div>{item.useAt === \"Y\" ? \"사용\" : \"사용안함\"}</div>\r\n                        </Link>\r\n                    );\r\n                });\r\n                setListTag(mutListTag);\r\n            },\r\n            function (resp) {\r\n                console.log(\"err response : \", resp);\r\n            }\r\n        );\r\n        console.groupEnd(\"EgovAdminUsageList.retrieveList()\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        retrieveList(searchCondition);\r\n        return () => {\r\n        }\r\n    }, []);\r\n\r\n    console.log(\"------------------------------EgovAdminUsageList [End]\");\r\n    console.groupEnd(\"EgovAdminUsageList\");\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                        <li><Link to={URL.MAIN} className=\"home\">Home</Link></li>\r\n                        <li><Link to={URL.ADMIN} >사이트관리</Link></li>\r\n                        <li>게시판사용관리</li>\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav></EgovLeftNav>\r\n                    {/* <!--// Navigation --> */}\r\n\r\n                    <div className=\"contents NOTICE_LIST\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <div className=\"top_tit\">\r\n                            <h1 className=\"tit_1\">사이트관리</h1>\r\n                        </div>\r\n\r\n                        <h2 className=\"tit_2\">게시판사용 관리</h2>\r\n\r\n                        {/* <!-- 검색조건 --> */}\r\n                        <div className=\"condition\">\r\n                            <ul>\r\n                                <li className=\"third_1 L\">\r\n                                    <label className=\"f_select\" htmlFor=\"search_select\">\r\n                                        <select id=\"search_select\" name=\"searchCnd\" title=\"검색유형선력\"\r\n                                            onChange={(e) => setSearchCondition({ ...searchCondition, searchCnd: e.target.value })}\r\n                                        >\r\n                                            <option value=\"0\">게시판명</option>\r\n                                            <option value=\"1\">게시판유형</option>\r\n                                        </select>\r\n                                    </label>\r\n                                </li>\r\n                                <li className=\"third_2 R\">\r\n                                    <span className=\"f_search w_500\">\r\n                                        <input type=\"text\" name=\"\" defaultValue={searchCondition && searchCondition.searchWrd} placeholder=\"\"\r\n                                            onChange={(e) => setSearchCondition({ ...searchCondition, searchWrd: e.target.value })}\r\n                                        />\r\n                                        <button type=\"button\"\r\n                                            onClick={() => retrieveList(searchCondition)}>조회</button>\r\n                                    </span>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to={URL.ADMIN_USAGE_CREATE} className=\"btn btn_blue_h46 pd35\">등록</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        {/* <!--// 검색조건 --> */}\r\n\r\n                        {/* <!-- 게시판목록 --> */}\r\n                        <div className=\"board_list BRD009\">\r\n                            <div className=\"head\">\r\n                                <span>번호</span>\r\n                                <span>게시판명</span>\r\n                                <span>사용 커뮤니티명</span>\r\n                                <span>사용 동호회명</span>\r\n                                <span>등록일시</span>\r\n                                <span>사용여부</span>\r\n                            </div>\r\n                            <div className=\"result\">\r\n                                {listTag}\r\n                            </div>\r\n                        </div>\r\n                        {/* <!--// 게시판목록 --> */}\r\n\r\n                        <div className=\"board_bot\">\r\n                            {/* <!-- Paging --> */}\r\n                            <EgovPaging pagination={paginationInfo} moveToPage={passedPage => {\r\n                                setSearchCondition({ ...searchCondition, pageIndex: passedPage });\r\n                            }}></EgovPaging>\r\n                            {/* <!--/ Paging --> */}\r\n                        </div>\r\n\r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EgovAdminUsageList;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\gallery\\EgovAdminGalleryList.jsx",["384"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport * as EgovNet from 'context/egovFetch';\r\nimport URL from 'context/url';\r\nimport { GALLERY_BBS_ID } from 'context/config';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavAdmin';\r\nimport EgovPaging from 'egov/common/EgovPaging';\r\n\r\nfunction EgovAdminGalleryList(props) {\r\n    console.group(\"EgovAdminGalleryList\");\r\n    console.log(\"[Start] EgovAdminGalleryList ------------------------------\");\r\n    console.log(\"EgovAdminGalleryList [props] : \", props);\r\n\r\n    let history = useHistory();\r\n    console.log(\"EgovAdminGalleryList [history] : \", history);\r\n\r\n    const bbsId = GALLERY_BBS_ID;\r\n    let searchCnd = '0';\r\n    let searchWrd = '';\r\n\r\n    const [searchCondition, setSearchCondition] = useState(history.location.state?.searchCondition || { bbsId: bbsId, pageIndex: 1, searchCnd: '0', searchWrd: '' });// 기존 조회에서 접근 했을 시 || 신규로 접근 했을 시\r\n    const [masterBoard, setMasterBoard] = useState({});\r\n    const [user, setUser] = useState({});\r\n    const [paginationInfo, setPaginationInfo] = useState({});\r\n\r\n    const [listTag, setListTag] = useState([]);\r\n\r\n    const retrieveList = (searchCondition) => {\r\n        console.groupCollapsed(\"EgovAdminGalleryList.retrieveList()\");\r\n\r\n        const retrieveListURL = '/cop/bbs/selectBoardListAPI.do';\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(searchCondition)\r\n        }\r\n\r\n        EgovNet.requestFetch(retrieveListURL,\r\n            requestOptions,\r\n            (resp) => {\r\n                setMasterBoard(resp.result.brdMstrVO);\r\n                setPaginationInfo(resp.result.paginationInfo);\r\n                setUser(resp.result.user);\r\n\r\n                let mutListTag = [];\r\n                mutListTag.push(<p className=\"no_data\">검색된 결과가 없습니다.</p>); // 게시판 목록 초기값\r\n\r\n                let resultCnt = resp.result.resultCnt * 1;\r\n                let currentPageNo = resp.result.paginationInfo.currentPageNo;\r\n                let pageSize = resp.result.paginationInfo.pageSize;\r\n\r\n                // 리스트 항목 구성\r\n                resp.result.resultList.forEach(function (item, index) {\r\n                    if (index === 0) mutListTag = []; // 목록 초기화\r\n                    var listIdx = resultCnt + 1 - ((currentPageNo - 1) * pageSize + index + 1);\r\n\r\n                    mutListTag.push(\r\n                        <Link to={{\r\n                            pathname: URL.ADMIN_GALLERY_DETAIL,\r\n                            state: {\r\n                                nttId: item.nttId,\r\n                                bbsId: item.bbsId,\r\n                                searchCondition: searchCondition\r\n                            }\r\n                        }} key={listIdx} className=\"list_item\" >\r\n                            <div>{listIdx}</div>\r\n                            {(item.replyLc * 1 ? true : false) &&\r\n                                <><div className=\"al reply\">\r\n                                    {item.nttSj}\r\n                                </div></>}\r\n                            {(item.replyLc * 1 ? false : true) &&\r\n                                <><div className=\"al\">\r\n                                    {item.nttSj}\r\n                                </div></>}\r\n                            <div>{item.frstRegisterNm}</div>\r\n                            <div>{item.frstRegisterPnttm}</div>\r\n                            <div>{item.inqireCo}</div>\r\n                        </Link>\r\n                    );\r\n                });\r\n                setListTag(mutListTag);\r\n            },\r\n            function (resp) {\r\n                console.log(\"err response : \", resp);\r\n            }\r\n        );\r\n        console.groupEnd(\"EgovAdminGalleryList.retrieveList()\");\r\n    }\r\n\r\n    //======================================================\r\n    useEffect(() => {\r\n        retrieveList(searchCondition);\r\n        return () => {\r\n        }\r\n    }, [searchCondition]);\r\n\r\n    console.log(\"------------------------------EgovAdminGalleryList [End]\");\r\n    console.groupEnd(\"EgovAdminGalleryList\");\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                        <li><Link to={URL.MAIN} className=\"home\">Home</Link></li>\r\n                        <li><Link to={URL.ADMIN}>사이트관리</Link></li>\r\n                        <li>{masterBoard && masterBoard.bbsNm}</li>\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav></EgovLeftNav>\r\n                    {/* <!--// Navigation --> */}\r\n\r\n                    <div className=\"contents SITE_GALLARY_LIST\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <div className=\"top_tit\">\r\n                            <h1 className=\"tit_1\">사이트관리</h1>\r\n                        </div>\r\n\r\n                        <h2 className=\"tit_2\">{masterBoard && masterBoard.bbsNm}</h2>\r\n\r\n                        {/* <!-- 검색조건 --> */}\r\n                        <div className=\"condition\">\r\n                            <ul>\r\n                                <li className=\"third_1 L\">\r\n                                    <label className=\"f_select\" htmlFor=\"sel1\">\r\n                                        <select id=\"sel1\" title=\"조건\" defaultValue={searchCondition.searchCnd}\r\n                                            onChange={e => {\r\n                                                searchCnd = e.target.value;\r\n                                                // setSearchCondition({ ...searchCondition, searchCnd: e.target.value });\r\n                                            }}\r\n                                        >\r\n                                            <option value=\"0\">제목</option>\r\n                                            <option value=\"1\">내용</option>\r\n                                            <option value=\"2\">작성자</option>\r\n                                        </select>\r\n                                    </label>\r\n                                </li>\r\n                                <li className=\"third_2 R\">\r\n                                    <span className=\"f_search w_500\">\r\n                                        <input type=\"text\" name=\"\" defaultValue={searchCondition.searchWrd} placeholder=\"\"\r\n                                            onChange={e => {\r\n                                                searchWrd = e.target.value;\r\n                                                //setSearchCondition({ ...searchCondition, searchWrd: e.target.value });\r\n                                            }}\r\n                                        />\r\n                                        <button type=\"button\"\r\n                                            onClick={e => {\r\n                                                // onClickSearch\r\n                                                setSearchCondition({ ...searchCondition, pageIndex: 1, searchCnd: searchCnd, searchWrd: searchWrd });\r\n                                            }}>조회</button>\r\n                                    </span>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to={URL.ADMIN_GALLERY_CREATE} className=\"btn btn_blue_h46 pd35\">등록</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        {/* <!--// 검색조건 --> */}\r\n\r\n                        {/* <!-- 게시판목록 --> */}\r\n                        <div className=\"board_list BRD002\">\r\n                            <div className=\"head\">\r\n                                <span>번호</span>\r\n                                <span>제목</span>\r\n                                <span>작성자</span>\r\n                                <span>작성일</span>\r\n                                <span>조회수</span>\r\n                            </div>\r\n                            <div className=\"result\">\r\n                                {listTag}\r\n                            </div>\r\n                        </div>\r\n                        {/* <!--// 게시판목록 --> */}\r\n\r\n                        <div className=\"board_bot\">\r\n                            {/* <!-- Paging --> */}\r\n                            <EgovPaging pagination={paginationInfo} moveToPage={passedPage => {\r\n                                setSearchCondition({ ...searchCondition, pageIndex: passedPage });\r\n                            }}></EgovPaging>\r\n                            {/* <!--/ Paging --> */}\r\n                        </div>\r\n\r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default EgovAdminGalleryList;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\gallery\\EgovAdminGalleryEdit.jsx",["385","386","387"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport * as EgovNet from 'context/egovFetch';\r\nimport URL from 'context/url';\r\nimport CODE from 'context/code';\r\nimport { GALLERY_BBS_ID } from 'context/config';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavAdmin';\r\nimport EgovAttachFile from 'egov/common/EgovAttachFile';\r\n\r\nfunction EgovAdminGalleryEdit(props) {\r\n    console.group(\"EgovAdminGalleryEdit\");\r\n    console.log(\"------------------------------\");\r\n    console.log(\"EgovAdminGalleryEdit [props] : \", props);\r\n\r\n    const history = useHistory();\r\n    console.log(\"EgovAdminGalleryEdit [history] : \", history);\r\n\r\n    const bbsId = history.location.state?.bbsId || GALLERY_BBS_ID;\r\n    const nttId = history.location.state?.nttId || \"\";\r\n\r\n    const [modeInfo, setModeInfo] = useState({ mode: props.mode });\r\n    const [masterBoard, setMasterBoard] = useState({});\r\n    const [boardDetail, setBoardDetail] = useState({ nttSj: '', nttCn: '' });\r\n    const [boardAttachFiles, setBoardAttachFiles] = useState();\r\n\r\n    const intMode = () => {\r\n        switch (props.mode) {\r\n            case CODE.MODE_CREATE:\r\n                setModeInfo({\r\n                    ...modeInfo,\r\n                    modeTitle: \"등록\",\r\n                    editURL: '/cop/bbs/insertBoardArticleAPI.do'\r\n                });\r\n                break;\r\n            case CODE.MODE_MODIFY:\r\n                setModeInfo({\r\n                    ...modeInfo,\r\n                    modeTitle: \"수정\",\r\n                    editURL: '/cop/bbs/updateBoardArticleAPI.do'\r\n                });\r\n                break;\r\n            case CODE.MODE_REPLY:\r\n                setModeInfo({\r\n                    ...modeInfo,\r\n                    modeTitle: \"답글쓰기\",\r\n                    editURL: '/cop/bbs/replyBoardArticleAPI.do'\r\n                });\r\n                break;\r\n        }\r\n        retrieveDetail();\r\n    }\r\n\r\n    const retrieveDetail = () => {\r\n\r\n        if (modeInfo.mode === CODE.MODE_CREATE) {// 등록이면 조회 안함\r\n            setBoardDetail({ bbsId: bbsId, nttSj: \"\", nttCn: \"\" });\r\n            return;\r\n        }\r\n\r\n        const retrieveDetailURL = '/cop/bbs/selectBoardArticleAPI.do';\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                bbsId: bbsId,\r\n                nttId: nttId\r\n            })\r\n        }\r\n        EgovNet.requestFetch(retrieveDetailURL,\r\n            requestOptions,\r\n            function (resp) {\r\n                setMasterBoard(resp.result.brdMstrVO);\r\n                \r\n                // 초기 boardDetail 설정 => ( 답글 / 수정 ) 모드일때...\r\n                if (modeInfo.mode === CODE.MODE_REPLY) {// 답글모드이면 RE: 붙여줌 \r\n                    setBoardDetail({ ...resp.result.boardVO, nttSj: \"RE: \" + resp.result.boardVO.nttSj, nttCn: \"\" , inqireCo: 0, atchFileId: \"\"});\r\n                }\r\n                if (modeInfo.mode === CODE.MODE_MODIFY) {\r\n                    setBoardDetail(resp.result.boardVO);\r\n                }\r\n                \r\n                // 초기 setBoardAttachFiles 설정 => (수정) 모드 일때...\r\n                if (modeInfo.mode === CODE.MODE_MODIFY) {\r\n                    setBoardAttachFiles(resp.result.resultFiles);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    const updateBoard = () => {\r\n        const formData = new FormData();\r\n        for (let key in boardDetail) {\r\n            formData.append(key, boardDetail[key]);\r\n            //console.log(\"boardDetail [%s] \", key, boardDetail[key]);\r\n        }\r\n        \r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n\r\n            },\r\n            body: formData\r\n        }\r\n\r\n        EgovNet.requestFetch(modeInfo.editURL,\r\n            requestOptions,\r\n            (resp) => {\r\n                if (Number(resp.resultCode) === Number(CODE.RCV_SUCCESS)) {\r\n                    history.push({ pathname: URL.ADMIN_GALLERY });\r\n                } else {\r\n                    alert(\"ERR : \" + resp.resultMessage);\r\n                }\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    useEffect(function () {\r\n        intMode();\r\n        return function () {\r\n        }\r\n    }, []);\r\n\r\n    useEffect(function () {\r\n        console.log(\"boardDetail, boardAttachFiles: useEffect\");\r\n        return function () {\r\n        }\r\n    }, [boardDetail,boardAttachFiles]);\r\n\r\n    console.groupEnd(\"EgovAdminGalleryEdit\");\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                    <li><Link to={URL.MAIN} className=\"home\">Home</Link></li>\r\n                        <li><Link to={URL.ADMIN}>사이트관리</Link></li>\r\n                        <li>{masterBoard && masterBoard.bbsNm}</li>\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav></EgovLeftNav>\r\n                    {/* <!--// Navigation --> */}\r\n\r\n                    <div className=\"contents SITE_GALLARY_VIEW\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <div className=\"top_tit\">\r\n                            <h1 className=\"tit_1\">사이트관리</h1>\r\n                        </div>\r\n\r\n                        <h2 className=\"tit_2\">{masterBoard && masterBoard.bbsNm} {modeInfo.modeTitle}</h2>\r\n\r\n                        <div className=\"board_view2\">\r\n                            <dl>\r\n                                <dt>\r\n                                    <label htmlFor=\"nttSj\">제목<span className=\"req\">필수</span></label>\r\n                                </dt>\r\n                                <dd>\r\n                                    <input className=\"f_input2 w_full\" id=\"nttSj\" name=\"nttSj\" type=\"text\"\r\n                                        defaultValue={boardDetail.nttSj}\r\n                                        onChange={e => setBoardDetail({ ...boardDetail, nttSj: e.target.value })}\r\n                                        maxLength=\"60\" />\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt><label htmlFor=\"nttCn\">내용<span className=\"req\">필수</span></label></dt>\r\n                                <dd>\r\n                                    <textarea className=\"f_txtar w_full h_200\" id=\"nttCn\" name=\"nttCn\" cols=\"30\" rows=\"10\" placeholder=\"\"\r\n                                        defaultValue={boardDetail.nttCn}\r\n                                        onChange={e => setBoardDetail({ ...boardDetail, nttCn: e.target.value })}></textarea>\r\n                                </dd>\r\n                            </dl>\r\n                            {modeInfo?.mode !== CODE.MODE_REPLY &&\r\n                                <EgovAttachFile\r\n                                    fnChangeFile={(attachfile) => {\r\n                                        console.log(\"====>>> Changed attachfile file = \", attachfile);\r\n                                        setBoardDetail({ ...boardDetail, file_1: attachfile });\r\n                                    }}\r\n                                    fnDeleteFile={(deletedFile) => {\r\n                                        console.log(\"====>>> Delete deletedFile = \", deletedFile);\r\n                                        setBoardAttachFiles(deletedFile);\r\n                                    }}\r\n                                    boardFiles={boardAttachFiles}\r\n                                    mode={props.mode} />\r\n                            }\r\n\r\n                            {/* <!-- 버튼영역 --> */}\r\n                            <div className=\"board_btn_area\">\r\n                                <div className=\"left_col btn1\">\r\n                                    <a href=\"\" className=\"btn btn_skyblue_h46 w_100\"\r\n                                        onClick={(e) => {\r\n                                            e.preventDefault();\r\n                                            updateBoard();\r\n                                        }}>저장</a>\r\n                                </div>\r\n\r\n                                <div className=\"right_col btn1\">\r\n                                    <a href={URL.ADMIN_GALLERY} className=\"btn btn_blue_h46 w_100\">목록</a>\r\n                                </div>\r\n                            </div>\r\n                            {/* <!--// 버튼영역 --> */}\r\n                        </div>\r\n\r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EgovAdminGalleryEdit;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\admin\\gallery\\EgovAdminGalleryDetail.jsx",["388","389","390"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport * as EgovNet from 'context/egovFetch';\r\nimport URL from 'context/url';\r\nimport CODE from 'context/code';\r\nimport { GALLERY_BBS_ID } from 'context/config';\r\n\r\nimport { default as EgovLeftNav } from 'egov/common/leftmenu/EgovLeftNavAdmin';\r\nimport EgovAttachFile from 'egov/common/EgovAttachFile';\r\nimport EgovImageGallery from 'egov/common/EgovImageGallery';\r\n\r\nfunction EgovAdminGalleryDetail(props) {\r\n    console.groupEnd(\"EgovAdminGalleryDetail\");\r\n    console.log(\"------------------------------\");\r\n    console.log(\"EgovAdminGalleryDetail [props] : \", props);\r\n\r\n    const history = useHistory();\r\n    console.log(\"EgovAdminGalleryDetail [history] : \", history);\r\n\r\n    const bbsId = history.location.state.bbsId || GALLERY_BBS_ID;\r\n    const nttId = history.location.state.nttId;\r\n    const searchCondition = history.location.state.searchCondition;\r\n\r\n    const [masterBoard, setMasterBoard] = useState({});\r\n    const [user, setUser] = useState({});\r\n    const [boardDetail, setBoardDetail] = useState({});\r\n    const [boardAttachFiles, setBoardAttachFiles] = useState();\r\n\r\n    const retrieveDetail = () => {\r\n        const retrieveDetailURL = '/cop/bbs/selectBoardArticleAPI.do';\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                bbsId: bbsId,\r\n                nttId: nttId\r\n            })\r\n        }\r\n        EgovNet.requestFetch(retrieveDetailURL,\r\n            requestOptions,\r\n            function (resp) {\r\n                setMasterBoard(resp.result.brdMstrVO);\r\n                setBoardDetail(resp.result.boardVO);\r\n                setUser(resp.result.user);\r\n                setBoardAttachFiles(resp.result.resultFiles);\r\n            }\r\n        );\r\n    }\r\n\r\n    const onClickDeleteBoardArticle = (bbsId, nttId) => {\r\n        const deleteBoardURL = \"/cop/bbs/deleteBoardArticleAPI.do\";\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                bbsId: bbsId,\r\n                nttId: nttId\r\n            })\r\n        }\r\n\r\n        EgovNet.requestFetch(deleteBoardURL,\r\n            requestOptions,\r\n            (resp) => {\r\n                console.log(\"====>>> board delete= \", resp);\r\n                if (Number(resp.resultCode) === Number(CODE.RCV_SUCCESS)) {\r\n                    alert(\"게시글이 삭제되었습니다.\")\r\n                    history.push(URL.ADMIN_GALLERY);\r\n                } else {\r\n                    alert(\"ERR : \" + resp.resultMessage);\r\n                }\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    useEffect(function () {\r\n        retrieveDetail();\r\n        return function () {\r\n        }\r\n    }, []);\r\n\r\n    console.groupEnd(\"EgovAdminGalleryDetail\");\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"c_wrap\">\r\n                {/* <!-- Location --> */}\r\n                <div className=\"location\">\r\n                    <ul>\r\n                        <li><Link to={URL.MAIN} className=\"home\">Home</Link></li>\r\n                        <li><Link to={URL.INFORM}>사이트관리</Link></li>\r\n                        <li>{masterBoard && masterBoard.bbsNm}</li>\r\n                        {/* brdMstrVO */}\r\n                    </ul>\r\n                </div>\r\n                {/* <!--// Location --> */}\r\n\r\n                <div className=\"layout\">\r\n                    {/* <!-- Navigation --> */}\r\n                    <EgovLeftNav></EgovLeftNav>\r\n                    {/* <!--// Navigation --> */}\r\n\r\n                    <div className=\"contents NOTICE_VIEW\" id=\"contents\">\r\n                        {/* <!-- 본문 --> */}\r\n\r\n                        <div className=\"top_tit\">\r\n                            <h1 className=\"tit_1\">사이트관리</h1>\r\n                        </div>\r\n\r\n                        <h2 className=\"tit_2\">{masterBoard && masterBoard.bbsNm}</h2>\r\n\r\n                        {/* <!-- 게시판 상세보기 --> */}\r\n                        <div className=\"board_view\">\r\n                            <div className=\"board_view_top\">\r\n                                <div className=\"tit\">{boardDetail && boardDetail.nttSj}</div>\r\n                                <div className=\"info\">\r\n                                    <dl>\r\n                                        <dt>작성자</dt>\r\n                                        <dd>{boardDetail && boardDetail.frstRegisterNm}</dd>\r\n                                    </dl>\r\n                                    <dl>\r\n                                        <dt>작성일</dt>\r\n                                        <dd>{boardDetail && boardDetail.frstRegisterPnttm}</dd>\r\n                                    </dl>\r\n                                    <dl>\r\n                                        <dt>조회수</dt>\r\n                                        <dd>{boardDetail && boardDetail.inqireCo}</dd>\r\n                                    </dl>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"board_article\">\r\n                                <textarea name=\"\" cols=\"30\" rows=\"10\" readOnly=\"readonly\" defaultValue={boardDetail && boardDetail.nttCn}></textarea>\r\n                            </div>\r\n\r\n                            <EgovImageGallery boardFiles={boardAttachFiles} />\r\n\r\n                            <div className=\"board_attach\">\r\n                                <EgovAttachFile boardFiles={boardAttachFiles} />\r\n                            </div>\r\n\r\n\r\n                            <div className=\"board_btn_area\">\r\n                                <div className=\"left_col btn3\">\r\n                                    <Link to={{\r\n                                        pathname: URL.ADMIN_GALLERY_MODIFY,\r\n                                        state: {\r\n                                            nttId: nttId,\r\n                                            bbsId: bbsId\r\n                                        }\r\n                                    }} className=\"btn btn_skyblue_h46 w_100\">수정</Link>\r\n                                    <a href=\"\" className=\"btn btn_skyblue_h46 w_100\" onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        onClickDeleteBoardArticle(boardDetail.bbsId, boardDetail.nttId);\r\n                                    }}>삭제</a>\r\n                                    <Link to={{\r\n                                        pathname: URL.ADMIN_GALLERY_REPLY,\r\n                                        state: {\r\n                                            nttId: nttId,\r\n                                            bbsId: bbsId\r\n                                        }\r\n                                    }} className=\"btn btn_skyblue_h46 w_100\">답글작성</Link>\r\n                                </div>\r\n                                <div className=\"right_col btn1\">\r\n                                    <Link to={{\r\n                                        pathname: URL.ADMIN_GALLERY,\r\n                                        state: {\r\n                                            nttId: nttId,\r\n                                            bbsId: bbsId,\r\n                                            searchCondition: searchCondition\r\n                                        }\r\n                                    }} className=\"btn btn_blue_h46 w_100\">목록</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* <!-- 게시판 상세보기 --> */}\r\n\r\n                        {/* <!--// 본문 --> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default EgovAdminGalleryDetail;","C:\\prj\\cnbcs_web_frontend\\src\\context\\egovFetch.js",[],"C:\\prj\\cnbcs_web_frontend\\src\\context\\config.js",[],"C:\\prj\\cnbcs_web_frontend\\src\\egov\\login\\EgovLoginContent.jsx",["391","392","393"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as EgovNet from 'context/egovFetch';\r\n\r\nimport URL from 'context/url';\r\nimport CODE from 'context/code';\r\n\r\nfunction EgovLoginContent(props) {\r\n    console.group(\"EgovLoginContent\");\r\n    console.log(\"[Start] EgovLoginContent ------------------------------\");\r\n    console.log(\"EgovLoginContent [props] : \", props);\r\n\r\n    const history = useHistory();\r\n    console.log(\"EgovLoginContent [history] : \", history);\r\n\r\n    const [userInfo, setUserInfo] = useState({ id: 'default', password: 'default', userSe: 'USR' });\r\n    const [loginVO, setLoginVO] = useState({});\r\n\r\n    const submitFormHandler = (e) => {\r\n        console.log(\"EgovLoginContent submitFormHandler()\");\r\n        \r\n        const loginUrl = \"/uat/uia/actionLoginAPI.do\"\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(userInfo)\r\n        }\r\n\r\n        EgovNet.requestFetch(loginUrl,\r\n            requestOptions,\r\n            (resp) => {\r\n                let resultVO = resp.resultVO;\r\n\r\n                if (Number(resp.resultCode) === Number(CODE.RCV_SUCCESS)) {\r\n                    setLoginVO(resultVO);\r\n                    props.onChangeLogin(resultVO);\r\n                    history.push(URL.MAIN);\r\n                } else {\r\n                    alert(resp.resultMessage)\r\n                }\r\n            })\r\n    }\r\n\r\n    console.log(\"------------------------------EgovLoginContent [End]\");\r\n    console.groupEnd(\"EgovLoginContent\");\r\n    \r\n    return (\r\n        <div className=\"contents\" id=\"contents\">\r\n            {/* <!-- 본문 --> */}\r\n            <div className=\"Plogin\">\r\n                <h1>로그인</h1>\r\n                <p className=\"txt\">전자정부표준프레임워크 경량환경 홈페이지 로그인 페이지입니다.<br />로그인을 하시면 모든 서비스를 제한없이 이용하실 수 있습니다.</p>\r\n\r\n                <div className=\"login_box\">\r\n                    <form name=\"\" method=\"\" action=\"\" >\r\n                        <fieldset>\r\n                            <legend>로그인</legend>\r\n                            <span className=\"group\">\r\n                                <input type=\"text\" name=\"\" title=\"아이디\" placeholder=\"아이디\"\r\n                                    onChange={e => setUserInfo({ ...userInfo, id: e.target.value })} />\r\n                                <input type=\"password\" name=\"\" title=\"비밀번호\" placeholder=\"비밀번호\"\r\n                                    onChange={e => setUserInfo({ ...userInfo, password: e.target.value })} />\r\n                            </span>\r\n                            <div className=\"chk\">\r\n                                <label className=\"f_chk\" htmlFor=\"saveid\">\r\n                                    <input type=\"checkbox\" name=\"\" id=\"saveid\" /> <em>ID저장</em>\r\n                                </label>\r\n                            </div>\r\n                            <button type=\"button\" onClick={submitFormHandler}><span>LOGIN</span></button>\r\n                        </fieldset>\r\n                    </form>\r\n                </div>\r\n\r\n                <ul className=\"list\">\r\n                    <li>비밀번호는 6~12자의 영문 대/소문자, 숫자, 특수문자를 혼합해서 사용하실 수 있습니다.</li>\r\n                    <li>쉬운 비밀번호나 자주 쓰는 사이트의 비밀번호가 같을 경우, 도용되기 쉬우므로 주기적으로\r\n                        변경하셔서 사용하는 것이 좋습니다.</li>\r\n                </ul>\r\n            </div>\r\n            {/* <!--// 본문 --> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(EgovLoginContent);","C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\EgovPaging.jsx",["394"],"import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nfunction EgovPaging(props) {\r\n    console.groupCollapsed(\"EgovPaging\");\r\n    console.log(\"EgovPaging [props] : \", props);\r\n    let history = useHistory();\r\n    console.log(\"EgovPaging [history] \", history);\r\n\r\n    let paginationTag = [];\r\n\r\n    if (props.pagination === undefined) {\r\n        paginationTag = \"-\";\r\n    } else {\r\n        const currentPageNo = props.pagination.currentPageNo;\r\n        const pageSize = props.pagination.pageSize;\r\n        const totalRecordCount = props.pagination.totalRecordCount;\r\n        const recordCountPerPage = props.pagination.recordCountPerPage;\r\n\r\n        const totalPageCount = Math.ceil(totalRecordCount / recordCountPerPage);\r\n        const currentFirstPage = Math.floor((currentPageNo - 1) / pageSize) * pageSize + 1;\r\n        let currentLastPage = currentFirstPage + pageSize - 1;\r\n        currentLastPage = (currentLastPage > totalPageCount) ? totalPageCount : currentLastPage;\r\n\r\n        if (totalPageCount > pageSize) {\r\n            // 첫 페이지 이동\r\n            const firstPageTag = <li key=\"fp\" className=\"btn\">\r\n                <button onClick={e => {props.moveToPage(1)}} className=\"first\">처음</button></li>;\r\n            paginationTag.push(firstPageTag);\r\n\r\n            // 이전 페이지 이동\r\n            const prevPageIndex = (currentPageNo - 1 > 0) ? currentPageNo - 1 : 1;\r\n            const previousPageTag = <li key=\"pp\" className=\"btn\">\r\n                <button onClick={e => {props.moveToPage(prevPageIndex)}} className=\"prev\">이전</button></li>;\r\n            paginationTag.push(previousPageTag);\r\n        }\r\n\r\n        for (let i = currentFirstPage; i <= currentLastPage; i++) {\r\n            if (i === currentPageNo) {\r\n                // 현재 페이지\r\n                const currentPage = <li key={i}>\r\n                    <button className=\"cur\">{i}</button>\r\n                </li>;\r\n                paginationTag.push(currentPage);\r\n            } else {\r\n                // 다른 페이지\r\n                const otherPage = <li key={i}>\r\n                    <button onClick={e => {props.moveToPage(i)}}>{i}</button>\r\n                </li>;\r\n                paginationTag.push(otherPage);\r\n            }\r\n        }\r\n        if (totalPageCount > pageSize) {\r\n            // 다음 페이지 이동\r\n            const nextPageIndex = (currentLastPage + 1 < totalPageCount) ? currentLastPage + 1 : totalPageCount;\r\n            const nextPageTag = <li key=\"np\" className=\"btn\">\r\n                <button onClick={e => {props.moveToPage(nextPageIndex)}} className=\"next\">다음</button>\r\n            </li>;\r\n            paginationTag.push(nextPageTag);\r\n            \r\n            // 마지막 페이지 이동\r\n            const lastPageTag = <li key=\"lp\" className=\"btn\">\r\n                <button onClick={e => {props.moveToPage(totalPageCount)}} className=\"last\"></button></li>;\r\n            paginationTag.push(lastPageTag);\r\n        }\r\n    }\r\n    console.log(\"paginationTag\", paginationTag);\r\n    console.groupEnd(\"EgovPaging\");\r\n\r\n    return (\r\n        <div className=\"paging\">\r\n            <ul>\r\n                {paginationTag}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(EgovPaging);","C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\EgovAttachFile.jsx",["395"],"import React from 'react';\r\n\r\nimport * as EgovNet from 'context/egovFetch';\r\nimport { SERVER_URL } from 'context/config';\r\nimport CODE from 'context/code';\r\n\r\nfunction EgovAttachFile({ boardFiles, mode, fnChangeFile, fnDeleteFile }) {\r\n    console.groupCollapsed(\"EgovAttachFile\");\r\n\r\n\r\n    function onClickDownFile(atchFileId, fileSn) {\r\n        window.open(SERVER_URL + \"/cmm/fms/FileDown.do?atchFileId=\" + atchFileId + \"&fileSn=\" + fileSn + \"\");\r\n    }\r\n\r\n    function onClickDeleteFile(atchFileId, fileSn, fileIndex) {\r\n        console.log(\"onClickDeleteFile Params : \", atchFileId, fileSn, fileIndex);\r\n        \r\n        const formData = new FormData();\r\n        formData.set(\"atchFileId\", atchFileId);\r\n        formData.set(\"fileSn\", fileSn);\r\n        \r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                //'Content-type': 'multipart/form-data'\r\n            },\r\n            body: formData\r\n        }\r\n        EgovNet.requestFetch(\"/cmm/fms/deleteFileInfsAPI.do\",\r\n            requestOptions,\r\n            function (resp) {\r\n                console.log(\"===>>> board file delete= \" , resp);\r\n                if (Number(resp.resultCode) === Number(CODE.RCV_SUCCESS)) {\r\n                    // 성공\r\n                    console.log(\"Deleted fileIndex = \" , fileIndex);\r\n                    const _deleteFile = boardFiles.splice(fileIndex, 1);\r\n                    const _boardFiles = Object.assign([], boardFiles);\r\n                    fnDeleteFile(_boardFiles);\r\n                    alert(\"첨부파일이 삭제되었습니다.\");\r\n                    fnChangeFile({});\r\n                } else {\r\n                    alert(\"ERR : \" + resp.resultMessage);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    function onChangeFileInput(e) {\r\n        console.log(\"===>>> e = \" + e.target.files[0]);\r\n        fnChangeFile(e.target.files[0]);\r\n    }\r\n\r\n    let filesTag = [];\r\n\r\n    if (boardFiles !== undefined) {\r\n        boardFiles.forEach(function (item, index) {\r\n            filesTag.push(\r\n                <>\r\n                    <span>\r\n                        <a key={index} href={\"#LINK\"} onClick={function (e) {\r\n                            e.preventDefault();\r\n                            onClickDownFile(item.atchFileId, item.fileSn);\r\n                        }} download>\r\n                            {item.orignlFileNm}\r\n                        </a>\r\n                        <span>\r\n                            [{item.fileMg}byte]\r\n                        </span>\r\n                    </span>\r\n                </>\r\n            );\r\n\r\n            if (mode === CODE.MODE_MODIFY) {\r\n                filesTag.push(\r\n                    <>\r\n                        <button className=\"btn btn_delete\" onClick={(e) => {\r\n                            onClickDeleteFile(item.atchFileId, item.fileSn, index);\r\n                        }}></button>\r\n                    </>\r\n                );\r\n            }\r\n            filesTag.push(<br/>);\r\n        });\r\n    }\r\n    console.log(\"filesTag : \", filesTag);\r\n    console.groupEnd(\"EgovAttachFile\");\r\n    \r\n    return (\r\n        <dl>\r\n            <dt>첨부파일</dt>\r\n            <dd>\r\n                <span className=\"file_attach\">\r\n                    {filesTag}\r\n                    {(mode === CODE.MODE_MODIFY || mode === CODE.MODE_CREATE) && <input name=\"file_0\" id=\"egovComFileUploader\" type=\"file\" onChange={e => onChangeFileInput(e)}></input>}\r\n                </span>\r\n            </dd>\r\n        </dl>\r\n    );\r\n}\r\n\r\nexport default React.memo(EgovAttachFile);","C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\leftmenu\\EgovLeftNavIntro.jsx",[],"C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\leftmenu\\EgovLeftNavInform.jsx",[],"C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\leftmenu\\EgovLeftNavAbout.jsx",[],"C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\leftmenu\\EgovLeftNavSupport.jsx",[],"C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\EgovImageGallery.jsx",[],"C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\leftmenu\\EgovLeftNavAdmin.jsx",[],"C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\EgovRadioButtonGroup.jsx",[],"C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\EgovSelect.jsx",["396","397"],"import React, { useState } from 'react';\r\n\r\nfunction EgovSelect({ id, name, title, options, setValue, setter }) {\r\n    console.log(\"egovSelect\", id, name, title, options, setValue, setter);\r\n    return (\r\n        <select\r\n            id={id}\r\n            name={name}\r\n            title={title}\r\n            // defaultValue={setValue}\r\n            onChange={() => {\r\n                console.log(\"select Change!! : \", setValue);\r\n                setter(setValue)\r\n            }}>\r\n\r\n            {options.map((option, i) => {\r\n                let isSelect = option.value == setValue ? \"selected\" : \"\";\r\n                //let isSelect = option.value == setValue;\r\n                return (\r\n                    <option\r\n                        key={i}\r\n                        value={option.value}\r\n                        selected={isSelect}\r\n                    >\r\n                        {option.label}\r\n                    </option>)\r\n            })}\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default EgovSelect;","C:\\prj\\cnbcs_web_frontend\\src\\egov\\common\\EgovRadioButton.jsx",[],{"ruleId":"398","replacedBy":"399"},{"ruleId":"400","replacedBy":"401"},{"ruleId":"402","severity":1,"message":"403","line":58,"column":38,"nodeType":"404","messageId":"405","endLine":58,"endColumn":40},{"ruleId":"406","severity":1,"message":"407","line":90,"column":21,"nodeType":"408","messageId":"409","endLine":90,"endColumn":29},{"ruleId":"402","severity":1,"message":"403","line":26,"column":37,"nodeType":"404","messageId":"405","endLine":26,"endColumn":39},{"ruleId":"406","severity":1,"message":"410","line":1,"column":16,"nodeType":"408","messageId":"409","endLine":1,"endColumn":25},{"ruleId":"406","severity":1,"message":"411","line":2,"column":10,"nodeType":"408","messageId":"409","endLine":2,"endColumn":14},{"ruleId":"412","severity":1,"message":"413","line":13,"column":29,"nodeType":"414","endLine":13,"endColumn":57},{"ruleId":"412","severity":1,"message":"413","line":14,"column":29,"nodeType":"414","endLine":14,"endColumn":40},{"ruleId":"406","severity":1,"message":"411","line":2,"column":10,"nodeType":"408","messageId":"409","endLine":2,"endColumn":14},{"ruleId":"412","severity":1,"message":"413","line":13,"column":25,"nodeType":"414","endLine":13,"endColumn":53},{"ruleId":"412","severity":1,"message":"413","line":14,"column":25,"nodeType":"414","endLine":14,"endColumn":36},{"ruleId":"406","severity":1,"message":"415","line":15,"column":12,"nodeType":"408","messageId":"409","endLine":15,"endColumn":23},{"ruleId":"406","severity":1,"message":"416","line":16,"column":12,"nodeType":"408","messageId":"409","endLine":16,"endColumn":24},{"ruleId":"406","severity":1,"message":"411","line":2,"column":10,"nodeType":"408","messageId":"409","endLine":2,"endColumn":14},{"ruleId":"412","severity":1,"message":"413","line":13,"column":29,"nodeType":"414","endLine":13,"endColumn":57},{"ruleId":"412","severity":1,"message":"413","line":14,"column":29,"nodeType":"414","endLine":14,"endColumn":40},{"ruleId":"412","severity":1,"message":"413","line":53,"column":37,"nodeType":"414","endLine":53,"endColumn":73},{"ruleId":"406","severity":1,"message":"417","line":5,"column":8,"nodeType":"408","messageId":"409","endLine":5,"endColumn":11},{"ruleId":"412","severity":1,"message":"413","line":138,"column":33,"nodeType":"414","endLine":138,"endColumn":61},{"ruleId":"418","severity":1,"message":"419","line":30,"column":9,"nodeType":"420","messageId":"421","endLine":52,"endColumn":10},{"ruleId":"422","severity":1,"message":"423","line":127,"column":8,"nodeType":"424","endLine":127,"endColumn":10,"suggestions":"425"},{"ruleId":"422","severity":1,"message":"426","line":86,"column":8,"nodeType":"424","endLine":86,"endColumn":10,"suggestions":"427"},{"ruleId":"422","severity":1,"message":"428","line":109,"column":8,"nodeType":"424","endLine":109,"endColumn":101,"suggestions":"429"},{"ruleId":"422","severity":1,"message":"430","line":115,"column":8,"nodeType":"424","endLine":115,"endColumn":22,"suggestions":"431"},{"ruleId":"406","severity":1,"message":"432","line":9,"column":8,"nodeType":"408","messageId":"409","endLine":9,"endColumn":18},{"ruleId":"406","severity":1,"message":"433","line":22,"column":12,"nodeType":"408","messageId":"409","endLine":22,"endColumn":16},{"ruleId":"434","severity":1,"message":"435","line":69,"column":35,"nodeType":"436","messageId":"437","endLine":69,"endColumn":37},{"ruleId":"402","severity":1,"message":"403","line":70,"column":34,"nodeType":"404","messageId":"405","endLine":70,"endColumn":36},{"ruleId":"406","severity":1,"message":"438","line":75,"column":11,"nodeType":"408","messageId":"409","endLine":75,"endColumn":32},{"ruleId":"422","severity":1,"message":"426","line":107,"column":8,"nodeType":"424","endLine":107,"endColumn":10,"suggestions":"439"},{"ruleId":"418","severity":1,"message":"419","line":30,"column":9,"nodeType":"420","messageId":"421","endLine":52,"endColumn":10},{"ruleId":"422","severity":1,"message":"440","line":127,"column":8,"nodeType":"424","endLine":127,"endColumn":10,"suggestions":"441"},{"ruleId":"412","severity":1,"message":"413","line":200,"column":37,"nodeType":"414","endLine":204,"endColumn":44},{"ruleId":"406","severity":1,"message":"432","line":9,"column":8,"nodeType":"408","messageId":"409","endLine":9,"endColumn":18},{"ruleId":"406","severity":1,"message":"442","line":10,"column":8,"nodeType":"408","messageId":"409","endLine":10,"endColumn":22},{"ruleId":"443","severity":1,"message":"444","line":100,"column":72,"nodeType":"436","messageId":"445","endLine":117,"endColumn":26},{"ruleId":"422","severity":1,"message":"428","line":137,"column":8,"nodeType":"424","endLine":137,"endColumn":108,"suggestions":"446"},{"ruleId":"422","severity":1,"message":"430","line":143,"column":7,"nodeType":"424","endLine":143,"endColumn":21,"suggestions":"447"},{"ruleId":"422","severity":1,"message":"426","line":86,"column":8,"nodeType":"424","endLine":86,"endColumn":10,"suggestions":"448"},{"ruleId":"412","severity":1,"message":"413","line":159,"column":41,"nodeType":"414","endLine":162,"endColumn":44},{"ruleId":"434","severity":1,"message":"435","line":147,"column":44,"nodeType":"436","messageId":"437","endLine":147,"endColumn":46},{"ruleId":"434","severity":1,"message":"435","line":156,"column":86,"nodeType":"436","messageId":"437","endLine":156,"endColumn":88},{"ruleId":"422","severity":1,"message":"449","line":201,"column":8,"nodeType":"424","endLine":201,"endColumn":53,"suggestions":"450"},{"ruleId":"422","severity":1,"message":"451","line":207,"column":8,"nodeType":"424","endLine":207,"endColumn":22,"suggestions":"452"},{"ruleId":"406","severity":1,"message":"432","line":9,"column":8,"nodeType":"408","messageId":"409","endLine":9,"endColumn":18},{"ruleId":"434","severity":1,"message":"435","line":69,"column":35,"nodeType":"436","messageId":"437","endLine":69,"endColumn":37},{"ruleId":"402","severity":1,"message":"403","line":70,"column":34,"nodeType":"404","messageId":"405","endLine":70,"endColumn":36},{"ruleId":"422","severity":1,"message":"426","line":106,"column":8,"nodeType":"424","endLine":106,"endColumn":10,"suggestions":"453"},{"ruleId":"406","severity":1,"message":"411","line":2,"column":10,"nodeType":"408","messageId":"409","endLine":2,"endColumn":14},{"ruleId":"406","severity":1,"message":"417","line":5,"column":8,"nodeType":"408","messageId":"409","endLine":5,"endColumn":11},{"ruleId":"406","severity":1,"message":"454","line":24,"column":29,"nodeType":"408","messageId":"409","endLine":24,"endColumn":47},{"ruleId":"406","severity":1,"message":"455","line":25,"column":12,"nodeType":"408","messageId":"409","endLine":25,"endColumn":22},{"ruleId":"418","severity":1,"message":"419","line":28,"column":9,"nodeType":"420","messageId":"421","endLine":50,"endColumn":10},{"ruleId":"406","severity":1,"message":"456","line":92,"column":11,"nodeType":"408","messageId":"409","endLine":92,"endColumn":27},{"ruleId":"422","severity":1,"message":"440","line":102,"column":8,"nodeType":"424","endLine":102,"endColumn":10,"suggestions":"457"},{"ruleId":"412","severity":1,"message":"413","line":118,"column":29,"nodeType":"414","endLine":118,"endColumn":57},{"ruleId":"412","severity":1,"message":"413","line":119,"column":29,"nodeType":"414","endLine":119,"endColumn":40},{"ruleId":"412","severity":1,"message":"413","line":214,"column":37,"nodeType":"414","endLine":214,"endColumn":86},{"ruleId":"412","severity":1,"message":"413","line":215,"column":37,"nodeType":"414","endLine":215,"endColumn":86},{"ruleId":"412","severity":1,"message":"413","line":219,"column":37,"nodeType":"414","endLine":219,"endColumn":83},{"ruleId":"406","severity":1,"message":"458","line":10,"column":8,"nodeType":"408","messageId":"409","endLine":10,"endColumn":18},{"ruleId":"406","severity":1,"message":"459","line":26,"column":11,"nodeType":"408","messageId":"409","endLine":26,"endColumn":26},{"ruleId":"418","severity":1,"message":"419","line":32,"column":9,"nodeType":"420","messageId":"421","endLine":48,"endColumn":10},{"ruleId":"422","severity":1,"message":"423","line":146,"column":8,"nodeType":"424","endLine":146,"endColumn":10,"suggestions":"460"},{"ruleId":"406","severity":1,"message":"433","line":20,"column":12,"nodeType":"408","messageId":"409","endLine":20,"endColumn":16},{"ruleId":"422","severity":1,"message":"461","line":86,"column":8,"nodeType":"424","endLine":86,"endColumn":25,"suggestions":"462"},{"ruleId":"406","severity":1,"message":"458","line":10,"column":8,"nodeType":"408","messageId":"409","endLine":10,"endColumn":18},{"ruleId":"406","severity":1,"message":"459","line":22,"column":11,"nodeType":"408","messageId":"409","endLine":22,"endColumn":26},{"ruleId":"406","severity":1,"message":"454","line":28,"column":29,"nodeType":"408","messageId":"409","endLine":28,"endColumn":47},{"ruleId":"418","severity":1,"message":"419","line":31,"column":9,"nodeType":"420","messageId":"421","endLine":47,"endColumn":10},{"ruleId":"422","severity":1,"message":"423","line":149,"column":8,"nodeType":"424","endLine":149,"endColumn":10,"suggestions":"463"},{"ruleId":"412","severity":1,"message":"413","line":160,"column":29,"nodeType":"414","endLine":160,"endColumn":57},{"ruleId":"412","severity":1,"message":"413","line":161,"column":29,"nodeType":"414","endLine":161,"endColumn":40},{"ruleId":"406","severity":1,"message":"464","line":1,"column":38,"nodeType":"408","messageId":"409","endLine":1,"endColumn":44},{"ruleId":"406","severity":1,"message":"433","line":28,"column":12,"nodeType":"408","messageId":"409","endLine":28,"endColumn":16},{"ruleId":"418","severity":1,"message":"419","line":37,"column":9,"nodeType":"420","messageId":"421","endLine":52,"endColumn":10},{"ruleId":"422","severity":1,"message":"423","line":164,"column":8,"nodeType":"424","endLine":164,"endColumn":10,"suggestions":"465"},{"ruleId":"412","severity":1,"message":"413","line":329,"column":37,"nodeType":"414","endLine":329,"endColumn":86},{"ruleId":"406","severity":1,"message":"466","line":18,"column":9,"nodeType":"408","messageId":"409","endLine":18,"endColumn":18},{"ruleId":"406","severity":1,"message":"467","line":19,"column":9,"nodeType":"408","messageId":"409","endLine":19,"endColumn":18},{"ruleId":"406","severity":1,"message":"433","line":21,"column":12,"nodeType":"408","messageId":"409","endLine":21,"endColumn":16},{"ruleId":"422","severity":1,"message":"428","line":89,"column":8,"nodeType":"424","endLine":89,"endColumn":10,"suggestions":"468"},{"ruleId":"406","severity":1,"message":"433","line":26,"column":12,"nodeType":"408","messageId":"409","endLine":26,"endColumn":16},{"ruleId":"422","severity":1,"message":"426","line":86,"column":8,"nodeType":"424","endLine":86,"endColumn":10,"suggestions":"469"},{"ruleId":"412","severity":1,"message":"413","line":154,"column":37,"nodeType":"414","endLine":157,"endColumn":40},{"ruleId":"418","severity":1,"message":"419","line":30,"column":9,"nodeType":"420","messageId":"421","endLine":52,"endColumn":10},{"ruleId":"422","severity":1,"message":"440","line":127,"column":8,"nodeType":"424","endLine":127,"endColumn":10,"suggestions":"470"},{"ruleId":"412","severity":1,"message":"413","line":201,"column":37,"nodeType":"414","endLine":205,"endColumn":44},{"ruleId":"406","severity":1,"message":"433","line":25,"column":12,"nodeType":"408","messageId":"409","endLine":25,"endColumn":16},{"ruleId":"406","severity":1,"message":"466","line":18,"column":9,"nodeType":"408","messageId":"409","endLine":18,"endColumn":18},{"ruleId":"406","severity":1,"message":"467","line":19,"column":9,"nodeType":"408","messageId":"409","endLine":19,"endColumn":18},{"ruleId":"406","severity":1,"message":"433","line":22,"column":12,"nodeType":"408","messageId":"409","endLine":22,"endColumn":16},{"ruleId":"422","severity":1,"message":"428","line":91,"column":8,"nodeType":"424","endLine":91,"endColumn":10,"suggestions":"471"},{"ruleId":"406","severity":1,"message":"433","line":25,"column":12,"nodeType":"408","messageId":"409","endLine":25,"endColumn":16},{"ruleId":"418","severity":1,"message":"419","line":30,"column":9,"nodeType":"420","messageId":"421","endLine":52,"endColumn":10},{"ruleId":"422","severity":1,"message":"440","line":127,"column":8,"nodeType":"424","endLine":127,"endColumn":10,"suggestions":"472"},{"ruleId":"412","severity":1,"message":"413","line":201,"column":37,"nodeType":"414","endLine":205,"endColumn":44},{"ruleId":"406","severity":1,"message":"433","line":27,"column":12,"nodeType":"408","messageId":"409","endLine":27,"endColumn":16},{"ruleId":"422","severity":1,"message":"426","line":86,"column":8,"nodeType":"424","endLine":86,"endColumn":10,"suggestions":"473"},{"ruleId":"412","severity":1,"message":"413","line":158,"column":37,"nodeType":"414","endLine":161,"endColumn":40},{"ruleId":"406","severity":1,"message":"474","line":1,"column":27,"nodeType":"408","messageId":"409","endLine":1,"endColumn":36},{"ruleId":"406","severity":1,"message":"411","line":2,"column":10,"nodeType":"408","messageId":"409","endLine":2,"endColumn":14},{"ruleId":"406","severity":1,"message":"475","line":18,"column":12,"nodeType":"408","messageId":"409","endLine":18,"endColumn":19},{"ruleId":"406","severity":1,"message":"411","line":2,"column":10,"nodeType":"408","messageId":"409","endLine":2,"endColumn":14},{"ruleId":"406","severity":1,"message":"476","line":36,"column":27,"nodeType":"408","messageId":"409","endLine":36,"endColumn":38},{"ruleId":"406","severity":1,"message":"477","line":1,"column":17,"nodeType":"408","messageId":"409","endLine":1,"endColumn":25},{"ruleId":"402","severity":1,"message":"403","line":17,"column":45,"nodeType":"404","messageId":"405","endLine":17,"endColumn":47},"no-native-reassign",["478"],"no-negated-in-lhs",["479"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'objClose' is assigned a value but never used.","Identifier","unusedVar","'Component' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'noticeBoard' is assigned a value but never used.","'gallaryBoard' is assigned a value but never used.","'URL' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initMode'. Either include it or remove the dependency array.","ArrayExpression",["480"],"React Hook useEffect has a missing dependency: 'retrieveDetail'. Either include it or remove the dependency array.",["481"],"React Hook useEffect has missing dependencies: 'retrieveList' and 'searchCondition'. Either include them or remove the dependency array.",["482"],"React Hook useEffect has a missing dependency: 'drawList'. Either include it or remove the dependency array.",["483"],"'EgovPaging' is defined but never used.","'user' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'onClickDeleteSchedule' is assigned a value but never used.",["484"],"React Hook useEffect has a missing dependency: 'intMode'. Either include it or remove the dependency array.",["485"],"'EgovAttachFile' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'keyPropertyCnt', 'keyPropertyCnt'.","unsafeRefs",["486"],["487"],["488"],"React Hook useEffect has a missing dependency: 'searchCondition'. Either include it or remove the dependency array.",["489"],"React Hook useEffect has a missing dependency: 'drawCalendar'. Either include it or remove the dependency array.",["490"],["491"],"'setUseAtRadioGroup' is assigned a value but never used.","'radioGroup' is assigned a value but never used.","'handleUseAtRadio' is assigned a value but never used.",["492"],"'EgovSelect' is defined but never used.","'searchCondition' is assigned a value but never used.",["493"],"React Hook useEffect has a missing dependency: 'retrieveList'. Either include it or remove the dependency array.",["494"],["495"],"'useRef' is defined but never used.",["496"],"'searchCnd' is assigned a value but never used.","'searchWrd' is assigned a value but never used.",["497"],["498"],["499"],["500"],["501"],["502"],"'useEffect' is defined but never used.","'loginVO' is assigned a value but never used.","'_deleteFile' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"503","fix":"504"},{"desc":"505","fix":"506"},{"desc":"507","fix":"508"},{"desc":"509","fix":"510"},{"desc":"505","fix":"511"},{"desc":"512","fix":"513"},{"desc":"514","fix":"515"},{"desc":"509","fix":"516"},{"desc":"505","fix":"517"},{"desc":"518","fix":"519"},{"desc":"520","fix":"521"},{"desc":"505","fix":"522"},{"desc":"512","fix":"523"},{"desc":"503","fix":"524"},{"desc":"525","fix":"526"},{"desc":"503","fix":"527"},{"desc":"503","fix":"528"},{"desc":"525","fix":"529"},{"desc":"505","fix":"530"},{"desc":"512","fix":"531"},{"desc":"525","fix":"532"},{"desc":"512","fix":"533"},{"desc":"505","fix":"534"},"Update the dependencies array to be: [initMode]",{"range":"535","text":"536"},"Update the dependencies array to be: [retrieveDetail]",{"range":"537","text":"538"},"Update the dependencies array to be: [searchCondition.schdulSe, searchCondition.year, searchCondition.month, searchCondition.date, retrieveList, searchCondition]",{"range":"539","text":"540"},"Update the dependencies array to be: [drawList, scheduleList]",{"range":"541","text":"542"},{"range":"543","text":"538"},"Update the dependencies array to be: [intMode]",{"range":"544","text":"545"},"Update the dependencies array to be: [searchCondition.schdulSe, searchCondition.year, searchCondition.month, searchCondition.weekOfMonth, retrieveList, searchCondition]",{"range":"546","text":"547"},{"range":"548","text":"542"},{"range":"549","text":"538"},"Update the dependencies array to be: [searchCondition.year, searchCondition.month, searchCondition]",{"range":"550","text":"551"},"Update the dependencies array to be: [drawCalendar, scheduleList]",{"range":"552","text":"553"},{"range":"554","text":"538"},{"range":"555","text":"545"},{"range":"556","text":"536"},"Update the dependencies array to be: [retrieveList, searchCondition]",{"range":"557","text":"558"},{"range":"559","text":"536"},{"range":"560","text":"536"},{"range":"561","text":"558"},{"range":"562","text":"538"},{"range":"563","text":"545"},{"range":"564","text":"558"},{"range":"565","text":"545"},{"range":"566","text":"538"},[4282,4284],"[initMode]",[2964,2966],"[retrieveDetail]",[3892,3985],"[searchCondition.schdulSe, searchCondition.year, searchCondition.month, searchCondition.date, retrieveList, searchCondition]",[4077,4091],"[drawList, scheduleList]",[3962,3964],[4287,4289],"[intMode]",[5783,5883],"[searchCondition.schdulSe, searchCondition.year, searchCondition.month, searchCondition.weekOfMonth, retrieveList, searchCondition]",[5974,5988],[2923,2925],[8959,9004],"[searchCondition.year, searchCondition.month, searchCondition]",[9100,9114],"[drawCalendar, scheduleList]",[3978,3980],[3586,3588],[5161,5163],[3484,3501],"[retrieveList, searchCondition]",[5028,5030],[6184,6186],[3540,3542],[2981,2983],[4298,4300],[3583,3585],[4305,4307],[2941,2943]]